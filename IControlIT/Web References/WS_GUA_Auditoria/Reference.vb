'------------------------------------------------------------------------------
' <auto-generated>
'     O código foi gerado por uma ferramenta.
'     Versão de Tempo de Execução:4.0.30319.42000
'
'     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
'     o código for gerado novamente.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'Este código-fonte foi gerado automaticamente por Microsoft.VSDesigner, Versão 4.0.30319.42000.
'
Namespace WS_GUA_Auditoria
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="WSAuditoriaSoap", [Namespace]:="http://tempuri.org/")>  _
    Partial Public Class WSAuditoria
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private Auditoria_AcompanhamentoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AuditoriaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Auditoria_ContestacaoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.IControlIT.My.MySettings.Default.Ativvus_WS_GUA_Auditoria_WSAuditoria
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event Auditoria_AcompanhamentoCompleted As Auditoria_AcompanhamentoCompletedEventHandler
        
        '''<remarks/>
        Public Event AuditoriaCompleted As AuditoriaCompletedEventHandler
        
        '''<remarks/>
        Public Event Auditoria_ContestacaoCompleted As Auditoria_ContestacaoCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Auditoria_Acompanhamento", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Auditoria_Acompanhamento(ByVal pPConn_Banco As String, ByVal pId_Auditoria_Acompanhamento As Integer, ByVal pId_Auditoria_Lote As Integer, ByVal pId_Auditoria_Conta As Integer, ByVal pId_Auditoria_Status As Integer, ByVal pDescricao As String, ByVal pData_Prevista As Date, ByVal pValor_Previsto As Double, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Auditoria_Acompanhamento", New Object() {pPConn_Banco, pId_Auditoria_Acompanhamento, pId_Auditoria_Lote, pId_Auditoria_Conta, pId_Auditoria_Status, pDescricao, pData_Prevista, pValor_Previsto, pId_Usuario_Permissao, pPakage, pRetorno})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Auditoria_AcompanhamentoAsync(ByVal pPConn_Banco As String, ByVal pId_Auditoria_Acompanhamento As Integer, ByVal pId_Auditoria_Lote As Integer, ByVal pId_Auditoria_Conta As Integer, ByVal pId_Auditoria_Status As Integer, ByVal pDescricao As String, ByVal pData_Prevista As Date, ByVal pValor_Previsto As Double, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean)
            Me.Auditoria_AcompanhamentoAsync(pPConn_Banco, pId_Auditoria_Acompanhamento, pId_Auditoria_Lote, pId_Auditoria_Conta, pId_Auditoria_Status, pDescricao, pData_Prevista, pValor_Previsto, pId_Usuario_Permissao, pPakage, pRetorno, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Auditoria_AcompanhamentoAsync(ByVal pPConn_Banco As String, ByVal pId_Auditoria_Acompanhamento As Integer, ByVal pId_Auditoria_Lote As Integer, ByVal pId_Auditoria_Conta As Integer, ByVal pId_Auditoria_Status As Integer, ByVal pDescricao As String, ByVal pData_Prevista As Date, ByVal pValor_Previsto As Double, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean, ByVal userState As Object)
            If (Me.Auditoria_AcompanhamentoOperationCompleted Is Nothing) Then
                Me.Auditoria_AcompanhamentoOperationCompleted = AddressOf Me.OnAuditoria_AcompanhamentoOperationCompleted
            End If
            Me.InvokeAsync("Auditoria_Acompanhamento", New Object() {pPConn_Banco, pId_Auditoria_Acompanhamento, pId_Auditoria_Lote, pId_Auditoria_Conta, pId_Auditoria_Status, pDescricao, pData_Prevista, pValor_Previsto, pId_Usuario_Permissao, pPakage, pRetorno}, Me.Auditoria_AcompanhamentoOperationCompleted, userState)
        End Sub
        
        Private Sub OnAuditoria_AcompanhamentoOperationCompleted(ByVal arg As Object)
            If (Not (Me.Auditoria_AcompanhamentoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Auditoria_AcompanhamentoCompleted(Me, New Auditoria_AcompanhamentoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Auditoria", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Auditoria(ByVal pPConn_Banco As String, ByVal pId_Auditoria_Lote As Integer, ByVal pId_Auditoria_Conta As Integer, ByVal pDt_Lote As String, ByVal pId_Conglomerado As Integer, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Auditoria", New Object() {pPConn_Banco, pId_Auditoria_Lote, pId_Auditoria_Conta, pDt_Lote, pId_Conglomerado, pId_Usuario_Permissao, pPakage, pRetorno})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AuditoriaAsync(ByVal pPConn_Banco As String, ByVal pId_Auditoria_Lote As Integer, ByVal pId_Auditoria_Conta As Integer, ByVal pDt_Lote As String, ByVal pId_Conglomerado As Integer, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean)
            Me.AuditoriaAsync(pPConn_Banco, pId_Auditoria_Lote, pId_Auditoria_Conta, pDt_Lote, pId_Conglomerado, pId_Usuario_Permissao, pPakage, pRetorno, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AuditoriaAsync(ByVal pPConn_Banco As String, ByVal pId_Auditoria_Lote As Integer, ByVal pId_Auditoria_Conta As Integer, ByVal pDt_Lote As String, ByVal pId_Conglomerado As Integer, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean, ByVal userState As Object)
            If (Me.AuditoriaOperationCompleted Is Nothing) Then
                Me.AuditoriaOperationCompleted = AddressOf Me.OnAuditoriaOperationCompleted
            End If
            Me.InvokeAsync("Auditoria", New Object() {pPConn_Banco, pId_Auditoria_Lote, pId_Auditoria_Conta, pDt_Lote, pId_Conglomerado, pId_Usuario_Permissao, pPakage, pRetorno}, Me.AuditoriaOperationCompleted, userState)
        End Sub
        
        Private Sub OnAuditoriaOperationCompleted(ByVal arg As Object)
            If (Not (Me.AuditoriaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AuditoriaCompleted(Me, New AuditoriaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Auditoria_Contestacao", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Auditoria_Contestacao(ByVal pPConn_Banco As String, ByVal pId_Fatura As Integer, ByVal pId_Auditoria_Contestacao As Integer, ByVal pDescricao As String, ByVal pDt_Lote As String, ByVal pId_Fatura_Parametro As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Auditoria_Contestacao", New Object() {pPConn_Banco, pId_Fatura, pId_Auditoria_Contestacao, pDescricao, pDt_Lote, pId_Fatura_Parametro, pPakage, pRetorno})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Auditoria_ContestacaoAsync(ByVal pPConn_Banco As String, ByVal pId_Fatura As Integer, ByVal pId_Auditoria_Contestacao As Integer, ByVal pDescricao As String, ByVal pDt_Lote As String, ByVal pId_Fatura_Parametro As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean)
            Me.Auditoria_ContestacaoAsync(pPConn_Banco, pId_Fatura, pId_Auditoria_Contestacao, pDescricao, pDt_Lote, pId_Fatura_Parametro, pPakage, pRetorno, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Auditoria_ContestacaoAsync(ByVal pPConn_Banco As String, ByVal pId_Fatura As Integer, ByVal pId_Auditoria_Contestacao As Integer, ByVal pDescricao As String, ByVal pDt_Lote As String, ByVal pId_Fatura_Parametro As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean, ByVal userState As Object)
            If (Me.Auditoria_ContestacaoOperationCompleted Is Nothing) Then
                Me.Auditoria_ContestacaoOperationCompleted = AddressOf Me.OnAuditoria_ContestacaoOperationCompleted
            End If
            Me.InvokeAsync("Auditoria_Contestacao", New Object() {pPConn_Banco, pId_Fatura, pId_Auditoria_Contestacao, pDescricao, pDt_Lote, pId_Fatura_Parametro, pPakage, pRetorno}, Me.Auditoria_ContestacaoOperationCompleted, userState)
        End Sub
        
        Private Sub OnAuditoria_ContestacaoOperationCompleted(ByVal arg As Object)
            If (Not (Me.Auditoria_ContestacaoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Auditoria_ContestacaoCompleted(Me, New Auditoria_ContestacaoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub Auditoria_AcompanhamentoCompletedEventHandler(ByVal sender As Object, ByVal e As Auditoria_AcompanhamentoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Auditoria_AcompanhamentoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub AuditoriaCompletedEventHandler(ByVal sender As Object, ByVal e As AuditoriaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AuditoriaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub Auditoria_ContestacaoCompletedEventHandler(ByVal sender As Object, ByVal e As Auditoria_ContestacaoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Auditoria_ContestacaoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
End Namespace
