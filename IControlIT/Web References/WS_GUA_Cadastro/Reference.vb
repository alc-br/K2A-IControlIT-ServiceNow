'------------------------------------------------------------------------------
' <auto-generated>
'     O código foi gerado por uma ferramenta.
'     Versão de Tempo de Execução:4.0.30319.42000
'
'     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
'     o código for gerado novamente.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'Este código-fonte foi gerado automaticamente por Microsoft.VSDesigner, Versão 4.0.30319.42000.
'
Namespace WS_GUA_Cadastro
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="WSCadastroSoap", [Namespace]:="http://tempuri.org/")>  _
    Partial Public Class WSCadastro
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private LixeiraOperationCompleted As System.Threading.SendOrPostCallback
        
        Private HierarquiaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DropListOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DropList_FiltroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RelacionamentoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Centro_CustoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DepartamentoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SetorOperationCompleted As System.Threading.SendOrPostCallback
        
        Private SecaoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CargoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Ativo_Tipo_Sub_GrupoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Ativo_Tipo_Grupo_TipoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Ativo_FabricanteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Bilhete_TipoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Ativo_TipoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Auditoria_StatusOperationCompleted As System.Threading.SendOrPostCallback
        
        Private HoldingOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Ativo_ModeloOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpresaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Empresa_ContratadaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConglomeradoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private FilialOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Ativo_Fr_AquisicaoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Ativo_ComplementoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ServicoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AtivoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Ativo_ParametroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Ativo_Porcentagem_RateioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InventarioLoteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsumidorOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Consumidor_TipoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Consumidor_UnidadeOperationCompleted As System.Threading.SendOrPostCallback
        
        Private UsuarioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Usuario_PerfilOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Usuario_GrupoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private MarcacaoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Bilhete_Historico_ResumoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Tronco_GrupoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private TroncoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Ativo_ReplaceOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Fatura_Parametro_CampoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Fatura_ParametroOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Consumidor_StatusOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Ativo_StatusOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Agenda_Marcacao_ParticularOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Contrato_StatusOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Custo_FixoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Custo_Fixo_ItemOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Ativo_VagoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Envia_LogOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Excedente_PoliticaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Estoque_Aparelho_StatusOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Solicitacao_SLAOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Solicitacao_TipoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Solicitacao_SolucaoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Solicitacao_Data_ParadaOperationCompleted As System.Threading.SendOrPostCallback

        Private Solicitacao_Fila_AtendimentoOperationCompleted As System.Threading.SendOrPostCallback

        Private Contrato_IndiceOperationCompleted As System.Threading.SendOrPostCallback

        Private Fatura_Nota_FiscalOperationCompleted As System.Threading.SendOrPostCallback

        Private useDefaultCredentialsSetExplicitly As Boolean

        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.IControlIT.My.MySettings.Default.Ativvus_WS_GUA_Cadastro_WSCadastro
            If (Me.IsLocalFileSystemWebService(Me.Url) = True) Then
                Me.UseDefaultCredentials = True
                Me.useDefaultCredentialsSetExplicitly = False
            Else
                Me.useDefaultCredentialsSetExplicitly = True
            End If
        End Sub

        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = True) _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = False)) _
                            AndAlso (Me.IsLocalFileSystemWebService(Value) = False)) Then
                    MyBase.UseDefaultCredentials = False
                End If
                MyBase.Url = Value
            End Set
        End Property

        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = Value
                Me.useDefaultCredentialsSetExplicitly = True
            End Set
        End Property

        '''<remarks/>
        Public Event LixeiraCompleted As LixeiraCompletedEventHandler

        '''<remarks/>
        Public Event HierarquiaCompleted As HierarquiaCompletedEventHandler

        '''<remarks/>
        Public Event DropListCompleted As DropListCompletedEventHandler

        '''<remarks/>
        Public Event DropList_FiltroCompleted As DropList_FiltroCompletedEventHandler

        '''<remarks/>
        Public Event RelacionamentoCompleted As RelacionamentoCompletedEventHandler

        '''<remarks/>
        Public Event Centro_CustoCompleted As Centro_CustoCompletedEventHandler

        '''<remarks/>
        Public Event DepartamentoCompleted As DepartamentoCompletedEventHandler

        '''<remarks/>
        Public Event SetorCompleted As SetorCompletedEventHandler

        '''<remarks/>
        Public Event SecaoCompleted As SecaoCompletedEventHandler

        '''<remarks/>
        Public Event CargoCompleted As CargoCompletedEventHandler

        '''<remarks/>
        Public Event Ativo_Tipo_Sub_GrupoCompleted As Ativo_Tipo_Sub_GrupoCompletedEventHandler

        '''<remarks/>
        Public Event Ativo_Tipo_Grupo_TipoCompleted As Ativo_Tipo_Grupo_TipoCompletedEventHandler

        '''<remarks/>
        Public Event Ativo_FabricanteCompleted As Ativo_FabricanteCompletedEventHandler

        '''<remarks/>
        Public Event Bilhete_TipoCompleted As Bilhete_TipoCompletedEventHandler

        '''<remarks/>
        Public Event Ativo_TipoCompleted As Ativo_TipoCompletedEventHandler

        '''<remarks/>
        Public Event Auditoria_StatusCompleted As Auditoria_StatusCompletedEventHandler

        '''<remarks/>
        Public Event HoldingCompleted As HoldingCompletedEventHandler

        '''<remarks/>
        Public Event Ativo_ModeloCompleted As Ativo_ModeloCompletedEventHandler

        '''<remarks/>
        Public Event EmpresaCompleted As EmpresaCompletedEventHandler

        '''<remarks/>
        Public Event Empresa_ContratadaCompleted As Empresa_ContratadaCompletedEventHandler

        '''<remarks/>
        Public Event ConglomeradoCompleted As ConglomeradoCompletedEventHandler

        '''<remarks/>
        Public Event FilialCompleted As FilialCompletedEventHandler

        '''<remarks/>
        Public Event Ativo_Fr_AquisicaoCompleted As Ativo_Fr_AquisicaoCompletedEventHandler

        '''<remarks/>
        Public Event Ativo_ComplementoCompleted As Ativo_ComplementoCompletedEventHandler

        '''<remarks/>
        Public Event ServicoCompleted As ServicoCompletedEventHandler

        '''<remarks/>
        Public Event AtivoCompleted As AtivoCompletedEventHandler

        '''<remarks/>
        Public Event Ativo_ParametroCompleted As Ativo_ParametroCompletedEventHandler

        '''<remarks/>
        Public Event Ativo_Porcentagem_RateioCompleted As Ativo_Porcentagem_RateioCompletedEventHandler

        '''<remarks/>
        Public Event InventarioLoteCompleted As InventarioLoteCompletedEventHandler

        '''<remarks/>
        Public Event ConsumidorCompleted As ConsumidorCompletedEventHandler

        '''<remarks/>
        Public Event Consumidor_TipoCompleted As Consumidor_TipoCompletedEventHandler

        '''<remarks/>
        Public Event Consumidor_UnidadeCompleted As Consumidor_UnidadeCompletedEventHandler

        '''<remarks/>
        Public Event UsuarioCompleted As UsuarioCompletedEventHandler

        '''<remarks/>
        Public Event Usuario_PerfilCompleted As Usuario_PerfilCompletedEventHandler

        '''<remarks/>
        Public Event Usuario_GrupoCompleted As Usuario_GrupoCompletedEventHandler

        '''<remarks/>
        Public Event MarcacaoCompleted As MarcacaoCompletedEventHandler

        '''<remarks/>
        Public Event Bilhete_Historico_ResumoCompleted As Bilhete_Historico_ResumoCompletedEventHandler

        '''<remarks/>
        Public Event Tronco_GrupoCompleted As Tronco_GrupoCompletedEventHandler

        '''<remarks/>
        Public Event TroncoCompleted As TroncoCompletedEventHandler

        '''<remarks/>
        Public Event Ativo_ReplaceCompleted As Ativo_ReplaceCompletedEventHandler

        '''<remarks/>
        Public Event Fatura_Parametro_CampoCompleted As Fatura_Parametro_CampoCompletedEventHandler

        '''<remarks/>
        Public Event Fatura_ParametroCompleted As Fatura_ParametroCompletedEventHandler

        '''<remarks/>
        Public Event Consumidor_StatusCompleted As Consumidor_StatusCompletedEventHandler

        '''<remarks/>
        Public Event Ativo_StatusCompleted As Ativo_StatusCompletedEventHandler

        '''<remarks/>
        Public Event Agenda_Marcacao_ParticularCompleted As Agenda_Marcacao_ParticularCompletedEventHandler

        '''<remarks/>
        Public Event Contrato_StatusCompleted As Contrato_StatusCompletedEventHandler

        '''<remarks/>
        Public Event Custo_FixoCompleted As Custo_FixoCompletedEventHandler

        '''<remarks/>
        Public Event Custo_Fixo_ItemCompleted As Custo_Fixo_ItemCompletedEventHandler

        '''<remarks/>
        Public Event Ativo_VagoCompleted As Ativo_VagoCompletedEventHandler

        '''<remarks/>
        Public Event Envia_LogCompleted As Envia_LogCompletedEventHandler

        '''<remarks/>
        Public Event Excedente_PoliticaCompleted As Excedente_PoliticaCompletedEventHandler

        '''<remarks/>
        Public Event Estoque_Aparelho_StatusCompleted As Estoque_Aparelho_StatusCompletedEventHandler

        '''<remarks/>
        Public Event Solicitacao_SLACompleted As Solicitacao_SLACompletedEventHandler

        '''<remarks/>
        Public Event Solicitacao_TipoCompleted As Solicitacao_TipoCompletedEventHandler

        '''<remarks/>
        Public Event Solicitacao_SolucaoCompleted As Solicitacao_SolucaoCompletedEventHandler

        '''<remarks/>
        Public Event Solicitacao_Data_ParadaCompleted As Solicitacao_Data_ParadaCompletedEventHandler

        '''<remarks/>
        Public Event Solicitacao_Fila_AtendimentoCompleted As Solicitacao_Fila_AtendimentoCompletedEventHandler

        '''<remarks/>
        Public Event Contrato_IndiceCompleted As Contrato_IndiceCompletedEventHandler

        '''<remarks/>
        Public Event Fatura_Nota_FiscalCompleted As Fatura_Nota_FiscalCompletedEventHandler

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Lixeira", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function Lixeira(ByVal pPConn_Banco As String, ByVal pId As Integer, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Lixeira", New Object() {pPConn_Banco, pId, pId_Usuario_Permissao, pPakage})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub LixeiraAsync(ByVal pPConn_Banco As String, ByVal pId As Integer, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String)
            Me.LixeiraAsync(pPConn_Banco, pId, pId_Usuario_Permissao, pPakage, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub LixeiraAsync(ByVal pPConn_Banco As String, ByVal pId As Integer, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal userState As Object)
            If (Me.LixeiraOperationCompleted Is Nothing) Then
                Me.LixeiraOperationCompleted = AddressOf Me.OnLixeiraOperationCompleted
            End If
            Me.InvokeAsync("Lixeira", New Object() {pPConn_Banco, pId, pId_Usuario_Permissao, pPakage}, Me.LixeiraOperationCompleted, userState)
        End Sub

        Private Sub OnLixeiraOperationCompleted(ByVal arg As Object)
            If (Not (Me.LixeiraCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LixeiraCompleted(Me, New LixeiraCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Hierarquia", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function Hierarquia(ByVal pPConn_Banco As String, ByVal pPakage As String, ByVal pChave As String, ByVal pId_Usuario As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Hierarquia", New Object() {pPConn_Banco, pPakage, pChave, pId_Usuario})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub HierarquiaAsync(ByVal pPConn_Banco As String, ByVal pPakage As String, ByVal pChave As String, ByVal pId_Usuario As String)
            Me.HierarquiaAsync(pPConn_Banco, pPakage, pChave, pId_Usuario, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub HierarquiaAsync(ByVal pPConn_Banco As String, ByVal pPakage As String, ByVal pChave As String, ByVal pId_Usuario As String, ByVal userState As Object)
            If (Me.HierarquiaOperationCompleted Is Nothing) Then
                Me.HierarquiaOperationCompleted = AddressOf Me.OnHierarquiaOperationCompleted
            End If
            Me.InvokeAsync("Hierarquia", New Object() {pPConn_Banco, pPakage, pChave, pId_Usuario}, Me.HierarquiaOperationCompleted, userState)
        End Sub

        Private Sub OnHierarquiaOperationCompleted(ByVal arg As Object)
            If (Not (Me.HierarquiaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent HierarquiaCompleted(Me, New HierarquiaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DropList", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function DropList(ByVal pPConn_Banco As String, ByVal pPakage As String, ByVal pDescricao As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("DropList", New Object() {pPConn_Banco, pPakage, pDescricao})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub DropListAsync(ByVal pPConn_Banco As String, ByVal pPakage As String, ByVal pDescricao As String)
            Me.DropListAsync(pPConn_Banco, pPakage, pDescricao, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub DropListAsync(ByVal pPConn_Banco As String, ByVal pPakage As String, ByVal pDescricao As String, ByVal userState As Object)
            If (Me.DropListOperationCompleted Is Nothing) Then
                Me.DropListOperationCompleted = AddressOf Me.OnDropListOperationCompleted
            End If
            Me.InvokeAsync("DropList", New Object() {pPConn_Banco, pPakage, pDescricao}, Me.DropListOperationCompleted, userState)
        End Sub

        Private Sub OnDropListOperationCompleted(ByVal arg As Object)
            If (Not (Me.DropListCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DropListCompleted(Me, New DropListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DropList_Filtro", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function DropList_Filtro(ByVal pPConn_Banco As String, ByVal pPakage As String, ByVal pFiltro_1 As Integer, ByVal pFiltro_2 As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("DropList_Filtro", New Object() {pPConn_Banco, pPakage, pFiltro_1, pFiltro_2})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub DropList_FiltroAsync(ByVal pPConn_Banco As String, ByVal pPakage As String, ByVal pFiltro_1 As Integer, ByVal pFiltro_2 As Integer)
            Me.DropList_FiltroAsync(pPConn_Banco, pPakage, pFiltro_1, pFiltro_2, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub DropList_FiltroAsync(ByVal pPConn_Banco As String, ByVal pPakage As String, ByVal pFiltro_1 As Integer, ByVal pFiltro_2 As Integer, ByVal userState As Object)
            If (Me.DropList_FiltroOperationCompleted Is Nothing) Then
                Me.DropList_FiltroOperationCompleted = AddressOf Me.OnDropList_FiltroOperationCompleted
            End If
            Me.InvokeAsync("DropList_Filtro", New Object() {pPConn_Banco, pPakage, pFiltro_1, pFiltro_2}, Me.DropList_FiltroOperationCompleted, userState)
        End Sub

        Private Sub OnDropList_FiltroOperationCompleted(ByVal arg As Object)
            If (Not (Me.DropList_FiltroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DropList_FiltroCompleted(Me, New DropList_FiltroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Relacionamento", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function Relacionamento(ByVal pPConn_Banco As String, ByVal pPakage As String, ByVal pChave As Integer, ByVal pRelacao As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Relacionamento", New Object() {pPConn_Banco, pPakage, pChave, pRelacao})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub RelacionamentoAsync(ByVal pPConn_Banco As String, ByVal pPakage As String, ByVal pChave As Integer, ByVal pRelacao As String)
            Me.RelacionamentoAsync(pPConn_Banco, pPakage, pChave, pRelacao, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub RelacionamentoAsync(ByVal pPConn_Banco As String, ByVal pPakage As String, ByVal pChave As Integer, ByVal pRelacao As String, ByVal userState As Object)
            If (Me.RelacionamentoOperationCompleted Is Nothing) Then
                Me.RelacionamentoOperationCompleted = AddressOf Me.OnRelacionamentoOperationCompleted
            End If
            Me.InvokeAsync("Relacionamento", New Object() {pPConn_Banco, pPakage, pChave, pRelacao}, Me.RelacionamentoOperationCompleted, userState)
        End Sub

        Private Sub OnRelacionamentoOperationCompleted(ByVal arg As Object)
            If (Not (Me.RelacionamentoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RelacionamentoCompleted(Me, New RelacionamentoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Centro_Custo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function Centro_Custo(ByVal pPConn_Banco As String, ByVal pId_Centro_Custo As Integer, ByVal pCd_Centro_Custo As String, ByVal pNm_Centro_Custo As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Centro_Custo", New Object() {pPConn_Banco, pId_Centro_Custo, pCd_Centro_Custo, pNm_Centro_Custo, pId_Usuario_Permissao, pPakage, pRetorno})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub Centro_CustoAsync(ByVal pPConn_Banco As String, ByVal pId_Centro_Custo As Integer, ByVal pCd_Centro_Custo As String, ByVal pNm_Centro_Custo As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean)
            Me.Centro_CustoAsync(pPConn_Banco, pId_Centro_Custo, pCd_Centro_Custo, pNm_Centro_Custo, pId_Usuario_Permissao, pPakage, pRetorno, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub Centro_CustoAsync(ByVal pPConn_Banco As String, ByVal pId_Centro_Custo As Integer, ByVal pCd_Centro_Custo As String, ByVal pNm_Centro_Custo As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean, ByVal userState As Object)
            If (Me.Centro_CustoOperationCompleted Is Nothing) Then
                Me.Centro_CustoOperationCompleted = AddressOf Me.OnCentro_CustoOperationCompleted
            End If
            Me.InvokeAsync("Centro_Custo", New Object() {pPConn_Banco, pId_Centro_Custo, pCd_Centro_Custo, pNm_Centro_Custo, pId_Usuario_Permissao, pPakage, pRetorno}, Me.Centro_CustoOperationCompleted, userState)
        End Sub

        Private Sub OnCentro_CustoOperationCompleted(ByVal arg As Object)
            If (Not (Me.Centro_CustoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Centro_CustoCompleted(Me, New Centro_CustoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Departamento", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function Departamento(ByVal pPConn_Banco As String, ByVal pId_Departamento As Integer, ByVal pNm_Departamento As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Departamento", New Object() {pPConn_Banco, pId_Departamento, pNm_Departamento, pId_Usuario_Permissao, pPakage, pRetorno})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub DepartamentoAsync(ByVal pPConn_Banco As String, ByVal pId_Departamento As Integer, ByVal pNm_Departamento As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean)
            Me.DepartamentoAsync(pPConn_Banco, pId_Departamento, pNm_Departamento, pId_Usuario_Permissao, pPakage, pRetorno, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub DepartamentoAsync(ByVal pPConn_Banco As String, ByVal pId_Departamento As Integer, ByVal pNm_Departamento As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean, ByVal userState As Object)
            If (Me.DepartamentoOperationCompleted Is Nothing) Then
                Me.DepartamentoOperationCompleted = AddressOf Me.OnDepartamentoOperationCompleted
            End If
            Me.InvokeAsync("Departamento", New Object() {pPConn_Banco, pId_Departamento, pNm_Departamento, pId_Usuario_Permissao, pPakage, pRetorno}, Me.DepartamentoOperationCompleted, userState)
        End Sub

        Private Sub OnDepartamentoOperationCompleted(ByVal arg As Object)
            If (Not (Me.DepartamentoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DepartamentoCompleted(Me, New DepartamentoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Setor", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function Setor(ByVal pPConn_Banco As String, ByVal pId_Setor As Integer, ByVal pNm_Setor As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Setor", New Object() {pPConn_Banco, pId_Setor, pNm_Setor, pId_Usuario_Permissao, pPakage, pRetorno})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub SetorAsync(ByVal pPConn_Banco As String, ByVal pId_Setor As Integer, ByVal pNm_Setor As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean)
            Me.SetorAsync(pPConn_Banco, pId_Setor, pNm_Setor, pId_Usuario_Permissao, pPakage, pRetorno, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub SetorAsync(ByVal pPConn_Banco As String, ByVal pId_Setor As Integer, ByVal pNm_Setor As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean, ByVal userState As Object)
            If (Me.SetorOperationCompleted Is Nothing) Then
                Me.SetorOperationCompleted = AddressOf Me.OnSetorOperationCompleted
            End If
            Me.InvokeAsync("Setor", New Object() {pPConn_Banco, pId_Setor, pNm_Setor, pId_Usuario_Permissao, pPakage, pRetorno}, Me.SetorOperationCompleted, userState)
        End Sub

        Private Sub OnSetorOperationCompleted(ByVal arg As Object)
            If (Not (Me.SetorCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SetorCompleted(Me, New SetorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Secao", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function Secao(ByVal pPConn_Banco As String, ByVal pId_Secao As Integer, ByVal pNm_Secao As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Secao", New Object() {pPConn_Banco, pId_Secao, pNm_Secao, pId_Usuario_Permissao, pPakage, pRetorno})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub SecaoAsync(ByVal pPConn_Banco As String, ByVal pId_Secao As Integer, ByVal pNm_Secao As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean)
            Me.SecaoAsync(pPConn_Banco, pId_Secao, pNm_Secao, pId_Usuario_Permissao, pPakage, pRetorno, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub SecaoAsync(ByVal pPConn_Banco As String, ByVal pId_Secao As Integer, ByVal pNm_Secao As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean, ByVal userState As Object)
            If (Me.SecaoOperationCompleted Is Nothing) Then
                Me.SecaoOperationCompleted = AddressOf Me.OnSecaoOperationCompleted
            End If
            Me.InvokeAsync("Secao", New Object() {pPConn_Banco, pId_Secao, pNm_Secao, pId_Usuario_Permissao, pPakage, pRetorno}, Me.SecaoOperationCompleted, userState)
        End Sub

        Private Sub OnSecaoOperationCompleted(ByVal arg As Object)
            If (Not (Me.SecaoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SecaoCompleted(Me, New SecaoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Cargo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function Cargo(ByVal pPConn_Banco As String, ByVal pId_Cargo As Integer, ByVal pNm_Cargo As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Cargo", New Object() {pPConn_Banco, pId_Cargo, pNm_Cargo, pId_Usuario_Permissao, pPakage, pRetorno})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub CargoAsync(ByVal pPConn_Banco As String, ByVal pId_Cargo As Integer, ByVal pNm_Cargo As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean)
            Me.CargoAsync(pPConn_Banco, pId_Cargo, pNm_Cargo, pId_Usuario_Permissao, pPakage, pRetorno, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub CargoAsync(ByVal pPConn_Banco As String, ByVal pId_Cargo As Integer, ByVal pNm_Cargo As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean, ByVal userState As Object)
            If (Me.CargoOperationCompleted Is Nothing) Then
                Me.CargoOperationCompleted = AddressOf Me.OnCargoOperationCompleted
            End If
            Me.InvokeAsync("Cargo", New Object() {pPConn_Banco, pId_Cargo, pNm_Cargo, pId_Usuario_Permissao, pPakage, pRetorno}, Me.CargoOperationCompleted, userState)
        End Sub

        Private Sub OnCargoOperationCompleted(ByVal arg As Object)
            If (Not (Me.CargoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CargoCompleted(Me, New CargoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Ativo_Tipo_Sub_Grupo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function Ativo_Tipo_Sub_Grupo(ByVal pPConn_Banco As String, ByVal pId_Ativo_Tipo_Sub_Grupo As Integer, ByVal pNm_Ativo_Tipo_Sub_Grupo As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Ativo_Tipo_Sub_Grupo", New Object() {pPConn_Banco, pId_Ativo_Tipo_Sub_Grupo, pNm_Ativo_Tipo_Sub_Grupo, pId_Usuario_Permissao, pPakage, pRetorno})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub Ativo_Tipo_Sub_GrupoAsync(ByVal pPConn_Banco As String, ByVal pId_Ativo_Tipo_Sub_Grupo As Integer, ByVal pNm_Ativo_Tipo_Sub_Grupo As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean)
            Me.Ativo_Tipo_Sub_GrupoAsync(pPConn_Banco, pId_Ativo_Tipo_Sub_Grupo, pNm_Ativo_Tipo_Sub_Grupo, pId_Usuario_Permissao, pPakage, pRetorno, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub Ativo_Tipo_Sub_GrupoAsync(ByVal pPConn_Banco As String, ByVal pId_Ativo_Tipo_Sub_Grupo As Integer, ByVal pNm_Ativo_Tipo_Sub_Grupo As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean, ByVal userState As Object)
            If (Me.Ativo_Tipo_Sub_GrupoOperationCompleted Is Nothing) Then
                Me.Ativo_Tipo_Sub_GrupoOperationCompleted = AddressOf Me.OnAtivo_Tipo_Sub_GrupoOperationCompleted
            End If
            Me.InvokeAsync("Ativo_Tipo_Sub_Grupo", New Object() {pPConn_Banco, pId_Ativo_Tipo_Sub_Grupo, pNm_Ativo_Tipo_Sub_Grupo, pId_Usuario_Permissao, pPakage, pRetorno}, Me.Ativo_Tipo_Sub_GrupoOperationCompleted, userState)
        End Sub

        Private Sub OnAtivo_Tipo_Sub_GrupoOperationCompleted(ByVal arg As Object)
            If (Not (Me.Ativo_Tipo_Sub_GrupoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Ativo_Tipo_Sub_GrupoCompleted(Me, New Ativo_Tipo_Sub_GrupoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Ativo_Tipo_Grupo_Tipo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function Ativo_Tipo_Grupo_Tipo(ByVal pPConn_Banco As String, ByVal pId_Ativo_Tipo_Grupo_Tipo As Integer, ByVal pNm_Ativo_Tipo_Grupo_Tipo As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Ativo_Tipo_Grupo_Tipo", New Object() {pPConn_Banco, pId_Ativo_Tipo_Grupo_Tipo, pNm_Ativo_Tipo_Grupo_Tipo, pId_Usuario_Permissao, pPakage, pRetorno})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub Ativo_Tipo_Grupo_TipoAsync(ByVal pPConn_Banco As String, ByVal pId_Ativo_Tipo_Grupo_Tipo As Integer, ByVal pNm_Ativo_Tipo_Grupo_Tipo As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean)
            Me.Ativo_Tipo_Grupo_TipoAsync(pPConn_Banco, pId_Ativo_Tipo_Grupo_Tipo, pNm_Ativo_Tipo_Grupo_Tipo, pId_Usuario_Permissao, pPakage, pRetorno, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub Ativo_Tipo_Grupo_TipoAsync(ByVal pPConn_Banco As String, ByVal pId_Ativo_Tipo_Grupo_Tipo As Integer, ByVal pNm_Ativo_Tipo_Grupo_Tipo As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean, ByVal userState As Object)
            If (Me.Ativo_Tipo_Grupo_TipoOperationCompleted Is Nothing) Then
                Me.Ativo_Tipo_Grupo_TipoOperationCompleted = AddressOf Me.OnAtivo_Tipo_Grupo_TipoOperationCompleted
            End If
            Me.InvokeAsync("Ativo_Tipo_Grupo_Tipo", New Object() {pPConn_Banco, pId_Ativo_Tipo_Grupo_Tipo, pNm_Ativo_Tipo_Grupo_Tipo, pId_Usuario_Permissao, pPakage, pRetorno}, Me.Ativo_Tipo_Grupo_TipoOperationCompleted, userState)
        End Sub

        Private Sub OnAtivo_Tipo_Grupo_TipoOperationCompleted(ByVal arg As Object)
            If (Not (Me.Ativo_Tipo_Grupo_TipoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Ativo_Tipo_Grupo_TipoCompleted(Me, New Ativo_Tipo_Grupo_TipoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Ativo_Fabricante", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function Ativo_Fabricante(ByVal pPConn_Banco As String, ByVal pId_Ativo_Fabricante As Integer, ByVal pNm_Ativo_Fabricante As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Ativo_Fabricante", New Object() {pPConn_Banco, pId_Ativo_Fabricante, pNm_Ativo_Fabricante, pId_Usuario_Permissao, pPakage, pRetorno})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub Ativo_FabricanteAsync(ByVal pPConn_Banco As String, ByVal pId_Ativo_Fabricante As Integer, ByVal pNm_Ativo_Fabricante As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean)
            Me.Ativo_FabricanteAsync(pPConn_Banco, pId_Ativo_Fabricante, pNm_Ativo_Fabricante, pId_Usuario_Permissao, pPakage, pRetorno, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub Ativo_FabricanteAsync(ByVal pPConn_Banco As String, ByVal pId_Ativo_Fabricante As Integer, ByVal pNm_Ativo_Fabricante As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean, ByVal userState As Object)
            If (Me.Ativo_FabricanteOperationCompleted Is Nothing) Then
                Me.Ativo_FabricanteOperationCompleted = AddressOf Me.OnAtivo_FabricanteOperationCompleted
            End If
            Me.InvokeAsync("Ativo_Fabricante", New Object() {pPConn_Banco, pId_Ativo_Fabricante, pNm_Ativo_Fabricante, pId_Usuario_Permissao, pPakage, pRetorno}, Me.Ativo_FabricanteOperationCompleted, userState)
        End Sub

        Private Sub OnAtivo_FabricanteOperationCompleted(ByVal arg As Object)
            If (Not (Me.Ativo_FabricanteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Ativo_FabricanteCompleted(Me, New Ativo_FabricanteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Bilhete_Tipo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function Bilhete_Tipo(ByVal pPConn_Banco As String, ByVal pId_Bilhete_Tipo As Integer, ByVal pId_Conglomerado As Integer, ByVal pNm_Bilhete_Tipo As String, ByVal pNm_Bilhete_Descricao As String, ByVal pUnidade As Integer, ByVal pTipo_Descricao As Integer, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Bilhete_Tipo", New Object() {pPConn_Banco, pId_Bilhete_Tipo, pId_Conglomerado, pNm_Bilhete_Tipo, pNm_Bilhete_Descricao, pUnidade, pTipo_Descricao, pId_Usuario_Permissao, pPakage, pRetorno})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub Bilhete_TipoAsync(ByVal pPConn_Banco As String, ByVal pId_Bilhete_Tipo As Integer, ByVal pId_Conglomerado As Integer, ByVal pNm_Bilhete_Tipo As String, ByVal pNm_Bilhete_Descricao As String, ByVal pUnidade As Integer, ByVal pTipo_Descricao As Integer, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean)
            Me.Bilhete_TipoAsync(pPConn_Banco, pId_Bilhete_Tipo, pId_Conglomerado, pNm_Bilhete_Tipo, pNm_Bilhete_Descricao, pUnidade, pTipo_Descricao, pId_Usuario_Permissao, pPakage, pRetorno, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub Bilhete_TipoAsync(ByVal pPConn_Banco As String, ByVal pId_Bilhete_Tipo As Integer, ByVal pId_Conglomerado As Integer, ByVal pNm_Bilhete_Tipo As String, ByVal pNm_Bilhete_Descricao As String, ByVal pUnidade As Integer, ByVal pTipo_Descricao As Integer, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean, ByVal userState As Object)
            If (Me.Bilhete_TipoOperationCompleted Is Nothing) Then
                Me.Bilhete_TipoOperationCompleted = AddressOf Me.OnBilhete_TipoOperationCompleted
            End If
            Me.InvokeAsync("Bilhete_Tipo", New Object() {pPConn_Banco, pId_Bilhete_Tipo, pId_Conglomerado, pNm_Bilhete_Tipo, pNm_Bilhete_Descricao, pUnidade, pTipo_Descricao, pId_Usuario_Permissao, pPakage, pRetorno}, Me.Bilhete_TipoOperationCompleted, userState)
        End Sub

        Private Sub OnBilhete_TipoOperationCompleted(ByVal arg As Object)
            If (Not (Me.Bilhete_TipoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Bilhete_TipoCompleted(Me, New Bilhete_TipoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Ativo_Tipo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function Ativo_Tipo(ByVal pPConn_Banco As String, ByVal pId_Ativo_Tipo As Integer, ByVal pNm_Ativo_Tipo As String, ByVal pId_Ativo_Tipo_Grupo As String, ByVal pEstoque_Regulador As String, ByVal pImagem As String, ByVal pPhoto As String, ByVal pId_Ativo_Tipo_Sub_Grupo As Integer, ByVal pId_Ativo_Tipo_Grupo_Tipo As Integer, ByVal pId_Conglomerado As Integer, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Ativo_Tipo", New Object() {pPConn_Banco, pId_Ativo_Tipo, pNm_Ativo_Tipo, pId_Ativo_Tipo_Grupo, pEstoque_Regulador, pImagem, pPhoto, pId_Ativo_Tipo_Sub_Grupo, pId_Ativo_Tipo_Grupo_Tipo, pId_Conglomerado, pId_Usuario_Permissao, pPakage, pRetorno})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub Ativo_TipoAsync(ByVal pPConn_Banco As String, ByVal pId_Ativo_Tipo As Integer, ByVal pNm_Ativo_Tipo As String, ByVal pId_Ativo_Tipo_Grupo As String, ByVal pEstoque_Regulador As String, ByVal pImagem As String, ByVal pPhoto As String, ByVal pId_Ativo_Tipo_Sub_Grupo As Integer, ByVal pId_Ativo_Tipo_Grupo_Tipo As Integer, ByVal pId_Conglomerado As Integer, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean)
            Me.Ativo_TipoAsync(pPConn_Banco, pId_Ativo_Tipo, pNm_Ativo_Tipo, pId_Ativo_Tipo_Grupo, pEstoque_Regulador, pImagem, pPhoto, pId_Ativo_Tipo_Sub_Grupo, pId_Ativo_Tipo_Grupo_Tipo, pId_Conglomerado, pId_Usuario_Permissao, pPakage, pRetorno, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub Ativo_TipoAsync(ByVal pPConn_Banco As String, ByVal pId_Ativo_Tipo As Integer, ByVal pNm_Ativo_Tipo As String, ByVal pId_Ativo_Tipo_Grupo As String, ByVal pEstoque_Regulador As String, ByVal pImagem As String, ByVal pPhoto As String, ByVal pId_Ativo_Tipo_Sub_Grupo As Integer, ByVal pId_Ativo_Tipo_Grupo_Tipo As Integer, ByVal pId_Conglomerado As Integer, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean, ByVal userState As Object)
            If (Me.Ativo_TipoOperationCompleted Is Nothing) Then
                Me.Ativo_TipoOperationCompleted = AddressOf Me.OnAtivo_TipoOperationCompleted
            End If
            Me.InvokeAsync("Ativo_Tipo", New Object() {pPConn_Banco, pId_Ativo_Tipo, pNm_Ativo_Tipo, pId_Ativo_Tipo_Grupo, pEstoque_Regulador, pImagem, pPhoto, pId_Ativo_Tipo_Sub_Grupo, pId_Ativo_Tipo_Grupo_Tipo, pId_Conglomerado, pId_Usuario_Permissao, pPakage, pRetorno}, Me.Ativo_TipoOperationCompleted, userState)
        End Sub

        Private Sub OnAtivo_TipoOperationCompleted(ByVal arg As Object)
            If (Not (Me.Ativo_TipoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Ativo_TipoCompleted(Me, New Ativo_TipoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Auditoria_Status", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function Auditoria_Status(ByVal pPConn_Banco As String, ByVal pId_Auditoria_Status As Integer, ByVal pNm_Auditoria_Status As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Auditoria_Status", New Object() {pPConn_Banco, pId_Auditoria_Status, pNm_Auditoria_Status, pId_Usuario_Permissao, pPakage, pRetorno})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub Auditoria_StatusAsync(ByVal pPConn_Banco As String, ByVal pId_Auditoria_Status As Integer, ByVal pNm_Auditoria_Status As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean)
            Me.Auditoria_StatusAsync(pPConn_Banco, pId_Auditoria_Status, pNm_Auditoria_Status, pId_Usuario_Permissao, pPakage, pRetorno, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub Auditoria_StatusAsync(ByVal pPConn_Banco As String, ByVal pId_Auditoria_Status As Integer, ByVal pNm_Auditoria_Status As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean, ByVal userState As Object)
            If (Me.Auditoria_StatusOperationCompleted Is Nothing) Then
                Me.Auditoria_StatusOperationCompleted = AddressOf Me.OnAuditoria_StatusOperationCompleted
            End If
            Me.InvokeAsync("Auditoria_Status", New Object() {pPConn_Banco, pId_Auditoria_Status, pNm_Auditoria_Status, pId_Usuario_Permissao, pPakage, pRetorno}, Me.Auditoria_StatusOperationCompleted, userState)
        End Sub

        Private Sub OnAuditoria_StatusOperationCompleted(ByVal arg As Object)
            If (Not (Me.Auditoria_StatusCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Auditoria_StatusCompleted(Me, New Auditoria_StatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Holding", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function Holding(ByVal pPConn_Banco As String, ByVal pId_Holding As Integer, ByVal pNm_Holding As String, ByVal pLogo As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Holding", New Object() {pPConn_Banco, pId_Holding, pNm_Holding, pLogo, pId_Usuario_Permissao, pPakage, pRetorno})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub HoldingAsync(ByVal pPConn_Banco As String, ByVal pId_Holding As Integer, ByVal pNm_Holding As String, ByVal pLogo As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean)
            Me.HoldingAsync(pPConn_Banco, pId_Holding, pNm_Holding, pLogo, pId_Usuario_Permissao, pPakage, pRetorno, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub HoldingAsync(ByVal pPConn_Banco As String, ByVal pId_Holding As Integer, ByVal pNm_Holding As String, ByVal pLogo As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean, ByVal userState As Object)
            If (Me.HoldingOperationCompleted Is Nothing) Then
                Me.HoldingOperationCompleted = AddressOf Me.OnHoldingOperationCompleted
            End If
            Me.InvokeAsync("Holding", New Object() {pPConn_Banco, pId_Holding, pNm_Holding, pLogo, pId_Usuario_Permissao, pPakage, pRetorno}, Me.HoldingOperationCompleted, userState)
        End Sub

        Private Sub OnHoldingOperationCompleted(ByVal arg As Object)
            If (Not (Me.HoldingCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent HoldingCompleted(Me, New HoldingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Ativo_Modelo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function Ativo_Modelo(ByVal pPConn_Banco As String, ByVal pId_Ativo_Modelo As Integer, ByVal pNm_Ativo_Modelo As String, ByVal pId_Ativo_Tipo As Integer, ByVal pId_Ativo_Fabricante As Integer, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Ativo_Modelo", New Object() {pPConn_Banco, pId_Ativo_Modelo, pNm_Ativo_Modelo, pId_Ativo_Tipo, pId_Ativo_Fabricante, pId_Usuario_Permissao, pPakage, pRetorno})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub Ativo_ModeloAsync(ByVal pPConn_Banco As String, ByVal pId_Ativo_Modelo As Integer, ByVal pNm_Ativo_Modelo As String, ByVal pId_Ativo_Tipo As Integer, ByVal pId_Ativo_Fabricante As Integer, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean)
            Me.Ativo_ModeloAsync(pPConn_Banco, pId_Ativo_Modelo, pNm_Ativo_Modelo, pId_Ativo_Tipo, pId_Ativo_Fabricante, pId_Usuario_Permissao, pPakage, pRetorno, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub Ativo_ModeloAsync(ByVal pPConn_Banco As String, ByVal pId_Ativo_Modelo As Integer, ByVal pNm_Ativo_Modelo As String, ByVal pId_Ativo_Tipo As Integer, ByVal pId_Ativo_Fabricante As Integer, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean, ByVal userState As Object)
            If (Me.Ativo_ModeloOperationCompleted Is Nothing) Then
                Me.Ativo_ModeloOperationCompleted = AddressOf Me.OnAtivo_ModeloOperationCompleted
            End If
            Me.InvokeAsync("Ativo_Modelo", New Object() {pPConn_Banco, pId_Ativo_Modelo, pNm_Ativo_Modelo, pId_Ativo_Tipo, pId_Ativo_Fabricante, pId_Usuario_Permissao, pPakage, pRetorno}, Me.Ativo_ModeloOperationCompleted, userState)
        End Sub

        Private Sub OnAtivo_ModeloOperationCompleted(ByVal arg As Object)
            If (Not (Me.Ativo_ModeloCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Ativo_ModeloCompleted(Me, New Ativo_ModeloCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Empresa", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function Empresa(ByVal pPConn_Banco As String, ByVal pId_Empresa As Integer, ByVal pNm_Empresa As String, ByVal pId_Holding As Integer, ByVal pCNPJ As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Empresa", New Object() {pPConn_Banco, pId_Empresa, pNm_Empresa, pId_Holding, pCNPJ, pId_Usuario_Permissao, pPakage, pRetorno})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub EmpresaAsync(ByVal pPConn_Banco As String, ByVal pId_Empresa As Integer, ByVal pNm_Empresa As String, ByVal pId_Holding As Integer, ByVal pCNPJ As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean)
            Me.EmpresaAsync(pPConn_Banco, pId_Empresa, pNm_Empresa, pId_Holding, pCNPJ, pId_Usuario_Permissao, pPakage, pRetorno, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub EmpresaAsync(ByVal pPConn_Banco As String, ByVal pId_Empresa As Integer, ByVal pNm_Empresa As String, ByVal pId_Holding As Integer, ByVal pCNPJ As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean, ByVal userState As Object)
            If (Me.EmpresaOperationCompleted Is Nothing) Then
                Me.EmpresaOperationCompleted = AddressOf Me.OnEmpresaOperationCompleted
            End If
            Me.InvokeAsync("Empresa", New Object() {pPConn_Banco, pId_Empresa, pNm_Empresa, pId_Holding, pCNPJ, pId_Usuario_Permissao, pPakage, pRetorno}, Me.EmpresaOperationCompleted, userState)
        End Sub

        Private Sub OnEmpresaOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpresaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpresaCompleted(Me, New EmpresaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Empresa_Contratada", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function Empresa_Contratada(ByVal pPConn_Banco As String, ByVal pId_Empresa_Contratada As Integer, ByVal pNm_Empresa_Contratada As String, ByVal pCNPJ As String, ByVal pContato As String, ByVal pTelefone As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Empresa_Contratada", New Object() {pPConn_Banco, pId_Empresa_Contratada, pNm_Empresa_Contratada, pCNPJ, pContato, pTelefone, pId_Usuario_Permissao, pPakage, pRetorno})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub Empresa_ContratadaAsync(ByVal pPConn_Banco As String, ByVal pId_Empresa_Contratada As Integer, ByVal pNm_Empresa_Contratada As String, ByVal pCNPJ As String, ByVal pContato As String, ByVal pTelefone As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean)
            Me.Empresa_ContratadaAsync(pPConn_Banco, pId_Empresa_Contratada, pNm_Empresa_Contratada, pCNPJ, pContato, pTelefone, pId_Usuario_Permissao, pPakage, pRetorno, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub Empresa_ContratadaAsync(ByVal pPConn_Banco As String, ByVal pId_Empresa_Contratada As Integer, ByVal pNm_Empresa_Contratada As String, ByVal pCNPJ As String, ByVal pContato As String, ByVal pTelefone As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean, ByVal userState As Object)
            If (Me.Empresa_ContratadaOperationCompleted Is Nothing) Then
                Me.Empresa_ContratadaOperationCompleted = AddressOf Me.OnEmpresa_ContratadaOperationCompleted
            End If
            Me.InvokeAsync("Empresa_Contratada", New Object() {pPConn_Banco, pId_Empresa_Contratada, pNm_Empresa_Contratada, pCNPJ, pContato, pTelefone, pId_Usuario_Permissao, pPakage, pRetorno}, Me.Empresa_ContratadaOperationCompleted, userState)
        End Sub

        Private Sub OnEmpresa_ContratadaOperationCompleted(ByVal arg As Object)
            If (Not (Me.Empresa_ContratadaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Empresa_ContratadaCompleted(Me, New Empresa_ContratadaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Conglomerado", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function Conglomerado(ByVal pPConn_Banco As String, ByVal pId_Conglomerado As Integer, ByVal pNm_Conglomerado As String, ByVal pContato As String, ByVal pTelefone As String, ByVal pCodigo_Operadora As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Conglomerado", New Object() {pPConn_Banco, pId_Conglomerado, pNm_Conglomerado, pContato, pTelefone, pCodigo_Operadora, pId_Usuario_Permissao, pPakage, pRetorno})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub ConglomeradoAsync(ByVal pPConn_Banco As String, ByVal pId_Conglomerado As Integer, ByVal pNm_Conglomerado As String, ByVal pContato As String, ByVal pTelefone As String, ByVal pCodigo_Operadora As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean)
            Me.ConglomeradoAsync(pPConn_Banco, pId_Conglomerado, pNm_Conglomerado, pContato, pTelefone, pCodigo_Operadora, pId_Usuario_Permissao, pPakage, pRetorno, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub ConglomeradoAsync(ByVal pPConn_Banco As String, ByVal pId_Conglomerado As Integer, ByVal pNm_Conglomerado As String, ByVal pContato As String, ByVal pTelefone As String, ByVal pCodigo_Operadora As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean, ByVal userState As Object)
            If (Me.ConglomeradoOperationCompleted Is Nothing) Then
                Me.ConglomeradoOperationCompleted = AddressOf Me.OnConglomeradoOperationCompleted
            End If
            Me.InvokeAsync("Conglomerado", New Object() {pPConn_Banco, pId_Conglomerado, pNm_Conglomerado, pContato, pTelefone, pCodigo_Operadora, pId_Usuario_Permissao, pPakage, pRetorno}, Me.ConglomeradoOperationCompleted, userState)
        End Sub

        Private Sub OnConglomeradoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConglomeradoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConglomeradoCompleted(Me, New ConglomeradoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Filial", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function Filial(ByVal pPConn_Banco As String, ByVal pId_Filial As Integer, ByVal pNm_Filial As String, ByVal pCNPJ As String, ByVal pEndereco As String, ByVal pId_Empresa As Integer, ByVal pHi_Departamento As Integer, ByVal pHi_Setor As Integer, ByVal pHi_Secao As Integer, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Filial", New Object() {pPConn_Banco, pId_Filial, pNm_Filial, pCNPJ, pEndereco, pId_Empresa, pHi_Departamento, pHi_Setor, pHi_Secao, pId_Usuario_Permissao, pPakage, pRetorno})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub FilialAsync(ByVal pPConn_Banco As String, ByVal pId_Filial As Integer, ByVal pNm_Filial As String, ByVal pCNPJ As String, ByVal pEndereco As String, ByVal pId_Empresa As Integer, ByVal pHi_Departamento As Integer, ByVal pHi_Setor As Integer, ByVal pHi_Secao As Integer, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean)
            Me.FilialAsync(pPConn_Banco, pId_Filial, pNm_Filial, pCNPJ, pEndereco, pId_Empresa, pHi_Departamento, pHi_Setor, pHi_Secao, pId_Usuario_Permissao, pPakage, pRetorno, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub FilialAsync(ByVal pPConn_Banco As String, ByVal pId_Filial As Integer, ByVal pNm_Filial As String, ByVal pCNPJ As String, ByVal pEndereco As String, ByVal pId_Empresa As Integer, ByVal pHi_Departamento As Integer, ByVal pHi_Setor As Integer, ByVal pHi_Secao As Integer, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean, ByVal userState As Object)
            If (Me.FilialOperationCompleted Is Nothing) Then
                Me.FilialOperationCompleted = AddressOf Me.OnFilialOperationCompleted
            End If
            Me.InvokeAsync("Filial", New Object() {pPConn_Banco, pId_Filial, pNm_Filial, pCNPJ, pEndereco, pId_Empresa, pHi_Departamento, pHi_Setor, pHi_Secao, pId_Usuario_Permissao, pPakage, pRetorno}, Me.FilialOperationCompleted, userState)
        End Sub

        Private Sub OnFilialOperationCompleted(ByVal arg As Object)
            If (Not (Me.FilialCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FilialCompleted(Me, New FilialCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Ativo_Fr_Aquisicao", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function Ativo_Fr_Aquisicao(ByVal pPConn_Banco As String, ByVal pId_Ativo_Fr_Aquisicao As Integer, ByVal pNm_Ativo_Fr_Aquisicao As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Ativo_Fr_Aquisicao", New Object() {pPConn_Banco, pId_Ativo_Fr_Aquisicao, pNm_Ativo_Fr_Aquisicao, pId_Usuario_Permissao, pPakage, pRetorno})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub Ativo_Fr_AquisicaoAsync(ByVal pPConn_Banco As String, ByVal pId_Ativo_Fr_Aquisicao As Integer, ByVal pNm_Ativo_Fr_Aquisicao As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean)
            Me.Ativo_Fr_AquisicaoAsync(pPConn_Banco, pId_Ativo_Fr_Aquisicao, pNm_Ativo_Fr_Aquisicao, pId_Usuario_Permissao, pPakage, pRetorno, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub Ativo_Fr_AquisicaoAsync(ByVal pPConn_Banco As String, ByVal pId_Ativo_Fr_Aquisicao As Integer, ByVal pNm_Ativo_Fr_Aquisicao As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean, ByVal userState As Object)
            If (Me.Ativo_Fr_AquisicaoOperationCompleted Is Nothing) Then
                Me.Ativo_Fr_AquisicaoOperationCompleted = AddressOf Me.OnAtivo_Fr_AquisicaoOperationCompleted
            End If
            Me.InvokeAsync("Ativo_Fr_Aquisicao", New Object() {pPConn_Banco, pId_Ativo_Fr_Aquisicao, pNm_Ativo_Fr_Aquisicao, pId_Usuario_Permissao, pPakage, pRetorno}, Me.Ativo_Fr_AquisicaoOperationCompleted, userState)
        End Sub

        Private Sub OnAtivo_Fr_AquisicaoOperationCompleted(ByVal arg As Object)
            If (Not (Me.Ativo_Fr_AquisicaoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Ativo_Fr_AquisicaoCompleted(Me, New Ativo_Fr_AquisicaoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Ativo_Complemento", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function Ativo_Complemento(ByVal pPConn_Banco As String, ByVal pId_Ativo_Complemento As Integer, ByVal pNm_Ativo_Complemento As String, ByVal pId_Ativo_Tipo As Integer, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Ativo_Complemento", New Object() {pPConn_Banco, pId_Ativo_Complemento, pNm_Ativo_Complemento, pId_Ativo_Tipo, pId_Usuario_Permissao, pPakage, pRetorno})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub Ativo_ComplementoAsync(ByVal pPConn_Banco As String, ByVal pId_Ativo_Complemento As Integer, ByVal pNm_Ativo_Complemento As String, ByVal pId_Ativo_Tipo As Integer, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean)
            Me.Ativo_ComplementoAsync(pPConn_Banco, pId_Ativo_Complemento, pNm_Ativo_Complemento, pId_Ativo_Tipo, pId_Usuario_Permissao, pPakage, pRetorno, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub Ativo_ComplementoAsync(ByVal pPConn_Banco As String, ByVal pId_Ativo_Complemento As Integer, ByVal pNm_Ativo_Complemento As String, ByVal pId_Ativo_Tipo As Integer, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean, ByVal userState As Object)
            If (Me.Ativo_ComplementoOperationCompleted Is Nothing) Then
                Me.Ativo_ComplementoOperationCompleted = AddressOf Me.OnAtivo_ComplementoOperationCompleted
            End If
            Me.InvokeAsync("Ativo_Complemento", New Object() {pPConn_Banco, pId_Ativo_Complemento, pNm_Ativo_Complemento, pId_Ativo_Tipo, pId_Usuario_Permissao, pPakage, pRetorno}, Me.Ativo_ComplementoOperationCompleted, userState)
        End Sub

        Private Sub OnAtivo_ComplementoOperationCompleted(ByVal arg As Object)
            If (Not (Me.Ativo_ComplementoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Ativo_ComplementoCompleted(Me, New Ativo_ComplementoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Servico", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function Servico(ByVal pPConn_Banco As String, ByVal pId_Servico As Integer, ByVal pNm_Servico As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Servico", New Object() {pPConn_Banco, pId_Servico, pNm_Servico, pId_Usuario_Permissao, pPakage, pRetorno})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub ServicoAsync(ByVal pPConn_Banco As String, ByVal pId_Servico As Integer, ByVal pNm_Servico As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean)
            Me.ServicoAsync(pPConn_Banco, pId_Servico, pNm_Servico, pId_Usuario_Permissao, pPakage, pRetorno, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub ServicoAsync(ByVal pPConn_Banco As String, ByVal pId_Servico As Integer, ByVal pNm_Servico As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean, ByVal userState As Object)
            If (Me.ServicoOperationCompleted Is Nothing) Then
                Me.ServicoOperationCompleted = AddressOf Me.OnServicoOperationCompleted
            End If
            Me.InvokeAsync("Servico", New Object() {pPConn_Banco, pId_Servico, pNm_Servico, pId_Usuario_Permissao, pPakage, pRetorno}, Me.ServicoOperationCompleted, userState)
        End Sub

        Private Sub OnServicoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ServicoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ServicoCompleted(Me, New ServicoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Ativo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function Ativo(
                    ByVal pPConn_Banco As String,
                    ByVal pId_Ativo As Integer,
                    ByVal pNr_Ativo As String,
                    ByVal pFinalidade As String,
                    ByVal pId_Ativo_Tipo As Integer,
                    ByVal pId_Conglomerado As Integer,
                    ByVal pId_Ativo_Modelo As Integer,
                    ByVal pLocalidade As String,
                    ByVal pDt_Ativacao As Date,
                    ByVal pObservacao As String,
                    ByVal pAtivo_Complemento As String,
                    ByVal pId_Ativo_Status As Integer,
                    ByVal pArray_Consumidor As String,
                    ByVal pId_Usuario_Permissao As Integer,
                    ByVal pPakage As String,
                    ByVal pRetorno As Boolean,
                    Optional pEndereco As String = Nothing,
                    Optional pNumero_Sim_Card As String = Nothing,
                    Optional pValor_Contrato As String = Nothing,
                    Optional pPlano_Contrato As String = Nothing,
                    Optional pVelocidade As String = Nothing) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Ativo", New Object() {pPConn_Banco, pId_Ativo, pNr_Ativo, pFinalidade, pId_Ativo_Tipo, pId_Conglomerado, pId_Ativo_Modelo, pLocalidade, pDt_Ativacao, pObservacao, pAtivo_Complemento, pId_Ativo_Status, pArray_Consumidor, pId_Usuario_Permissao, pPakage, pRetorno, pEndereco, pNumero_Sim_Card, pValor_Contrato, pPlano_Contrato, pVelocidade})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub AtivoAsync(
                    ByVal pPConn_Banco As String,
                    ByVal pId_Ativo As Integer,
                    ByVal pNr_Ativo As String,
                    ByVal pFinalidade As String,
                    ByVal pId_Ativo_Tipo As Integer,
                    ByVal pId_Conglomerado As Integer,
                    ByVal pId_Ativo_Modelo As Integer,
                    ByVal pLocalidade As String,
                    ByVal pDt_Ativacao As Date,
                    ByVal pObservacao As String,
                    ByVal pAtivo_Complemento As String,
                    ByVal pId_Ativo_Status As Integer,
                    ByVal pArray_Consumidor As String,
                    ByVal pId_Usuario_Permissao As Integer,
                    ByVal pPakage As String,
                    ByVal pRetorno As Boolean,
                    ByVal pEndereco As String,
                    ByVal pNumero_Sim_Card As String,
                    ByVal pValor_Contrato As String,
                    ByVal pPlano_Contrato As String,
                    ByVal pVelocidade As String)
            Me.AtivoAsync(pPConn_Banco, pId_Ativo, pNr_Ativo, pFinalidade, pId_Ativo_Tipo, pId_Conglomerado, pId_Ativo_Modelo, pLocalidade, pDt_Ativacao, pObservacao, pAtivo_Complemento, pId_Ativo_Status, pArray_Consumidor, pId_Usuario_Permissao, pPakage, pRetorno, pEndereco, pNumero_Sim_Card, pValor_Contrato, pPlano_Contrato, pVelocidade, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub AtivoAsync(
                    ByVal pPConn_Banco As String,
                    ByVal pId_Ativo As Integer,
                    ByVal pNr_Ativo As String,
                    ByVal pFinalidade As String,
                    ByVal pId_Ativo_Tipo As Integer,
                    ByVal pId_Conglomerado As Integer,
                    ByVal pId_Ativo_Modelo As Integer,
                    ByVal pLocalidade As String,
                    ByVal pDt_Ativacao As Date,
                    ByVal pObservacao As String,
                    ByVal pAtivo_Complemento As String,
                    ByVal pId_Ativo_Status As Integer,
                    ByVal pArray_Consumidor As String,
                    ByVal pId_Usuario_Permissao As Integer,
                    ByVal pPakage As String,
                    ByVal pRetorno As Boolean,
                    ByVal pEndereco As String,
                    ByVal pNumero_Sim_Card As String,
                    ByVal pValor_Contrato As String,
                    ByVal pPlano_Contrato As String,
                    ByVal pVelocidade As String,
                    ByVal userState As Object)
            If (Me.AtivoOperationCompleted Is Nothing) Then
                Me.AtivoOperationCompleted = AddressOf Me.OnAtivoOperationCompleted
            End If
            Me.InvokeAsync("Ativo", New Object() {pPConn_Banco, pId_Ativo, pNr_Ativo, pFinalidade, pId_Ativo_Tipo, pId_Conglomerado, pId_Ativo_Modelo, pLocalidade, pDt_Ativacao, pObservacao, pAtivo_Complemento, pId_Ativo_Status, pArray_Consumidor, pId_Usuario_Permissao, pPakage, pRetorno, pEndereco, pNumero_Sim_Card, pValor_Contrato, pPlano_Contrato, pVelocidade}, Me.AtivoOperationCompleted, userState)
        End Sub

        Private Sub OnAtivoOperationCompleted(ByVal arg As Object)
            If (Not (Me.AtivoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AtivoCompleted(Me, New AtivoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Ativo_Parametro", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function Ativo_Parametro(ByVal pPConn_Banco As String, ByVal pId_Ativo As Integer, ByVal pDt_Termino_Garantia As Date, ByVal pId_Ativo_Fr_Aquisicao As Integer, ByVal pDt_Ini_Fr_Aquisicao As Date, ByVal pVr_Fr_Aquisicao As Double, ByVal pQtd_Mes_Residuo_Fr_Aquisicao As Integer, ByVal pRateio_Conglomerado As Integer, ByVal pId_Tronco_Grupo As Integer, ByVal pId_Conglomerado As Integer, ByVal pId_Contrato As Integer, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Ativo_Parametro", New Object() {pPConn_Banco, pId_Ativo, pDt_Termino_Garantia, pId_Ativo_Fr_Aquisicao, pDt_Ini_Fr_Aquisicao, pVr_Fr_Aquisicao, pQtd_Mes_Residuo_Fr_Aquisicao, pRateio_Conglomerado, pId_Tronco_Grupo, pId_Conglomerado, pId_Contrato, pId_Usuario_Permissao, pPakage, pRetorno})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub Ativo_ParametroAsync(ByVal pPConn_Banco As String, ByVal pId_Ativo As Integer, ByVal pDt_Termino_Garantia As Date, ByVal pId_Ativo_Fr_Aquisicao As Integer, ByVal pDt_Ini_Fr_Aquisicao As Date, ByVal pVr_Fr_Aquisicao As Double, ByVal pQtd_Mes_Residuo_Fr_Aquisicao As Integer, ByVal pRateio_Conglomerado As Integer, ByVal pId_Tronco_Grupo As Integer, ByVal pId_Conglomerado As Integer, ByVal pId_Contrato As Integer, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean)
            Me.Ativo_ParametroAsync(pPConn_Banco, pId_Ativo, pDt_Termino_Garantia, pId_Ativo_Fr_Aquisicao, pDt_Ini_Fr_Aquisicao, pVr_Fr_Aquisicao, pQtd_Mes_Residuo_Fr_Aquisicao, pRateio_Conglomerado, pId_Tronco_Grupo, pId_Conglomerado, pId_Contrato, pId_Usuario_Permissao, pPakage, pRetorno, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub Ativo_ParametroAsync(ByVal pPConn_Banco As String, ByVal pId_Ativo As Integer, ByVal pDt_Termino_Garantia As Date, ByVal pId_Ativo_Fr_Aquisicao As Integer, ByVal pDt_Ini_Fr_Aquisicao As Date, ByVal pVr_Fr_Aquisicao As Double, ByVal pQtd_Mes_Residuo_Fr_Aquisicao As Integer, ByVal pRateio_Conglomerado As Integer, ByVal pId_Tronco_Grupo As Integer, ByVal pId_Conglomerado As Integer, ByVal pId_Contrato As Integer, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean, ByVal userState As Object)
            If (Me.Ativo_ParametroOperationCompleted Is Nothing) Then
                Me.Ativo_ParametroOperationCompleted = AddressOf Me.OnAtivo_ParametroOperationCompleted
            End If
            Me.InvokeAsync("Ativo_Parametro", New Object() {pPConn_Banco, pId_Ativo, pDt_Termino_Garantia, pId_Ativo_Fr_Aquisicao, pDt_Ini_Fr_Aquisicao, pVr_Fr_Aquisicao, pQtd_Mes_Residuo_Fr_Aquisicao, pRateio_Conglomerado, pId_Tronco_Grupo, pId_Conglomerado, pId_Contrato, pId_Usuario_Permissao, pPakage, pRetorno}, Me.Ativo_ParametroOperationCompleted, userState)
        End Sub

        Private Sub OnAtivo_ParametroOperationCompleted(ByVal arg As Object)
            If (Not (Me.Ativo_ParametroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Ativo_ParametroCompleted(Me, New Ativo_ParametroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Ativo_Porcentagem_Rateio", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function Ativo_Porcentagem_Rateio(ByVal pPConn_Banco As String, ByVal pId_Ativo As Integer, ByVal pId_Centro_Custo As Integer, ByVal pPorcentagem As Integer, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Ativo_Porcentagem_Rateio", New Object() {pPConn_Banco, pId_Ativo, pId_Centro_Custo, pPorcentagem, pId_Usuario_Permissao, pPakage, pRetorno})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub Ativo_Porcentagem_RateioAsync(ByVal pPConn_Banco As String, ByVal pId_Ativo As Integer, ByVal pId_Centro_Custo As Integer, ByVal pPorcentagem As Integer, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean)
            Me.Ativo_Porcentagem_RateioAsync(pPConn_Banco, pId_Ativo, pId_Centro_Custo, pPorcentagem, pId_Usuario_Permissao, pPakage, pRetorno, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub Ativo_Porcentagem_RateioAsync(ByVal pPConn_Banco As String, ByVal pId_Ativo As Integer, ByVal pId_Centro_Custo As Integer, ByVal pPorcentagem As Integer, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean, ByVal userState As Object)
            If (Me.Ativo_Porcentagem_RateioOperationCompleted Is Nothing) Then
                Me.Ativo_Porcentagem_RateioOperationCompleted = AddressOf Me.OnAtivo_Porcentagem_RateioOperationCompleted
            End If
            Me.InvokeAsync("Ativo_Porcentagem_Rateio", New Object() {pPConn_Banco, pId_Ativo, pId_Centro_Custo, pPorcentagem, pId_Usuario_Permissao, pPakage, pRetorno}, Me.Ativo_Porcentagem_RateioOperationCompleted, userState)
        End Sub

        Private Sub OnAtivo_Porcentagem_RateioOperationCompleted(ByVal arg As Object)
            If (Not (Me.Ativo_Porcentagem_RateioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Ativo_Porcentagem_RateioCompleted(Me, New Ativo_Porcentagem_RateioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InventarioLote", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function InventarioLote(
                    ByVal pPConn_Banco As String,
                    ByVal pId_Consumidor As Integer,
                    ByVal pNm_Consumidor As String,
                    ByVal pId_Consumidor_Tipo As Integer,
                    ByVal pMatricula As String,
                    ByVal pEMail As String,
                    ByVal pEMail_Copia As String,
                    ByVal pFl_Nao_Envia_EMail As Integer,
                    ByVal pId_Empresa_Contratada As Integer,
                    ByVal pId_Cargo As Integer,
                    ByVal pId_Filial As Integer,
                    ByVal pId_Centro_Custo As Integer,
                    ByVal pId_Departamento As Integer,
                    ByVal pId_Setor As Integer,
                    ByVal pId_Secao As Integer,
                    ByVal pId_Consumidor_Status As Integer,
                    ByVal pMatricula_Chefia As String,
                    ByVal pId_Usuario_Permissao As Integer,
                    ByVal pId_Usuario As Integer,
                    ByVal pNm_Usuario As String,
                    ByVal pSenha As String,
                    ByVal pId_Idioma As Integer,
                    ByVal pId_Usuario_Grupo As Integer,
                    ByVal pId_Usuario_Perfil As Integer,
                    ByVal pId_Usuario_Perfil_Acesso As Integer,
                    ByVal pIncluir As Integer,
                    ByVal pAlterar As Integer,
                    ByVal pExcluir As Integer,
                    ByVal pDetalhamento_Conta As Integer,
                    ByVal pDetalhamento_Contato As Integer,
                    ByVal pFl_Desativado As Integer,
                    ByVal pPakage As String,
                    ByVal pRetorno As Boolean) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("InventarioLote", New Object() {pPConn_Banco, pId_Consumidor, pNm_Consumidor, pId_Consumidor_Tipo, pMatricula, pEMail, pEMail_Copia, pFl_Nao_Envia_EMail, pId_Empresa_Contratada, pId_Cargo, pId_Filial, pId_Centro_Custo, pId_Departamento, pId_Setor, pId_Secao, pId_Consumidor_Status, pMatricula_Chefia, pId_Usuario_Permissao, pId_Usuario, pNm_Usuario, pSenha, pId_Idioma, pId_Usuario_Grupo, pId_Usuario_Perfil, pId_Usuario_Perfil_Acesso, pIncluir, pAlterar, pExcluir, pDetalhamento_Conta, pDetalhamento_Contato, pFl_Desativado, pPakage, pRetorno})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub InventarioLoteAsync(
                    ByVal pPConn_Banco As String,
                    ByVal pId_Consumidor As Integer,
                    ByVal pNm_Consumidor As String,
                    ByVal pId_Consumidor_Tipo As Integer,
                    ByVal pMatricula As String,
                    ByVal pEMail As String,
                    ByVal pEMail_Copia As String,
                    ByVal pFl_Nao_Envia_EMail As Integer,
                    ByVal pId_Empresa_Contratada As Integer,
                    ByVal pId_Cargo As Integer,
                    ByVal pId_Filial As Integer,
                    ByVal pId_Centro_Custo As Integer,
                    ByVal pId_Departamento As Integer,
                    ByVal pId_Setor As Integer,
                    ByVal pId_Secao As Integer,
                    ByVal pId_Consumidor_Status As Integer,
                    ByVal pMatricula_Chefia As String,
                    ByVal pId_Usuario_Permissao As Integer,
                    ByVal pId_Usuario As Integer,
                    ByVal pNm_Usuario As String,
                    ByVal pSenha As String,
                    ByVal pId_Idioma As Integer,
                    ByVal pId_Usuario_Grupo As Integer,
                    ByVal pId_Usuario_Perfil As Integer,
                    ByVal pId_Usuario_Perfil_Acesso As Integer,
                    ByVal pIncluir As Integer,
                    ByVal pAlterar As Integer,
                    ByVal pExcluir As Integer,
                    ByVal pDetalhamento_Conta As Integer,
                    ByVal pDetalhamento_Contato As Integer,
                    ByVal pFl_Desativado As Integer,
                    ByVal pPakage As String,
                    ByVal pRetorno As Boolean)
            Me.InventarioLoteAsync(pPConn_Banco, pId_Consumidor, pNm_Consumidor, pId_Consumidor_Tipo, pMatricula, pEMail, pEMail_Copia, pFl_Nao_Envia_EMail, pId_Empresa_Contratada, pId_Cargo, pId_Filial, pId_Centro_Custo, pId_Departamento, pId_Setor, pId_Secao, pId_Consumidor_Status, pMatricula_Chefia, pId_Usuario_Permissao, pId_Usuario, pNm_Usuario, pSenha, pId_Idioma, pId_Usuario_Grupo, pId_Usuario_Perfil, pId_Usuario_Perfil_Acesso, pIncluir, pAlterar, pExcluir, pDetalhamento_Conta, pDetalhamento_Contato, pFl_Desativado, pPakage, pRetorno, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub InventarioLoteAsync(
                    ByVal pPConn_Banco As String,
                    ByVal pId_Consumidor As Integer,
                    ByVal pNm_Consumidor As String,
                    ByVal pId_Consumidor_Tipo As Integer,
                    ByVal pMatricula As String,
                    ByVal pEMail As String,
                    ByVal pEMail_Copia As String,
                    ByVal pFl_Nao_Envia_EMail As Integer,
                    ByVal pId_Empresa_Contratada As Integer,
                    ByVal pId_Cargo As Integer,
                    ByVal pId_Filial As Integer,
                    ByVal pId_Centro_Custo As Integer,
                    ByVal pId_Departamento As Integer,
                    ByVal pId_Setor As Integer,
                    ByVal pId_Secao As Integer,
                    ByVal pId_Consumidor_Status As Integer,
                    ByVal pMatricula_Chefia As String,
                    ByVal pId_Usuario_Permissao As Integer,
                    ByVal pId_Usuario As Integer,
                    ByVal pNm_Usuario As String,
                    ByVal pSenha As String,
                    ByVal pId_Idioma As Integer,
                    ByVal pId_Usuario_Grupo As Integer,
                    ByVal pId_Usuario_Perfil As Integer,
                    ByVal pId_Usuario_Perfil_Acesso As Integer,
                    ByVal pIncluir As Integer,
                    ByVal pAlterar As Integer,
                    ByVal pExcluir As Integer,
                    ByVal pDetalhamento_Conta As Integer,
                    ByVal pDetalhamento_Contato As Integer,
                    ByVal pFl_Desativado As Integer,
                    ByVal pPakage As String,
                    ByVal pRetorno As Boolean,
                    ByVal userState As Object)
            If (Me.InventarioLoteOperationCompleted Is Nothing) Then
                Me.InventarioLoteOperationCompleted = AddressOf Me.OnInventarioLoteOperationCompleted
            End If
            Me.InvokeAsync("InventarioLote", New Object() {pPConn_Banco, pId_Consumidor, pNm_Consumidor, pId_Consumidor_Tipo, pMatricula, pEMail, pEMail_Copia, pFl_Nao_Envia_EMail, pId_Empresa_Contratada, pId_Cargo, pId_Filial, pId_Centro_Custo, pId_Departamento, pId_Setor, pId_Secao, pId_Consumidor_Status, pMatricula_Chefia, pId_Usuario_Permissao, pId_Usuario, pNm_Usuario, pSenha, pId_Idioma, pId_Usuario_Grupo, pId_Usuario_Perfil, pId_Usuario_Perfil_Acesso, pIncluir, pAlterar, pExcluir, pDetalhamento_Conta, pDetalhamento_Contato, pFl_Desativado, pPakage, pRetorno}, Me.InventarioLoteOperationCompleted, userState)
        End Sub

        Private Sub OnInventarioLoteOperationCompleted(ByVal arg As Object)
            If (Not (Me.InventarioLoteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InventarioLoteCompleted(Me, New InventarioLoteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Consumidor", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function Consumidor(
                    ByVal pPConn_Banco As String,
                    ByVal pId_Consumidor As Integer,
                    ByVal pNm_Consumidor As String,
                    ByVal pId_Consumidor_Tipo As Integer,
                    ByVal pMatricula As String,
                    ByVal pEMail As String,
                    ByVal pEMail_Copia As String,
                    ByVal pFl_Nao_Envia_EMail As Integer,
                    ByVal pObservacao As String,
                    ByVal pId_Empresa_Contratada As Integer,
                    ByVal pId_Cargo As Integer,
                    ByVal pId_Filial As Integer,
                    ByVal pId_Centro_Custo As Integer,
                    ByVal pId_Departamento As Integer,
                    ByVal pId_Setor As Integer,
                    ByVal pId_Secao As Integer,
                    ByVal pId_Consumidor_Status As Integer,
                    ByVal pMatricula_Chefia As String,
                    ByVal pId_Usuario_Permissao As Integer,
                    ByVal pPakage As String,
                    ByVal pRetorno As Boolean) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Consumidor", New Object() {pPConn_Banco, pId_Consumidor, pNm_Consumidor, pId_Consumidor_Tipo, pMatricula, pEMail, pEMail_Copia, pFl_Nao_Envia_EMail, pObservacao, pId_Empresa_Contratada, pId_Cargo, pId_Filial, pId_Centro_Custo, pId_Departamento, pId_Setor, pId_Secao, pId_Consumidor_Status, pMatricula_Chefia, pId_Usuario_Permissao, pPakage, pRetorno})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub ConsumidorAsync(
                    ByVal pPConn_Banco As String,
                    ByVal pId_Consumidor As Integer,
                    ByVal pNm_Consumidor As String,
                    ByVal pId_Consumidor_Tipo As Integer,
                    ByVal pMatricula As String,
                    ByVal pEMail As String,
                    ByVal pEMail_Copia As String,
                    ByVal pFl_Nao_Envia_EMail As Integer,
                    ByVal pObservacao As String,
                    ByVal pId_Empresa_Contratada As Integer,
                    ByVal pId_Cargo As Integer,
                    ByVal pId_Filial As Integer,
                    ByVal pId_Centro_Custo As Integer,
                    ByVal pId_Departamento As Integer,
                    ByVal pId_Setor As Integer,
                    ByVal pId_Secao As Integer,
                    ByVal pId_Consumidor_Status As Integer,
                    ByVal pMatricula_Chefia As String,
                    ByVal pId_Usuario_Permissao As Integer,
                    ByVal pPakage As String,
                    ByVal pRetorno As Boolean)
            Me.ConsumidorAsync(pPConn_Banco, pId_Consumidor, pNm_Consumidor, pId_Consumidor_Tipo, pMatricula, pEMail, pEMail_Copia, pFl_Nao_Envia_EMail, pObservacao, pId_Empresa_Contratada, pId_Cargo, pId_Filial, pId_Centro_Custo, pId_Departamento, pId_Setor, pId_Secao, pId_Consumidor_Status, pMatricula_Chefia, pId_Usuario_Permissao, pPakage, pRetorno, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub ConsumidorAsync(
                    ByVal pPConn_Banco As String,
                    ByVal pId_Consumidor As Integer,
                    ByVal pNm_Consumidor As String,
                    ByVal pId_Consumidor_Tipo As Integer,
                    ByVal pMatricula As String,
                    ByVal pEMail As String,
                    ByVal pEMail_Copia As String,
                    ByVal pFl_Nao_Envia_EMail As Integer,
                    ByVal pObsevacao As String,
                    ByVal pId_Empresa_Contratada As Integer,
                    ByVal pId_Cargo As Integer,
                    ByVal pId_Filial As Integer,
                    ByVal pId_Centro_Custo As Integer,
                    ByVal pId_Departamento As Integer,
                    ByVal pId_Setor As Integer,
                    ByVal pId_Secao As Integer,
                    ByVal pId_Consumidor_Status As Integer,
                    ByVal pMatricula_Chefia As String,
                    ByVal pId_Usuario_Permissao As Integer,
                    ByVal pPakage As String,
                    ByVal pRetorno As Boolean,
                    ByVal userState As Object)
            If (Me.ConsumidorOperationCompleted Is Nothing) Then
                Me.ConsumidorOperationCompleted = AddressOf Me.OnConsumidorOperationCompleted
            End If
            Me.InvokeAsync("Consumidor", New Object() {pPConn_Banco, pId_Consumidor, pNm_Consumidor, pId_Consumidor_Tipo, pMatricula, pEMail, pEMail_Copia, pFl_Nao_Envia_EMail, pObsevacao, pId_Empresa_Contratada, pId_Cargo, pId_Filial, pId_Centro_Custo, pId_Departamento, pId_Setor, pId_Secao, pId_Consumidor_Status, pMatricula_Chefia, pId_Usuario_Permissao, pPakage, pRetorno}, Me.ConsumidorOperationCompleted, userState)
        End Sub

        Private Sub OnConsumidorOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsumidorCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsumidorCompleted(Me, New ConsumidorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Consumidor_Tipo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function Consumidor_Tipo(ByVal pPConn_Banco As String, ByVal pId_Consumidor_Tipo As Integer, ByVal pNm_Consumidor_Tipo As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Consumidor_Tipo", New Object() {pPConn_Banco, pId_Consumidor_Tipo, pNm_Consumidor_Tipo, pId_Usuario_Permissao, pPakage, pRetorno})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub Consumidor_TipoAsync(ByVal pPConn_Banco As String, ByVal pId_Consumidor_Tipo As Integer, ByVal pNm_Consumidor_Tipo As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean)
            Me.Consumidor_TipoAsync(pPConn_Banco, pId_Consumidor_Tipo, pNm_Consumidor_Tipo, pId_Usuario_Permissao, pPakage, pRetorno, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub Consumidor_TipoAsync(ByVal pPConn_Banco As String, ByVal pId_Consumidor_Tipo As Integer, ByVal pNm_Consumidor_Tipo As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean, ByVal userState As Object)
            If (Me.Consumidor_TipoOperationCompleted Is Nothing) Then
                Me.Consumidor_TipoOperationCompleted = AddressOf Me.OnConsumidor_TipoOperationCompleted
            End If
            Me.InvokeAsync("Consumidor_Tipo", New Object() {pPConn_Banco, pId_Consumidor_Tipo, pNm_Consumidor_Tipo, pId_Usuario_Permissao, pPakage, pRetorno}, Me.Consumidor_TipoOperationCompleted, userState)
        End Sub

        Private Sub OnConsumidor_TipoOperationCompleted(ByVal arg As Object)
            If (Not (Me.Consumidor_TipoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Consumidor_TipoCompleted(Me, New Consumidor_TipoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Consumidor_Unidade", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function Consumidor_Unidade(
                    ByVal pPConn_Banco As String,
                    ByVal pId_Consumidor_Unidade As Integer,
                    ByVal pId_Consumidor As Integer,
                    ByVal pNm_Unidade As String,
                    ByVal pCNPJ As String,
                    ByVal pIE As String,
                    ByVal pData_Ativacao As Date,
                    ByVal pObservacao As String,
                    ByVal pEntrega_Contato As String,
                    ByVal pEntrega_Endereco As String,
                    ByVal pEntrega_Telefone As String,
                    ByVal pFaturamento_Contato As String,
                    ByVal pFaturamento_Endereco As String,
                    ByVal pFaturamento_CNPJ As String,
                    ByVal pFaturamento_IE As String,
                    ByVal pFaturamento_Email As String,
                    ByVal pFaturamento_Telefone As String,
                    ByVal pMatricula As String,
                    ByVal pId_Conglomerado As Integer,
                    ByVal pArray As String,
                    ByVal pId_Usuario_Permissao As Integer,
                    ByVal pPakage As String,
                    ByVal pRetorno As Boolean) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Consumidor_Unidade", New Object() {pPConn_Banco, pId_Consumidor_Unidade, pId_Consumidor, pNm_Unidade, pCNPJ, pIE, pData_Ativacao, pObservacao, pEntrega_Contato, pEntrega_Endereco, pEntrega_Telefone, pFaturamento_Contato, pFaturamento_Endereco, pFaturamento_CNPJ, pFaturamento_IE, pFaturamento_Email, pFaturamento_Telefone, pMatricula, pId_Conglomerado, pArray, pId_Usuario_Permissao, pPakage, pRetorno})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub Consumidor_UnidadeAsync(
                    ByVal pPConn_Banco As String,
                    ByVal pId_Consumidor_Unidade As Integer,
                    ByVal pId_Consumidor As Integer,
                    ByVal pNm_Unidade As String,
                    ByVal pCNPJ As String,
                    ByVal pIE As String,
                    ByVal pData_Ativacao As Date,
                    ByVal pObservacao As String,
                    ByVal pEntrega_Contato As String,
                    ByVal pEntrega_Endereco As String,
                    ByVal pEntrega_Telefone As String,
                    ByVal pFaturamento_Contato As String,
                    ByVal pFaturamento_Endereco As String,
                    ByVal pFaturamento_CNPJ As String,
                    ByVal pFaturamento_IE As String,
                    ByVal pFaturamento_Email As String,
                    ByVal pFaturamento_Telefone As String,
                    ByVal pMatricula As String,
                    ByVal pId_Conglomerado As Integer,
                    ByVal pArray As String,
                    ByVal pId_Usuario_Permissao As Integer,
                    ByVal pPakage As String,
                    ByVal pRetorno As Boolean)
            Me.Consumidor_UnidadeAsync(pPConn_Banco, pId_Consumidor_Unidade, pId_Consumidor, pNm_Unidade, pCNPJ, pIE, pData_Ativacao, pObservacao, pEntrega_Contato, pEntrega_Endereco, pEntrega_Telefone, pFaturamento_Contato, pFaturamento_Endereco, pFaturamento_CNPJ, pFaturamento_IE, pFaturamento_Email, pFaturamento_Telefone, pMatricula, pId_Conglomerado, pArray, pId_Usuario_Permissao, pPakage, pRetorno, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub Consumidor_UnidadeAsync(
                    ByVal pPConn_Banco As String,
                    ByVal pId_Consumidor_Unidade As Integer,
                    ByVal pId_Consumidor As Integer,
                    ByVal pNm_Unidade As String,
                    ByVal pCNPJ As String,
                    ByVal pIE As String,
                    ByVal pData_Ativacao As Date,
                    ByVal pObservacao As String,
                    ByVal pEntrega_Contato As String,
                    ByVal pEntrega_Endereco As String,
                    ByVal pEntrega_Telefone As String,
                    ByVal pFaturamento_Contato As String,
                    ByVal pFaturamento_Endereco As String,
                    ByVal pFaturamento_CNPJ As String,
                    ByVal pFaturamento_IE As String,
                    ByVal pFaturamento_Email As String,
                    ByVal pFaturamento_Telefone As String,
                    ByVal pMatricula As String,
                    ByVal pId_Conglomerado As Integer,
                    ByVal pArray As String,
                    ByVal pId_Usuario_Permissao As Integer,
                    ByVal pPakage As String,
                    ByVal pRetorno As Boolean,
                    ByVal userState As Object)
            If (Me.Consumidor_UnidadeOperationCompleted Is Nothing) Then
                Me.Consumidor_UnidadeOperationCompleted = AddressOf Me.OnConsumidor_UnidadeOperationCompleted
            End If
            Me.InvokeAsync("Consumidor_Unidade", New Object() {pPConn_Banco, pId_Consumidor_Unidade, pId_Consumidor, pNm_Unidade, pCNPJ, pIE, pData_Ativacao, pObservacao, pEntrega_Contato, pEntrega_Endereco, pEntrega_Telefone, pFaturamento_Contato, pFaturamento_Endereco, pFaturamento_CNPJ, pFaturamento_IE, pFaturamento_Email, pFaturamento_Telefone, pMatricula, pId_Conglomerado, pArray, pId_Usuario_Permissao, pPakage, pRetorno}, Me.Consumidor_UnidadeOperationCompleted, userState)
        End Sub

        Private Sub OnConsumidor_UnidadeOperationCompleted(ByVal arg As Object)
            If (Not (Me.Consumidor_UnidadeCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Consumidor_UnidadeCompleted(Me, New Consumidor_UnidadeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Usuario", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function Usuario(
                    ByVal pPConn_Banco As String,
                    ByVal pId_Usuario As Integer,
                    ByVal pNm_Usuario As String,
                    ByVal pSenha As String,
                    ByVal pId_Consumidor As Integer,
                    ByVal pId_Idioma As Integer,
                    ByVal pId_Usuario_Grupo As Integer,
                    ByVal pId_Usuario_Perfil As Integer,
                    ByVal pId_Usuario_Perfil_Acesso As Integer,
                    ByVal pIncluir As Integer,
                    ByVal pAlterar As Integer,
                    ByVal pExcluir As Integer,
                    ByVal pDetalhamento_Conta As Integer,
                    ByVal pDetalhamento_Contato As Integer,
                    ByVal pFl_Desativado As Integer,
                    ByVal pId_Usuario_Permissao As Integer,
                    ByVal pPakage As String,
                    ByVal pRetorno As Boolean) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Usuario", New Object() {pPConn_Banco, pId_Usuario, pNm_Usuario, pSenha, pId_Consumidor, pId_Idioma, pId_Usuario_Grupo, pId_Usuario_Perfil, pId_Usuario_Perfil_Acesso, pIncluir, pAlterar, pExcluir, pDetalhamento_Conta, pDetalhamento_Contato, pFl_Desativado, pId_Usuario_Permissao, pPakage, pRetorno})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub UsuarioAsync(
                    ByVal pPConn_Banco As String,
                    ByVal pId_Usuario As Integer,
                    ByVal pNm_Usuario As String,
                    ByVal pSenha As String,
                    ByVal pId_Consumidor As Integer,
                    ByVal pId_Idioma As Integer,
                    ByVal pId_Usuario_Grupo As Integer,
                    ByVal pId_Usuario_Perfil As Integer,
                    ByVal pId_Usuario_Perfil_Acesso As Integer,
                    ByVal pIncluir As Integer,
                    ByVal pAlterar As Integer,
                    ByVal pExcluir As Integer,
                    ByVal pDetalhamento_Conta As Integer,
                    ByVal pDetalhamento_Contato As Integer,
                    ByVal pFl_Desativado As Integer,
                    ByVal pId_Usuario_Permissao As Integer,
                    ByVal pPakage As String,
                    ByVal pRetorno As Boolean)
            Me.UsuarioAsync(pPConn_Banco, pId_Usuario, pNm_Usuario, pSenha, pId_Consumidor, pId_Idioma, pId_Usuario_Grupo, pId_Usuario_Perfil, pId_Usuario_Perfil_Acesso, pIncluir, pAlterar, pExcluir, pDetalhamento_Conta, pDetalhamento_Contato, pFl_Desativado, pId_Usuario_Permissao, pPakage, pRetorno, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub UsuarioAsync(
                    ByVal pPConn_Banco As String,
                    ByVal pId_Usuario As Integer,
                    ByVal pNm_Usuario As String,
                    ByVal pSenha As String,
                    ByVal pId_Consumidor As Integer,
                    ByVal pId_Idioma As Integer,
                    ByVal pId_Usuario_Grupo As Integer,
                    ByVal pId_Usuario_Perfil As Integer,
                    ByVal pId_Usuario_Perfil_Acesso As Integer,
                    ByVal pIncluir As Integer,
                    ByVal pAlterar As Integer,
                    ByVal pExcluir As Integer,
                    ByVal pDetalhamento_Conta As Integer,
                    ByVal pDetalhamento_Contato As Integer,
                    ByVal pFl_Desativado As Integer,
                    ByVal pId_Usuario_Permissao As Integer,
                    ByVal pPakage As String,
                    ByVal pRetorno As Boolean,
                    ByVal userState As Object)
            If (Me.UsuarioOperationCompleted Is Nothing) Then
                Me.UsuarioOperationCompleted = AddressOf Me.OnUsuarioOperationCompleted
            End If
            Me.InvokeAsync("Usuario", New Object() {pPConn_Banco, pId_Usuario, pNm_Usuario, pSenha, pId_Consumidor, pId_Idioma, pId_Usuario_Grupo, pId_Usuario_Perfil, pId_Usuario_Perfil_Acesso, pIncluir, pAlterar, pExcluir, pDetalhamento_Conta, pDetalhamento_Contato, pFl_Desativado, pId_Usuario_Permissao, pPakage, pRetorno}, Me.UsuarioOperationCompleted, userState)
        End Sub

        Private Sub OnUsuarioOperationCompleted(ByVal arg As Object)
            If (Not (Me.UsuarioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent UsuarioCompleted(Me, New UsuarioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Usuario_Perfil", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function Usuario_Perfil(ByVal pPConn_Banco As String, ByVal pId_Usuario As Integer, ByVal pId_Consumidor As Integer, ByVal pDescricao As String, ByVal pRelacao As String, ByVal pId_Ativo As Integer, ByVal pDt_Ativacao As Date, ByVal pDt_Desativacao As Date, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Usuario_Perfil", New Object() {pPConn_Banco, pId_Usuario, pId_Consumidor, pDescricao, pRelacao, pId_Ativo, pDt_Ativacao, pDt_Desativacao, pId_Usuario_Permissao, pPakage, pRetorno})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub Usuario_PerfilAsync(ByVal pPConn_Banco As String, ByVal pId_Usuario As Integer, ByVal pId_Consumidor As Integer, ByVal pDescricao As String, ByVal pRelacao As String, ByVal pId_Ativo As Integer, ByVal pDt_Ativacao As Date, ByVal pDt_Desativacao As Date, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean)
            Me.Usuario_PerfilAsync(pPConn_Banco, pId_Usuario, pId_Consumidor, pDescricao, pRelacao, pId_Ativo, pDt_Ativacao, pDt_Desativacao, pId_Usuario_Permissao, pPakage, pRetorno, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub Usuario_PerfilAsync(ByVal pPConn_Banco As String, ByVal pId_Usuario As Integer, ByVal pId_Consumidor As Integer, ByVal pDescricao As String, ByVal pRelacao As String, ByVal pId_Ativo As Integer, ByVal pDt_Ativacao As Date, ByVal pDt_Desativacao As Date, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean, ByVal userState As Object)
            If (Me.Usuario_PerfilOperationCompleted Is Nothing) Then
                Me.Usuario_PerfilOperationCompleted = AddressOf Me.OnUsuario_PerfilOperationCompleted
            End If
            Me.InvokeAsync("Usuario_Perfil", New Object() {pPConn_Banco, pId_Usuario, pId_Consumidor, pDescricao, pRelacao, pId_Ativo, pDt_Ativacao, pDt_Desativacao, pId_Usuario_Permissao, pPakage, pRetorno}, Me.Usuario_PerfilOperationCompleted, userState)
        End Sub

        Private Sub OnUsuario_PerfilOperationCompleted(ByVal arg As Object)
            If (Not (Me.Usuario_PerfilCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Usuario_PerfilCompleted(Me, New Usuario_PerfilCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Usuario_Grupo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function Usuario_Grupo(ByVal pPConn_Banco As String, ByVal pId_Usuario_Grupo As Integer, ByVal pNm_Usuario_Grupo As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Usuario_Grupo", New Object() {pPConn_Banco, pId_Usuario_Grupo, pNm_Usuario_Grupo, pId_Usuario_Permissao, pPakage, pRetorno})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub Usuario_GrupoAsync(ByVal pPConn_Banco As String, ByVal pId_Usuario_Grupo As Integer, ByVal pNm_Usuario_Grupo As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean)
            Me.Usuario_GrupoAsync(pPConn_Banco, pId_Usuario_Grupo, pNm_Usuario_Grupo, pId_Usuario_Permissao, pPakage, pRetorno, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub Usuario_GrupoAsync(ByVal pPConn_Banco As String, ByVal pId_Usuario_Grupo As Integer, ByVal pNm_Usuario_Grupo As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean, ByVal userState As Object)
            If (Me.Usuario_GrupoOperationCompleted Is Nothing) Then
                Me.Usuario_GrupoOperationCompleted = AddressOf Me.OnUsuario_GrupoOperationCompleted
            End If
            Me.InvokeAsync("Usuario_Grupo", New Object() {pPConn_Banco, pId_Usuario_Grupo, pNm_Usuario_Grupo, pId_Usuario_Permissao, pPakage, pRetorno}, Me.Usuario_GrupoOperationCompleted, userState)
        End Sub

        Private Sub OnUsuario_GrupoOperationCompleted(ByVal arg As Object)
            If (Not (Me.Usuario_GrupoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Usuario_GrupoCompleted(Me, New Usuario_GrupoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Marcacao", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function Marcacao(ByVal pPConn_Banco As String, ByVal pId_Lote As Double, ByVal pDB_Destino As String, ByVal pId_Usuario As Integer, ByVal pId_Bilhete As Double, ByVal pDt_Lote As String, ByVal pId_Bilhete_Split As String, ByVal pPakage As String, ByVal pRetorno As Boolean) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Marcacao", New Object() {pPConn_Banco, pId_Lote, pDB_Destino, pId_Usuario, pId_Bilhete, pDt_Lote, pId_Bilhete_Split, pPakage, pRetorno})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub MarcacaoAsync(ByVal pPConn_Banco As String, ByVal pId_Lote As Double, ByVal pDB_Destino As String, ByVal pId_Usuario As Integer, ByVal pId_Bilhete As Double, ByVal pDt_Lote As String, ByVal pId_Bilhete_Split As String, ByVal pPakage As String, ByVal pRetorno As Boolean)
            Me.MarcacaoAsync(pPConn_Banco, pId_Lote, pDB_Destino, pId_Usuario, pId_Bilhete, pDt_Lote, pId_Bilhete_Split, pPakage, pRetorno, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub MarcacaoAsync(ByVal pPConn_Banco As String, ByVal pId_Lote As Double, ByVal pDB_Destino As String, ByVal pId_Usuario As Integer, ByVal pId_Bilhete As Double, ByVal pDt_Lote As String, ByVal pId_Bilhete_Split As String, ByVal pPakage As String, ByVal pRetorno As Boolean, ByVal userState As Object)
            If (Me.MarcacaoOperationCompleted Is Nothing) Then
                Me.MarcacaoOperationCompleted = AddressOf Me.OnMarcacaoOperationCompleted
            End If
            Me.InvokeAsync("Marcacao", New Object() {pPConn_Banco, pId_Lote, pDB_Destino, pId_Usuario, pId_Bilhete, pDt_Lote, pId_Bilhete_Split, pPakage, pRetorno}, Me.MarcacaoOperationCompleted, userState)
        End Sub

        Private Sub OnMarcacaoOperationCompleted(ByVal arg As Object)
            If (Not (Me.MarcacaoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent MarcacaoCompleted(Me, New MarcacaoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Bilhete_Historico_Resumo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Sub Bilhete_Historico_Resumo(ByVal pPConn_Banco As String, ByVal pId_Lote As Double, ByVal pId_Usuario As Integer, ByVal pTotal_Ligacao As Double, ByVal pValor_Politica As Double, ByVal pValor_Marcado As Double, ByVal pValor_Particular As Double, ByVal pPakage As String)
            Me.Invoke("Bilhete_Historico_Resumo", New Object() {pPConn_Banco, pId_Lote, pId_Usuario, pTotal_Ligacao, pValor_Politica, pValor_Marcado, pValor_Particular, pPakage})
        End Sub

        '''<remarks/>
        Public Overloads Sub Bilhete_Historico_ResumoAsync(ByVal pPConn_Banco As String, ByVal pId_Lote As Double, ByVal pId_Usuario As Integer, ByVal pTotal_Ligacao As Double, ByVal pValor_Politica As Double, ByVal pValor_Marcado As Double, ByVal pValor_Particular As Double, ByVal pPakage As String)
            Me.Bilhete_Historico_ResumoAsync(pPConn_Banco, pId_Lote, pId_Usuario, pTotal_Ligacao, pValor_Politica, pValor_Marcado, pValor_Particular, pPakage, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub Bilhete_Historico_ResumoAsync(ByVal pPConn_Banco As String, ByVal pId_Lote As Double, ByVal pId_Usuario As Integer, ByVal pTotal_Ligacao As Double, ByVal pValor_Politica As Double, ByVal pValor_Marcado As Double, ByVal pValor_Particular As Double, ByVal pPakage As String, ByVal userState As Object)
            If (Me.Bilhete_Historico_ResumoOperationCompleted Is Nothing) Then
                Me.Bilhete_Historico_ResumoOperationCompleted = AddressOf Me.OnBilhete_Historico_ResumoOperationCompleted
            End If
            Me.InvokeAsync("Bilhete_Historico_Resumo", New Object() {pPConn_Banco, pId_Lote, pId_Usuario, pTotal_Ligacao, pValor_Politica, pValor_Marcado, pValor_Particular, pPakage}, Me.Bilhete_Historico_ResumoOperationCompleted, userState)
        End Sub

        Private Sub OnBilhete_Historico_ResumoOperationCompleted(ByVal arg As Object)
            If (Not (Me.Bilhete_Historico_ResumoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Bilhete_Historico_ResumoCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Tronco_Grupo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function Tronco_Grupo(ByVal pPConn_Banco As String, ByVal pId_Tronco_Grupo As Integer, ByVal pNm_Tronco_Grupo As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Tronco_Grupo", New Object() {pPConn_Banco, pId_Tronco_Grupo, pNm_Tronco_Grupo, pId_Usuario_Permissao, pPakage, pRetorno})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub Tronco_GrupoAsync(ByVal pPConn_Banco As String, ByVal pId_Tronco_Grupo As Integer, ByVal pNm_Tronco_Grupo As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean)
            Me.Tronco_GrupoAsync(pPConn_Banco, pId_Tronco_Grupo, pNm_Tronco_Grupo, pId_Usuario_Permissao, pPakage, pRetorno, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub Tronco_GrupoAsync(ByVal pPConn_Banco As String, ByVal pId_Tronco_Grupo As Integer, ByVal pNm_Tronco_Grupo As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean, ByVal userState As Object)
            If (Me.Tronco_GrupoOperationCompleted Is Nothing) Then
                Me.Tronco_GrupoOperationCompleted = AddressOf Me.OnTronco_GrupoOperationCompleted
            End If
            Me.InvokeAsync("Tronco_Grupo", New Object() {pPConn_Banco, pId_Tronco_Grupo, pNm_Tronco_Grupo, pId_Usuario_Permissao, pPakage, pRetorno}, Me.Tronco_GrupoOperationCompleted, userState)
        End Sub

        Private Sub OnTronco_GrupoOperationCompleted(ByVal arg As Object)
            If (Not (Me.Tronco_GrupoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Tronco_GrupoCompleted(Me, New Tronco_GrupoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Tronco", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function Tronco(ByVal pPConn_Banco As String, ByVal pId_Tronco As Integer, ByVal pNm_Tronco As String, ByVal pId_Conglomerado As Integer, ByVal pId_Tronco_Grupo As Integer, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Tronco", New Object() {pPConn_Banco, pId_Tronco, pNm_Tronco, pId_Conglomerado, pId_Tronco_Grupo, pId_Usuario_Permissao, pPakage, pRetorno})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub TroncoAsync(ByVal pPConn_Banco As String, ByVal pId_Tronco As Integer, ByVal pNm_Tronco As String, ByVal pId_Conglomerado As Integer, ByVal pId_Tronco_Grupo As Integer, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean)
            Me.TroncoAsync(pPConn_Banco, pId_Tronco, pNm_Tronco, pId_Conglomerado, pId_Tronco_Grupo, pId_Usuario_Permissao, pPakage, pRetorno, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub TroncoAsync(ByVal pPConn_Banco As String, ByVal pId_Tronco As Integer, ByVal pNm_Tronco As String, ByVal pId_Conglomerado As Integer, ByVal pId_Tronco_Grupo As Integer, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean, ByVal userState As Object)
            If (Me.TroncoOperationCompleted Is Nothing) Then
                Me.TroncoOperationCompleted = AddressOf Me.OnTroncoOperationCompleted
            End If
            Me.InvokeAsync("Tronco", New Object() {pPConn_Banco, pId_Tronco, pNm_Tronco, pId_Conglomerado, pId_Tronco_Grupo, pId_Usuario_Permissao, pPakage, pRetorno}, Me.TroncoOperationCompleted, userState)
        End Sub

        Private Sub OnTroncoOperationCompleted(ByVal arg As Object)
            If (Not (Me.TroncoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TroncoCompleted(Me, New TroncoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Ativo_Replace", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function Ativo_Replace(ByVal pPConn_Banco As String, ByVal pId_Ativo_Tipo As Integer, ByVal pId_Ativo_Complemento As Integer, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Ativo_Replace", New Object() {pPConn_Banco, pId_Ativo_Tipo, pId_Ativo_Complemento, pId_Usuario_Permissao, pPakage, pRetorno})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub Ativo_ReplaceAsync(ByVal pPConn_Banco As String, ByVal pId_Ativo_Tipo As Integer, ByVal pId_Ativo_Complemento As Integer, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean)
            Me.Ativo_ReplaceAsync(pPConn_Banco, pId_Ativo_Tipo, pId_Ativo_Complemento, pId_Usuario_Permissao, pPakage, pRetorno, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub Ativo_ReplaceAsync(ByVal pPConn_Banco As String, ByVal pId_Ativo_Tipo As Integer, ByVal pId_Ativo_Complemento As Integer, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean, ByVal userState As Object)
            If (Me.Ativo_ReplaceOperationCompleted Is Nothing) Then
                Me.Ativo_ReplaceOperationCompleted = AddressOf Me.OnAtivo_ReplaceOperationCompleted
            End If
            Me.InvokeAsync("Ativo_Replace", New Object() {pPConn_Banco, pId_Ativo_Tipo, pId_Ativo_Complemento, pId_Usuario_Permissao, pPakage, pRetorno}, Me.Ativo_ReplaceOperationCompleted, userState)
        End Sub

        Private Sub OnAtivo_ReplaceOperationCompleted(ByVal arg As Object)
            If (Not (Me.Ativo_ReplaceCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Ativo_ReplaceCompleted(Me, New Ativo_ReplaceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fatura_Parametro_Campo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function Fatura_Parametro_Campo(ByVal pPConn_Banco As String, ByVal pId_Fatura_Parametro_Campo As Integer, ByVal pNm_Fatura_Parametro_Campo As String, ByVal pId_Fatura_Parametro As Integer, ByVal pObservacao As String, ByVal pSinal As Integer, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Fatura_Parametro_Campo", New Object() {pPConn_Banco, pId_Fatura_Parametro_Campo, pNm_Fatura_Parametro_Campo, pId_Fatura_Parametro, pObservacao, pSinal, pId_Usuario_Permissao, pPakage, pRetorno})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub Fatura_Parametro_CampoAsync(ByVal pPConn_Banco As String, ByVal pId_Fatura_Parametro_Campo As Integer, ByVal pNm_Fatura_Parametro_Campo As String, ByVal pId_Fatura_Parametro As Integer, ByVal pObservacao As String, ByVal pSinal As Integer, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean)
            Me.Fatura_Parametro_CampoAsync(pPConn_Banco, pId_Fatura_Parametro_Campo, pNm_Fatura_Parametro_Campo, pId_Fatura_Parametro, pObservacao, pSinal, pId_Usuario_Permissao, pPakage, pRetorno, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub Fatura_Parametro_CampoAsync(ByVal pPConn_Banco As String, ByVal pId_Fatura_Parametro_Campo As Integer, ByVal pNm_Fatura_Parametro_Campo As String, ByVal pId_Fatura_Parametro As Integer, ByVal pObservacao As String, ByVal pSinal As Integer, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean, ByVal userState As Object)
            If (Me.Fatura_Parametro_CampoOperationCompleted Is Nothing) Then
                Me.Fatura_Parametro_CampoOperationCompleted = AddressOf Me.OnFatura_Parametro_CampoOperationCompleted
            End If
            Me.InvokeAsync("Fatura_Parametro_Campo", New Object() {pPConn_Banco, pId_Fatura_Parametro_Campo, pNm_Fatura_Parametro_Campo, pId_Fatura_Parametro, pObservacao, pSinal, pId_Usuario_Permissao, pPakage, pRetorno}, Me.Fatura_Parametro_CampoOperationCompleted, userState)
        End Sub

        Private Sub OnFatura_Parametro_CampoOperationCompleted(ByVal arg As Object)
            If (Not (Me.Fatura_Parametro_CampoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Fatura_Parametro_CampoCompleted(Me, New Fatura_Parametro_CampoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fatura_Parametro", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function Fatura_Parametro(ByVal pPConn_Banco As String, ByVal pId_Fatura_Parametro As Integer, ByVal pNm_Fatura_Parametro As String, ByVal pId_Contrato As Integer, ByVal pConta_Contabil As String, ByVal pId_Ativo As Integer, ByVal pCd_Centro_Custo As String, ByVal pId_Fatura_Tipo_Rateio As String, ByVal pRateia_Ativo_Padrao As Integer, ByVal pRateio_Nota As Integer, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Fatura_Parametro", New Object() {pPConn_Banco, pId_Fatura_Parametro, pNm_Fatura_Parametro, pId_Contrato, pConta_Contabil, pId_Ativo, pCd_Centro_Custo, pId_Fatura_Tipo_Rateio, pRateia_Ativo_Padrao, pRateio_Nota, pId_Usuario_Permissao, pPakage, pRetorno})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub Fatura_ParametroAsync(ByVal pPConn_Banco As String, ByVal pId_Fatura_Parametro As Integer, ByVal pNm_Fatura_Parametro As String, ByVal pId_Contrato As Integer, ByVal pConta_Contabil As String, ByVal pId_Ativo As Integer, ByVal pCd_Centro_Custo As String, ByVal pId_Fatura_Tipo_Rateio As String, ByVal pRateia_Ativo_Padrao As Integer, ByVal pRateio_Nota As Integer, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean)
            Me.Fatura_ParametroAsync(pPConn_Banco, pId_Fatura_Parametro, pNm_Fatura_Parametro, pId_Contrato, pConta_Contabil, pId_Ativo, pCd_Centro_Custo, pId_Fatura_Tipo_Rateio, pRateia_Ativo_Padrao, pRateio_Nota, pId_Usuario_Permissao, pPakage, pRetorno, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub Fatura_ParametroAsync(ByVal pPConn_Banco As String, ByVal pId_Fatura_Parametro As Integer, ByVal pNm_Fatura_Parametro As String, ByVal pId_Contrato As Integer, ByVal pConta_Contabil As String, ByVal pId_Ativo As Integer, ByVal pCd_Centro_Custo As String, ByVal pId_Fatura_Tipo_Rateio As String, ByVal pRateia_Ativo_Padrao As Integer, ByVal pRateio_Nota As Integer, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean, ByVal userState As Object)
            If (Me.Fatura_ParametroOperationCompleted Is Nothing) Then
                Me.Fatura_ParametroOperationCompleted = AddressOf Me.OnFatura_ParametroOperationCompleted
            End If
            Me.InvokeAsync("Fatura_Parametro", New Object() {pPConn_Banco, pId_Fatura_Parametro, pNm_Fatura_Parametro, pId_Contrato, pConta_Contabil, pId_Ativo, pCd_Centro_Custo, pId_Fatura_Tipo_Rateio, pRateia_Ativo_Padrao, pRateio_Nota, pId_Usuario_Permissao, pPakage, pRetorno}, Me.Fatura_ParametroOperationCompleted, userState)
        End Sub

        Private Sub OnFatura_ParametroOperationCompleted(ByVal arg As Object)
            If (Not (Me.Fatura_ParametroCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Fatura_ParametroCompleted(Me, New Fatura_ParametroCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Consumidor_Status", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function Consumidor_Status(ByVal pPConn_Banco As String, ByVal pId_Consumidor_Status As Integer, ByVal pNm_Consumidor_Status As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Consumidor_Status", New Object() {pPConn_Banco, pId_Consumidor_Status, pNm_Consumidor_Status, pId_Usuario_Permissao, pPakage, pRetorno})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub Consumidor_StatusAsync(ByVal pPConn_Banco As String, ByVal pId_Consumidor_Status As Integer, ByVal pNm_Consumidor_Status As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean)
            Me.Consumidor_StatusAsync(pPConn_Banco, pId_Consumidor_Status, pNm_Consumidor_Status, pId_Usuario_Permissao, pPakage, pRetorno, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub Consumidor_StatusAsync(ByVal pPConn_Banco As String, ByVal pId_Consumidor_Status As Integer, ByVal pNm_Consumidor_Status As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean, ByVal userState As Object)
            If (Me.Consumidor_StatusOperationCompleted Is Nothing) Then
                Me.Consumidor_StatusOperationCompleted = AddressOf Me.OnConsumidor_StatusOperationCompleted
            End If
            Me.InvokeAsync("Consumidor_Status", New Object() {pPConn_Banco, pId_Consumidor_Status, pNm_Consumidor_Status, pId_Usuario_Permissao, pPakage, pRetorno}, Me.Consumidor_StatusOperationCompleted, userState)
        End Sub

        Private Sub OnConsumidor_StatusOperationCompleted(ByVal arg As Object)
            If (Not (Me.Consumidor_StatusCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Consumidor_StatusCompleted(Me, New Consumidor_StatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Ativo_Status", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function Ativo_Status(ByVal pPConn_Banco As String, ByVal pId_Ativo_Status As Integer, ByVal pNm_Ativo_Status As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Ativo_Status", New Object() {pPConn_Banco, pId_Ativo_Status, pNm_Ativo_Status, pId_Usuario_Permissao, pPakage, pRetorno})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub Ativo_StatusAsync(ByVal pPConn_Banco As String, ByVal pId_Ativo_Status As Integer, ByVal pNm_Ativo_Status As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean)
            Me.Ativo_StatusAsync(pPConn_Banco, pId_Ativo_Status, pNm_Ativo_Status, pId_Usuario_Permissao, pPakage, pRetorno, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub Ativo_StatusAsync(ByVal pPConn_Banco As String, ByVal pId_Ativo_Status As Integer, ByVal pNm_Ativo_Status As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean, ByVal userState As Object)
            If (Me.Ativo_StatusOperationCompleted Is Nothing) Then
                Me.Ativo_StatusOperationCompleted = AddressOf Me.OnAtivo_StatusOperationCompleted
            End If
            Me.InvokeAsync("Ativo_Status", New Object() {pPConn_Banco, pId_Ativo_Status, pNm_Ativo_Status, pId_Usuario_Permissao, pPakage, pRetorno}, Me.Ativo_StatusOperationCompleted, userState)
        End Sub

        Private Sub OnAtivo_StatusOperationCompleted(ByVal arg As Object)
            If (Not (Me.Ativo_StatusCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Ativo_StatusCompleted(Me, New Ativo_StatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Agenda_Marcacao_Particular", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function Agenda_Marcacao_Particular(ByVal pPConn_Banco As String, ByVal pId_Usuario As Integer, ByVal pNr_Destino As String, ByVal pNm_Destino As String, ByVal pTipo As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Agenda_Marcacao_Particular", New Object() {pPConn_Banco, pId_Usuario, pNr_Destino, pNm_Destino, pTipo, pPakage, pRetorno})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub Agenda_Marcacao_ParticularAsync(ByVal pPConn_Banco As String, ByVal pId_Usuario As Integer, ByVal pNr_Destino As String, ByVal pNm_Destino As String, ByVal pTipo As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean)
            Me.Agenda_Marcacao_ParticularAsync(pPConn_Banco, pId_Usuario, pNr_Destino, pNm_Destino, pTipo, pPakage, pRetorno, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub Agenda_Marcacao_ParticularAsync(ByVal pPConn_Banco As String, ByVal pId_Usuario As Integer, ByVal pNr_Destino As String, ByVal pNm_Destino As String, ByVal pTipo As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean, ByVal userState As Object)
            If (Me.Agenda_Marcacao_ParticularOperationCompleted Is Nothing) Then
                Me.Agenda_Marcacao_ParticularOperationCompleted = AddressOf Me.OnAgenda_Marcacao_ParticularOperationCompleted
            End If
            Me.InvokeAsync("Agenda_Marcacao_Particular", New Object() {pPConn_Banco, pId_Usuario, pNr_Destino, pNm_Destino, pTipo, pPakage, pRetorno}, Me.Agenda_Marcacao_ParticularOperationCompleted, userState)
        End Sub

        Private Sub OnAgenda_Marcacao_ParticularOperationCompleted(ByVal arg As Object)
            If (Not (Me.Agenda_Marcacao_ParticularCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Agenda_Marcacao_ParticularCompleted(Me, New Agenda_Marcacao_ParticularCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Contrato_Status", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function Contrato_Status(ByVal pPConn_Banco As String, ByVal pId_Contrato_Status As Integer, ByVal pNm_Contrato_Status As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Contrato_Status", New Object() {pPConn_Banco, pId_Contrato_Status, pNm_Contrato_Status, pId_Usuario_Permissao, pPakage, pRetorno})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub Contrato_StatusAsync(ByVal pPConn_Banco As String, ByVal pId_Contrato_Status As Integer, ByVal pNm_Contrato_Status As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean)
            Me.Contrato_StatusAsync(pPConn_Banco, pId_Contrato_Status, pNm_Contrato_Status, pId_Usuario_Permissao, pPakage, pRetorno, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub Contrato_StatusAsync(ByVal pPConn_Banco As String, ByVal pId_Contrato_Status As Integer, ByVal pNm_Contrato_Status As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean, ByVal userState As Object)
            If (Me.Contrato_StatusOperationCompleted Is Nothing) Then
                Me.Contrato_StatusOperationCompleted = AddressOf Me.OnContrato_StatusOperationCompleted
            End If
            Me.InvokeAsync("Contrato_Status", New Object() {pPConn_Banco, pId_Contrato_Status, pNm_Contrato_Status, pId_Usuario_Permissao, pPakage, pRetorno}, Me.Contrato_StatusOperationCompleted, userState)
        End Sub

        Private Sub OnContrato_StatusOperationCompleted(ByVal arg As Object)
            If (Not (Me.Contrato_StatusCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Contrato_StatusCompleted(Me, New Contrato_StatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Custo_Fixo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function Custo_Fixo(ByVal pPConn_Banco As String, ByVal pId_Custo_Fixo As Integer, ByVal pNm_Custo_Fixo As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Custo_Fixo", New Object() {pPConn_Banco, pId_Custo_Fixo, pNm_Custo_Fixo, pId_Usuario_Permissao, pPakage, pRetorno})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub Custo_FixoAsync(ByVal pPConn_Banco As String, ByVal pId_Custo_Fixo As Integer, ByVal pNm_Custo_Fixo As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean)
            Me.Custo_FixoAsync(pPConn_Banco, pId_Custo_Fixo, pNm_Custo_Fixo, pId_Usuario_Permissao, pPakage, pRetorno, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub Custo_FixoAsync(ByVal pPConn_Banco As String, ByVal pId_Custo_Fixo As Integer, ByVal pNm_Custo_Fixo As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean, ByVal userState As Object)
            If (Me.Custo_FixoOperationCompleted Is Nothing) Then
                Me.Custo_FixoOperationCompleted = AddressOf Me.OnCusto_FixoOperationCompleted
            End If
            Me.InvokeAsync("Custo_Fixo", New Object() {pPConn_Banco, pId_Custo_Fixo, pNm_Custo_Fixo, pId_Usuario_Permissao, pPakage, pRetorno}, Me.Custo_FixoOperationCompleted, userState)
        End Sub

        Private Sub OnCusto_FixoOperationCompleted(ByVal arg As Object)
            If (Not (Me.Custo_FixoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Custo_FixoCompleted(Me, New Custo_FixoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Custo_Fixo_Item", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function Custo_Fixo_Item(ByVal pPConn_Banco As String, ByVal pId_Custo_Fixo_Item As Integer, ByVal pId_Custo_Fixo As Integer, ByVal pId_Ativo_Tipo As Integer, ByVal pId_Conglomerado As Integer, ByVal pValor As Double, ByVal pId_Lote As Double, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Custo_Fixo_Item", New Object() {pPConn_Banco, pId_Custo_Fixo_Item, pId_Custo_Fixo, pId_Ativo_Tipo, pId_Conglomerado, pValor, pId_Lote, pId_Usuario_Permissao, pPakage, pRetorno})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub Custo_Fixo_ItemAsync(ByVal pPConn_Banco As String, ByVal pId_Custo_Fixo_Item As Integer, ByVal pId_Custo_Fixo As Integer, ByVal pId_Ativo_Tipo As Integer, ByVal pId_Conglomerado As Integer, ByVal pValor As Double, ByVal pId_Lote As Double, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean)
            Me.Custo_Fixo_ItemAsync(pPConn_Banco, pId_Custo_Fixo_Item, pId_Custo_Fixo, pId_Ativo_Tipo, pId_Conglomerado, pValor, pId_Lote, pId_Usuario_Permissao, pPakage, pRetorno, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub Custo_Fixo_ItemAsync(ByVal pPConn_Banco As String, ByVal pId_Custo_Fixo_Item As Integer, ByVal pId_Custo_Fixo As Integer, ByVal pId_Ativo_Tipo As Integer, ByVal pId_Conglomerado As Integer, ByVal pValor As Double, ByVal pId_Lote As Double, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean, ByVal userState As Object)
            If (Me.Custo_Fixo_ItemOperationCompleted Is Nothing) Then
                Me.Custo_Fixo_ItemOperationCompleted = AddressOf Me.OnCusto_Fixo_ItemOperationCompleted
            End If
            Me.InvokeAsync("Custo_Fixo_Item", New Object() {pPConn_Banco, pId_Custo_Fixo_Item, pId_Custo_Fixo, pId_Ativo_Tipo, pId_Conglomerado, pValor, pId_Lote, pId_Usuario_Permissao, pPakage, pRetorno}, Me.Custo_Fixo_ItemOperationCompleted, userState)
        End Sub

        Private Sub OnCusto_Fixo_ItemOperationCompleted(ByVal arg As Object)
            If (Not (Me.Custo_Fixo_ItemCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Custo_Fixo_ItemCompleted(Me, New Custo_Fixo_ItemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Ativo_Vago", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function Ativo_Vago(ByVal pPConn_Banco As String, ByVal pId_Ativo As Integer, ByVal pId_Consumidor As Integer, ByVal pNr_Ativo As String, ByVal pDescricao As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Ativo_Vago", New Object() {pPConn_Banco, pId_Ativo, pId_Consumidor, pNr_Ativo, pDescricao, pId_Usuario_Permissao, pPakage, pRetorno})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub Ativo_VagoAsync(ByVal pPConn_Banco As String, ByVal pId_Ativo As Integer, ByVal pId_Consumidor As Integer, ByVal pNr_Ativo As String, ByVal pDescricao As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean)
            Me.Ativo_VagoAsync(pPConn_Banco, pId_Ativo, pId_Consumidor, pNr_Ativo, pDescricao, pId_Usuario_Permissao, pPakage, pRetorno, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub Ativo_VagoAsync(ByVal pPConn_Banco As String, ByVal pId_Ativo As Integer, ByVal pId_Consumidor As Integer, ByVal pNr_Ativo As String, ByVal pDescricao As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean, ByVal userState As Object)
            If (Me.Ativo_VagoOperationCompleted Is Nothing) Then
                Me.Ativo_VagoOperationCompleted = AddressOf Me.OnAtivo_VagoOperationCompleted
            End If
            Me.InvokeAsync("Ativo_Vago", New Object() {pPConn_Banco, pId_Ativo, pId_Consumidor, pNr_Ativo, pDescricao, pId_Usuario_Permissao, pPakage, pRetorno}, Me.Ativo_VagoOperationCompleted, userState)
        End Sub

        Private Sub OnAtivo_VagoOperationCompleted(ByVal arg As Object)
            If (Not (Me.Ativo_VagoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Ativo_VagoCompleted(Me, New Ativo_VagoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Envia_Log", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function Envia_Log(ByVal pPConn_Banco As String, ByVal pId_Usuario As String, ByVal pData_Hora As Date, ByVal pAcao_Executada As String, ByVal pRetorno As Boolean) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Envia_Log", New Object() {pPConn_Banco, pId_Usuario, pData_Hora, pAcao_Executada, pRetorno})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub Envia_LogAsync(ByVal pPConn_Banco As String, ByVal pId_Usuario As String, ByVal pData_Hora As Date, ByVal pAcao_Executada As String, ByVal pRetorno As Boolean)
            Me.Envia_LogAsync(pPConn_Banco, pId_Usuario, pData_Hora, pAcao_Executada, pRetorno, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub Envia_LogAsync(ByVal pPConn_Banco As String, ByVal pId_Usuario As String, ByVal pData_Hora As Date, ByVal pAcao_Executada As String, ByVal pRetorno As Boolean, ByVal userState As Object)
            If (Me.Envia_LogOperationCompleted Is Nothing) Then
                Me.Envia_LogOperationCompleted = AddressOf Me.OnEnvia_LogOperationCompleted
            End If
            Me.InvokeAsync("Envia_Log", New Object() {pPConn_Banco, pId_Usuario, pData_Hora, pAcao_Executada, pRetorno}, Me.Envia_LogOperationCompleted, userState)
        End Sub

        Private Sub OnEnvia_LogOperationCompleted(ByVal arg As Object)
            If (Not (Me.Envia_LogCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Envia_LogCompleted(Me, New Envia_LogCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Excedente_Politica", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function Excedente_Politica(ByVal pPConn_Banco As String, ByVal pId_Lote As Double, ByVal pId_Usuario As Integer, ByVal pJustificativa As String, ByVal pPakage As String, ByVal pRetorno As Boolean) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Excedente_Politica", New Object() {pPConn_Banco, pId_Lote, pId_Usuario, pJustificativa, pPakage, pRetorno})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub Excedente_PoliticaAsync(ByVal pPConn_Banco As String, ByVal pId_Lote As Double, ByVal pId_Usuario As Integer, ByVal pJustificativa As String, ByVal pPakage As String, ByVal pRetorno As Boolean)
            Me.Excedente_PoliticaAsync(pPConn_Banco, pId_Lote, pId_Usuario, pJustificativa, pPakage, pRetorno, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub Excedente_PoliticaAsync(ByVal pPConn_Banco As String, ByVal pId_Lote As Double, ByVal pId_Usuario As Integer, ByVal pJustificativa As String, ByVal pPakage As String, ByVal pRetorno As Boolean, ByVal userState As Object)
            If (Me.Excedente_PoliticaOperationCompleted Is Nothing) Then
                Me.Excedente_PoliticaOperationCompleted = AddressOf Me.OnExcedente_PoliticaOperationCompleted
            End If
            Me.InvokeAsync("Excedente_Politica", New Object() {pPConn_Banco, pId_Lote, pId_Usuario, pJustificativa, pPakage, pRetorno}, Me.Excedente_PoliticaOperationCompleted, userState)
        End Sub

        Private Sub OnExcedente_PoliticaOperationCompleted(ByVal arg As Object)
            If (Not (Me.Excedente_PoliticaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Excedente_PoliticaCompleted(Me, New Excedente_PoliticaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Estoque_Aparelho_Status", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function Estoque_Aparelho_Status(ByVal pPConn_Banco As String, ByVal pId_Estoque_Aparelho_Status As Integer, ByVal pNm_Estoque_Aparelho_Status As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Estoque_Aparelho_Status", New Object() {pPConn_Banco, pId_Estoque_Aparelho_Status, pNm_Estoque_Aparelho_Status, pId_Usuario_Permissao, pPakage, pRetorno})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub Estoque_Aparelho_StatusAsync(ByVal pPConn_Banco As String, ByVal pId_Estoque_Aparelho_Status As Integer, ByVal pNm_Estoque_Aparelho_Status As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean)
            Me.Estoque_Aparelho_StatusAsync(pPConn_Banco, pId_Estoque_Aparelho_Status, pNm_Estoque_Aparelho_Status, pId_Usuario_Permissao, pPakage, pRetorno, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub Estoque_Aparelho_StatusAsync(ByVal pPConn_Banco As String, ByVal pId_Estoque_Aparelho_Status As Integer, ByVal pNm_Estoque_Aparelho_Status As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean, ByVal userState As Object)
            If (Me.Estoque_Aparelho_StatusOperationCompleted Is Nothing) Then
                Me.Estoque_Aparelho_StatusOperationCompleted = AddressOf Me.OnEstoque_Aparelho_StatusOperationCompleted
            End If
            Me.InvokeAsync("Estoque_Aparelho_Status", New Object() {pPConn_Banco, pId_Estoque_Aparelho_Status, pNm_Estoque_Aparelho_Status, pId_Usuario_Permissao, pPakage, pRetorno}, Me.Estoque_Aparelho_StatusOperationCompleted, userState)
        End Sub

        Private Sub OnEstoque_Aparelho_StatusOperationCompleted(ByVal arg As Object)
            If (Not (Me.Estoque_Aparelho_StatusCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Estoque_Aparelho_StatusCompleted(Me, New Estoque_Aparelho_StatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Solicitacao_SLA", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function Solicitacao_SLA(ByVal pPConn_Banco As String, ByVal pId_Solicitacao_SLA As Integer, ByVal pNm_Solicitacao_SLA As String, ByVal pQTDHoras As String, ByVal pEMail As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Solicitacao_SLA", New Object() {pPConn_Banco, pId_Solicitacao_SLA, pNm_Solicitacao_SLA, pQTDHoras, pEMail, pId_Usuario_Permissao, pPakage, pRetorno})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub Solicitacao_SLAAsync(ByVal pPConn_Banco As String, ByVal pId_Solicitacao_SLA As Integer, ByVal pNm_Solicitacao_SLA As String, ByVal pQTDHoras As String, ByVal pEMail As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean)
            Me.Solicitacao_SLAAsync(pPConn_Banco, pId_Solicitacao_SLA, pNm_Solicitacao_SLA, pQTDHoras, pEMail, pId_Usuario_Permissao, pPakage, pRetorno, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub Solicitacao_SLAAsync(ByVal pPConn_Banco As String, ByVal pId_Solicitacao_SLA As Integer, ByVal pNm_Solicitacao_SLA As String, ByVal pQTDHoras As String, ByVal pEMail As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean, ByVal userState As Object)
            If (Me.Solicitacao_SLAOperationCompleted Is Nothing) Then
                Me.Solicitacao_SLAOperationCompleted = AddressOf Me.OnSolicitacao_SLAOperationCompleted
            End If
            Me.InvokeAsync("Solicitacao_SLA", New Object() {pPConn_Banco, pId_Solicitacao_SLA, pNm_Solicitacao_SLA, pQTDHoras, pEMail, pId_Usuario_Permissao, pPakage, pRetorno}, Me.Solicitacao_SLAOperationCompleted, userState)
        End Sub

        Private Sub OnSolicitacao_SLAOperationCompleted(ByVal arg As Object)
            If (Not (Me.Solicitacao_SLACompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Solicitacao_SLACompleted(Me, New Solicitacao_SLACompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Solicitacao_Tipo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function Solicitacao_Tipo(ByVal pPConn_Banco As String, ByVal pId_Solicitacao_Tipo As Integer, ByVal pNm_Solicitacao_Tipo As String, ByVal pId_Ativo_Tipo As Integer, ByVal pId_Solicitacao_SLA As Integer, ByVal pId_Solicitcao_Fila_Atendimento As Integer, ByVal pId_Solicitacao_Permissao As Integer, ByVal pFl_Config_Caixa_Texto As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Solicitacao_Tipo", New Object() {pPConn_Banco, pId_Solicitacao_Tipo, pNm_Solicitacao_Tipo, pId_Ativo_Tipo, pId_Solicitacao_SLA, pId_Solicitcao_Fila_Atendimento, pId_Solicitacao_Permissao, pFl_Config_Caixa_Texto, pId_Usuario_Permissao, pPakage, pRetorno})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub Solicitacao_TipoAsync(ByVal pPConn_Banco As String, ByVal pId_Solicitacao_Tipo As Integer, ByVal pNm_Solicitacao_Tipo As String, ByVal pId_Ativo_Tipo As Integer, ByVal pId_Solicitacao_SLA As Integer, ByVal pId_Solicitcao_Fila_Atendimento As Integer, ByVal pId_Solicitacao_Permissao As Integer, ByVal pFl_Config_Caixa_Texto As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean)
            Me.Solicitacao_TipoAsync(pPConn_Banco, pId_Solicitacao_Tipo, pNm_Solicitacao_Tipo, pId_Ativo_Tipo, pId_Solicitacao_SLA, pId_Solicitcao_Fila_Atendimento, pId_Solicitacao_Permissao, pFl_Config_Caixa_Texto, pId_Usuario_Permissao, pPakage, pRetorno, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub Solicitacao_TipoAsync(ByVal pPConn_Banco As String, ByVal pId_Solicitacao_Tipo As Integer, ByVal pNm_Solicitacao_Tipo As String, ByVal pId_Ativo_Tipo As Integer, ByVal pId_Solicitacao_SLA As Integer, ByVal pId_Solicitcao_Fila_Atendimento As Integer, ByVal pId_Solicitacao_Permissao As Integer, ByVal pFl_Config_Caixa_Texto As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean, ByVal userState As Object)
            If (Me.Solicitacao_TipoOperationCompleted Is Nothing) Then
                Me.Solicitacao_TipoOperationCompleted = AddressOf Me.OnSolicitacao_TipoOperationCompleted
            End If
            Me.InvokeAsync("Solicitacao_Tipo", New Object() {pPConn_Banco, pId_Solicitacao_Tipo, pNm_Solicitacao_Tipo, pId_Ativo_Tipo, pId_Solicitacao_SLA, pId_Solicitcao_Fila_Atendimento, pId_Solicitacao_Permissao, pFl_Config_Caixa_Texto, pId_Usuario_Permissao, pPakage, pRetorno}, Me.Solicitacao_TipoOperationCompleted, userState)
        End Sub

        Private Sub OnSolicitacao_TipoOperationCompleted(ByVal arg As Object)
            If (Not (Me.Solicitacao_TipoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Solicitacao_TipoCompleted(Me, New Solicitacao_TipoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Solicitacao_Solucao", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function Solicitacao_Solucao(ByVal pPConn_Banco As String, ByVal pId_Solicitacao_Solucao As Integer, ByVal pNm_Solicitacao_Solucao As String, ByVal pId_Ativo_Tipo As Integer, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Solicitacao_Solucao", New Object() {pPConn_Banco, pId_Solicitacao_Solucao, pNm_Solicitacao_Solucao, pId_Ativo_Tipo, pId_Usuario_Permissao, pPakage, pRetorno})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub Solicitacao_SolucaoAsync(ByVal pPConn_Banco As String, ByVal pId_Solicitacao_Solucao As Integer, ByVal pNm_Solicitacao_Solucao As String, ByVal pId_Ativo_Tipo As Integer, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean)
            Me.Solicitacao_SolucaoAsync(pPConn_Banco, pId_Solicitacao_Solucao, pNm_Solicitacao_Solucao, pId_Ativo_Tipo, pId_Usuario_Permissao, pPakage, pRetorno, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub Solicitacao_SolucaoAsync(ByVal pPConn_Banco As String, ByVal pId_Solicitacao_Solucao As Integer, ByVal pNm_Solicitacao_Solucao As String, ByVal pId_Ativo_Tipo As Integer, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean, ByVal userState As Object)
            If (Me.Solicitacao_SolucaoOperationCompleted Is Nothing) Then
                Me.Solicitacao_SolucaoOperationCompleted = AddressOf Me.OnSolicitacao_SolucaoOperationCompleted
            End If
            Me.InvokeAsync("Solicitacao_Solucao", New Object() {pPConn_Banco, pId_Solicitacao_Solucao, pNm_Solicitacao_Solucao, pId_Ativo_Tipo, pId_Usuario_Permissao, pPakage, pRetorno}, Me.Solicitacao_SolucaoOperationCompleted, userState)
        End Sub

        Private Sub OnSolicitacao_SolucaoOperationCompleted(ByVal arg As Object)
            If (Not (Me.Solicitacao_SolucaoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Solicitacao_SolucaoCompleted(Me, New Solicitacao_SolucaoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Solicitacao_Data_Parada", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function Solicitacao_Data_Parada(ByVal pPConn_Banco As String, ByVal pId_Data_Parada As Integer, ByVal pData As Date, ByVal pDescricao As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Solicitacao_Data_Parada", New Object() {pPConn_Banco, pId_Data_Parada, pData, pDescricao, pId_Usuario_Permissao, pPakage, pRetorno})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub Solicitacao_Data_ParadaAsync(ByVal pPConn_Banco As String, ByVal pId_Data_Parada As Integer, ByVal pData As Date, ByVal pDescricao As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean)
            Me.Solicitacao_Data_ParadaAsync(pPConn_Banco, pId_Data_Parada, pData, pDescricao, pId_Usuario_Permissao, pPakage, pRetorno, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub Solicitacao_Data_ParadaAsync(ByVal pPConn_Banco As String, ByVal pId_Data_Parada As Integer, ByVal pData As Date, ByVal pDescricao As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean, ByVal userState As Object)
            If (Me.Solicitacao_Data_ParadaOperationCompleted Is Nothing) Then
                Me.Solicitacao_Data_ParadaOperationCompleted = AddressOf Me.OnSolicitacao_Data_ParadaOperationCompleted
            End If
            Me.InvokeAsync("Solicitacao_Data_Parada", New Object() {pPConn_Banco, pId_Data_Parada, pData, pDescricao, pId_Usuario_Permissao, pPakage, pRetorno}, Me.Solicitacao_Data_ParadaOperationCompleted, userState)
        End Sub

        Private Sub OnSolicitacao_Data_ParadaOperationCompleted(ByVal arg As Object)
            If (Not (Me.Solicitacao_Data_ParadaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Solicitacao_Data_ParadaCompleted(Me, New Solicitacao_Data_ParadaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Solicitacao_Fila_Atendimento", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function Solicitacao_Fila_Atendimento(ByVal pPConn_Banco As String, ByVal pId_Solicitacao_Fila_Atendimento As Integer, ByVal pNm_Solicitacao_Fila_Atendimento As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Solicitacao_Fila_Atendimento", New Object() {pPConn_Banco, pId_Solicitacao_Fila_Atendimento, pNm_Solicitacao_Fila_Atendimento, pId_Usuario_Permissao, pPakage, pRetorno})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub Solicitacao_Fila_AtendimentoAsync(ByVal pPConn_Banco As String, ByVal pId_Solicitacao_Fila_Atendimento As Integer, ByVal pNm_Solicitacao_Fila_Atendimento As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean)
            Me.Solicitacao_Fila_AtendimentoAsync(pPConn_Banco, pId_Solicitacao_Fila_Atendimento, pNm_Solicitacao_Fila_Atendimento, pId_Usuario_Permissao, pPakage, pRetorno, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub Solicitacao_Fila_AtendimentoAsync(ByVal pPConn_Banco As String, ByVal pId_Solicitacao_Fila_Atendimento As Integer, ByVal pNm_Solicitacao_Fila_Atendimento As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean, ByVal userState As Object)
            If (Me.Solicitacao_Fila_AtendimentoOperationCompleted Is Nothing) Then
                Me.Solicitacao_Fila_AtendimentoOperationCompleted = AddressOf Me.OnSolicitacao_Fila_AtendimentoOperationCompleted
            End If
            Me.InvokeAsync("Solicitacao_Fila_Atendimento", New Object() {pPConn_Banco, pId_Solicitacao_Fila_Atendimento, pNm_Solicitacao_Fila_Atendimento, pId_Usuario_Permissao, pPakage, pRetorno}, Me.Solicitacao_Fila_AtendimentoOperationCompleted, userState)
        End Sub

        Private Sub OnSolicitacao_Fila_AtendimentoOperationCompleted(ByVal arg As Object)
            If (Not (Me.Solicitacao_Fila_AtendimentoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Solicitacao_Fila_AtendimentoCompleted(Me, New Solicitacao_Fila_AtendimentoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub

        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing) _
                        OrElse (url Is String.Empty)) Then
                Return False
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024) _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return True
            End If
            Return False
        End Function

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Contrato_Indice", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function Contrato_Indice(ByVal pPConn_Banco As String, ByVal pId_Contrato_Indice As Integer, ByVal pNm_Contrato_Indice As String, ByVal pObs_Contrato_Indice As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Contrato_Indice", New Object() {pPConn_Banco, pId_Contrato_Indice, pNm_Contrato_Indice, pObs_Contrato_Indice, pId_Usuario_Permissao, pPakage, pRetorno})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub Contrato_IndiceAsync(ByVal pPConn_Banco As String, ByVal pId_Contrato_Indice As Integer, ByVal pNm_Contrato_Indice As String, ByVal pObs_Contrato_Indice As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean)
            Me.Contrato_IndiceAsync(pPConn_Banco, pId_Contrato_Indice, pNm_Contrato_Indice, pObs_Contrato_Indice, pId_Usuario_Permissao, pPakage, pRetorno, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub Contrato_IndiceAsync(ByVal pPConn_Banco As String, ByVal pId_Contrato_Indice As Integer, ByVal pNm_Contrato_Indice As String, ByVal pObs_Contrato_Indice As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean, ByVal userState As Object)
            If (Me.Contrato_IndiceOperationCompleted Is Nothing) Then
                Me.Contrato_IndiceOperationCompleted = AddressOf Me.OnContrato_IndiceOperationCompleted
            End If
            Me.InvokeAsync("Contrato_Indice", New Object() {pPConn_Banco, pId_Contrato_Indice, pNm_Contrato_Indice, pObs_Contrato_Indice, pId_Usuario_Permissao, pPakage, pRetorno}, Me.Contrato_IndiceOperationCompleted, userState)
        End Sub

        Private Sub OnContrato_IndiceOperationCompleted(ByVal arg As Object)
            If (Not (Me.Contrato_IndiceCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Contrato_IndiceCompleted(Me, New Contrato_IndiceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fatura_Nota_Fiscal", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function Fatura_Nota_Fiscal(ByVal pPConn_Banco As String, ByVal pPakage As String, ByVal pId_Fatura As Integer, ByVal pId_Centro_Custo As Integer, ByVal pNr_Nota_Fiscal As String, ByVal pVr_Nota_Fiscal As Single, ByVal pPct_Nota_Fiscal As Single, ByVal pId_Usuario_Permissao As Integer, ByVal pRetorno As Boolean) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Fatura_Nota_Fiscal", New Object() {pPConn_Banco, pPakage, pId_Fatura, pId_Centro_Custo, pNr_Nota_Fiscal, pVr_Nota_Fiscal, pPct_Nota_Fiscal, pId_Usuario_Permissao, pRetorno})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub Fatura_Nota_FiscalAsync(ByVal pPConn_Banco As String, ByVal pPakage As String, ByVal pId_Fatura As Integer, ByVal pId_Centro_Custo As Integer, ByVal pNr_Nota_Fiscal As String, ByVal pVr_Nota_Fiscal As Single, ByVal pPct_Nota_Fiscal As Single, ByVal pId_Usuario_Permissao As Integer, ByVal pRetorno As Boolean)
            Me.Fatura_Nota_FiscalAsync(pPConn_Banco, pPakage, pId_Fatura, pId_Centro_Custo, pNr_Nota_Fiscal, pVr_Nota_Fiscal, pPct_Nota_Fiscal, pId_Usuario_Permissao, pRetorno, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub Fatura_Nota_FiscalAsync(ByVal pPConn_Banco As String, ByVal pPakage As String, ByVal pId_Fatura As Integer, ByVal pId_Centro_Custo As Integer, ByVal pNr_Nota_Fiscal As String, ByVal pVr_Nota_Fiscal As Single, ByVal pPct_Nota_Fiscal As Single, ByVal pId_Usuario_Permissao As Integer, ByVal pRetorno As Boolean, ByVal userState As Object)
            If (Me.Fatura_Nota_FiscalOperationCompleted Is Nothing) Then
                Me.Fatura_Nota_FiscalOperationCompleted = AddressOf Me.OnFatura_Nota_FiscalOperationCompleted
            End If
            Me.InvokeAsync("Fatura_Nota_Fiscal", New Object() {pPConn_Banco, pPakage, pId_Fatura, pId_Centro_Custo, pNr_Nota_Fiscal, pVr_Nota_Fiscal, pPct_Nota_Fiscal, pId_Usuario_Permissao, pRetorno}, Me.Fatura_Nota_FiscalOperationCompleted, userState)
        End Sub

        Private Sub OnFatura_Nota_FiscalOperationCompleted(ByVal arg As Object)
            If (Not (Me.Fatura_Nota_FiscalCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Fatura_Nota_FiscalCompleted(Me, New Fatura_Nota_FiscalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>
    Public Delegate Sub LixeiraCompletedEventHandler(ByVal sender As Object, ByVal e As LixeiraCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),
     System.Diagnostics.DebuggerStepThroughAttribute(),
     System.ComponentModel.DesignerCategoryAttribute("code")>
    Partial Public Class LixeiraCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), System.Data.DataSet)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>
    Public Delegate Sub HierarquiaCompletedEventHandler(ByVal sender As Object, ByVal e As HierarquiaCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),
     System.Diagnostics.DebuggerStepThroughAttribute(),
     System.ComponentModel.DesignerCategoryAttribute("code")>
    Partial Public Class HierarquiaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), System.Data.DataSet)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>
    Public Delegate Sub DropListCompletedEventHandler(ByVal sender As Object, ByVal e As DropListCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),
     System.Diagnostics.DebuggerStepThroughAttribute(),
     System.ComponentModel.DesignerCategoryAttribute("code")>
    Partial Public Class DropListCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), System.Data.DataSet)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>
    Public Delegate Sub DropList_FiltroCompletedEventHandler(ByVal sender As Object, ByVal e As DropList_FiltroCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),
     System.Diagnostics.DebuggerStepThroughAttribute(),
     System.ComponentModel.DesignerCategoryAttribute("code")>
    Partial Public Class DropList_FiltroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), System.Data.DataSet)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>
    Public Delegate Sub RelacionamentoCompletedEventHandler(ByVal sender As Object, ByVal e As RelacionamentoCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),
     System.Diagnostics.DebuggerStepThroughAttribute(),
     System.ComponentModel.DesignerCategoryAttribute("code")>
    Partial Public Class RelacionamentoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), System.Data.DataSet)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>
    Public Delegate Sub Centro_CustoCompletedEventHandler(ByVal sender As Object, ByVal e As Centro_CustoCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),
     System.Diagnostics.DebuggerStepThroughAttribute(),
     System.ComponentModel.DesignerCategoryAttribute("code")>
    Partial Public Class Centro_CustoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), System.Data.DataSet)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>
    Public Delegate Sub DepartamentoCompletedEventHandler(ByVal sender As Object, ByVal e As DepartamentoCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),
     System.Diagnostics.DebuggerStepThroughAttribute(),
     System.ComponentModel.DesignerCategoryAttribute("code")>
    Partial Public Class DepartamentoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), System.Data.DataSet)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>
    Public Delegate Sub SetorCompletedEventHandler(ByVal sender As Object, ByVal e As SetorCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),
     System.Diagnostics.DebuggerStepThroughAttribute(),
     System.ComponentModel.DesignerCategoryAttribute("code")>
    Partial Public Class SetorCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), System.Data.DataSet)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>
    Public Delegate Sub SecaoCompletedEventHandler(ByVal sender As Object, ByVal e As SecaoCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),
     System.Diagnostics.DebuggerStepThroughAttribute(),
     System.ComponentModel.DesignerCategoryAttribute("code")>
    Partial Public Class SecaoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), System.Data.DataSet)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>
    Public Delegate Sub CargoCompletedEventHandler(ByVal sender As Object, ByVal e As CargoCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),
     System.Diagnostics.DebuggerStepThroughAttribute(),
     System.ComponentModel.DesignerCategoryAttribute("code")>
    Partial Public Class CargoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), System.Data.DataSet)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>
    Public Delegate Sub Ativo_Tipo_Sub_GrupoCompletedEventHandler(ByVal sender As Object, ByVal e As Ativo_Tipo_Sub_GrupoCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),
     System.Diagnostics.DebuggerStepThroughAttribute(),
     System.ComponentModel.DesignerCategoryAttribute("code")>
    Partial Public Class Ativo_Tipo_Sub_GrupoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), System.Data.DataSet)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>
    Public Delegate Sub Ativo_Tipo_Grupo_TipoCompletedEventHandler(ByVal sender As Object, ByVal e As Ativo_Tipo_Grupo_TipoCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),
     System.Diagnostics.DebuggerStepThroughAttribute(),
     System.ComponentModel.DesignerCategoryAttribute("code")>
    Partial Public Class Ativo_Tipo_Grupo_TipoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), System.Data.DataSet)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>
    Public Delegate Sub Ativo_FabricanteCompletedEventHandler(ByVal sender As Object, ByVal e As Ativo_FabricanteCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),
     System.Diagnostics.DebuggerStepThroughAttribute(),
     System.ComponentModel.DesignerCategoryAttribute("code")>
    Partial Public Class Ativo_FabricanteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), System.Data.DataSet)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>
    Public Delegate Sub Bilhete_TipoCompletedEventHandler(ByVal sender As Object, ByVal e As Bilhete_TipoCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),
     System.Diagnostics.DebuggerStepThroughAttribute(),
     System.ComponentModel.DesignerCategoryAttribute("code")>
    Partial Public Class Bilhete_TipoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), System.Data.DataSet)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>
    Public Delegate Sub Ativo_TipoCompletedEventHandler(ByVal sender As Object, ByVal e As Ativo_TipoCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),
     System.Diagnostics.DebuggerStepThroughAttribute(),
     System.ComponentModel.DesignerCategoryAttribute("code")>
    Partial Public Class Ativo_TipoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), System.Data.DataSet)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>
    Public Delegate Sub Auditoria_StatusCompletedEventHandler(ByVal sender As Object, ByVal e As Auditoria_StatusCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),
     System.Diagnostics.DebuggerStepThroughAttribute(),
     System.ComponentModel.DesignerCategoryAttribute("code")>
    Partial Public Class Auditoria_StatusCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), System.Data.DataSet)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>
    Public Delegate Sub HoldingCompletedEventHandler(ByVal sender As Object, ByVal e As HoldingCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),
     System.Diagnostics.DebuggerStepThroughAttribute(),
     System.ComponentModel.DesignerCategoryAttribute("code")>
    Partial Public Class HoldingCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), System.Data.DataSet)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>
    Public Delegate Sub Ativo_ModeloCompletedEventHandler(ByVal sender As Object, ByVal e As Ativo_ModeloCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),
     System.Diagnostics.DebuggerStepThroughAttribute(),
     System.ComponentModel.DesignerCategoryAttribute("code")>
    Partial Public Class Ativo_ModeloCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), System.Data.DataSet)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>
    Public Delegate Sub EmpresaCompletedEventHandler(ByVal sender As Object, ByVal e As EmpresaCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),
     System.Diagnostics.DebuggerStepThroughAttribute(),
     System.ComponentModel.DesignerCategoryAttribute("code")>
    Partial Public Class EmpresaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), System.Data.DataSet)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>
    Public Delegate Sub Empresa_ContratadaCompletedEventHandler(ByVal sender As Object, ByVal e As Empresa_ContratadaCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),
     System.Diagnostics.DebuggerStepThroughAttribute(),
     System.ComponentModel.DesignerCategoryAttribute("code")>
    Partial Public Class Empresa_ContratadaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), System.Data.DataSet)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>
    Public Delegate Sub ConglomeradoCompletedEventHandler(ByVal sender As Object, ByVal e As ConglomeradoCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),
     System.Diagnostics.DebuggerStepThroughAttribute(),
     System.ComponentModel.DesignerCategoryAttribute("code")>
    Partial Public Class ConglomeradoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), System.Data.DataSet)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>
    Public Delegate Sub FilialCompletedEventHandler(ByVal sender As Object, ByVal e As FilialCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),
     System.Diagnostics.DebuggerStepThroughAttribute(),
     System.ComponentModel.DesignerCategoryAttribute("code")>
    Partial Public Class FilialCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), System.Data.DataSet)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>
    Public Delegate Sub Ativo_Fr_AquisicaoCompletedEventHandler(ByVal sender As Object, ByVal e As Ativo_Fr_AquisicaoCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),
     System.Diagnostics.DebuggerStepThroughAttribute(),
     System.ComponentModel.DesignerCategoryAttribute("code")>
    Partial Public Class Ativo_Fr_AquisicaoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), System.Data.DataSet)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>
    Public Delegate Sub Ativo_ComplementoCompletedEventHandler(ByVal sender As Object, ByVal e As Ativo_ComplementoCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),
     System.Diagnostics.DebuggerStepThroughAttribute(),
     System.ComponentModel.DesignerCategoryAttribute("code")>
    Partial Public Class Ativo_ComplementoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), System.Data.DataSet)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>
    Public Delegate Sub ServicoCompletedEventHandler(ByVal sender As Object, ByVal e As ServicoCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),
     System.Diagnostics.DebuggerStepThroughAttribute(),
     System.ComponentModel.DesignerCategoryAttribute("code")>
    Partial Public Class ServicoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), System.Data.DataSet)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>
    Public Delegate Sub AtivoCompletedEventHandler(ByVal sender As Object, ByVal e As AtivoCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),
     System.Diagnostics.DebuggerStepThroughAttribute(),
     System.ComponentModel.DesignerCategoryAttribute("code")>
    Partial Public Class AtivoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), System.Data.DataSet)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>
    Public Delegate Sub Ativo_ParametroCompletedEventHandler(ByVal sender As Object, ByVal e As Ativo_ParametroCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),
     System.Diagnostics.DebuggerStepThroughAttribute(),
     System.ComponentModel.DesignerCategoryAttribute("code")>
    Partial Public Class Ativo_ParametroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), System.Data.DataSet)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>
    Public Delegate Sub Ativo_Porcentagem_RateioCompletedEventHandler(ByVal sender As Object, ByVal e As Ativo_Porcentagem_RateioCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),
     System.Diagnostics.DebuggerStepThroughAttribute(),
     System.ComponentModel.DesignerCategoryAttribute("code")>
    Partial Public Class Ativo_Porcentagem_RateioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), System.Data.DataSet)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>
    Public Delegate Sub InventarioLoteCompletedEventHandler(ByVal sender As Object, ByVal e As InventarioLoteCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),
     System.Diagnostics.DebuggerStepThroughAttribute(),
     System.ComponentModel.DesignerCategoryAttribute("code")>
    Partial Public Class InventarioLoteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), System.Data.DataSet)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>
    Public Delegate Sub ConsumidorCompletedEventHandler(ByVal sender As Object, ByVal e As ConsumidorCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),
     System.Diagnostics.DebuggerStepThroughAttribute(),
     System.ComponentModel.DesignerCategoryAttribute("code")>
    Partial Public Class ConsumidorCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), System.Data.DataSet)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>
    Public Delegate Sub Consumidor_TipoCompletedEventHandler(ByVal sender As Object, ByVal e As Consumidor_TipoCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),
     System.Diagnostics.DebuggerStepThroughAttribute(),
     System.ComponentModel.DesignerCategoryAttribute("code")>
    Partial Public Class Consumidor_TipoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), System.Data.DataSet)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>
    Public Delegate Sub Consumidor_UnidadeCompletedEventHandler(ByVal sender As Object, ByVal e As Consumidor_UnidadeCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),
     System.Diagnostics.DebuggerStepThroughAttribute(),
     System.ComponentModel.DesignerCategoryAttribute("code")>
    Partial Public Class Consumidor_UnidadeCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), System.Data.DataSet)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>
    Public Delegate Sub UsuarioCompletedEventHandler(ByVal sender As Object, ByVal e As UsuarioCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),
     System.Diagnostics.DebuggerStepThroughAttribute(),
     System.ComponentModel.DesignerCategoryAttribute("code")>
    Partial Public Class UsuarioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), System.Data.DataSet)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>
    Public Delegate Sub Usuario_PerfilCompletedEventHandler(ByVal sender As Object, ByVal e As Usuario_PerfilCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),
     System.Diagnostics.DebuggerStepThroughAttribute(),
     System.ComponentModel.DesignerCategoryAttribute("code")>
    Partial Public Class Usuario_PerfilCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), System.Data.DataSet)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>
    Public Delegate Sub Usuario_GrupoCompletedEventHandler(ByVal sender As Object, ByVal e As Usuario_GrupoCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),
     System.Diagnostics.DebuggerStepThroughAttribute(),
     System.ComponentModel.DesignerCategoryAttribute("code")>
    Partial Public Class Usuario_GrupoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), System.Data.DataSet)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>
    Public Delegate Sub MarcacaoCompletedEventHandler(ByVal sender As Object, ByVal e As MarcacaoCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),
     System.Diagnostics.DebuggerStepThroughAttribute(),
     System.ComponentModel.DesignerCategoryAttribute("code")>
    Partial Public Class MarcacaoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), System.Data.DataSet)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>
    Public Delegate Sub Bilhete_Historico_ResumoCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>
    Public Delegate Sub Tronco_GrupoCompletedEventHandler(ByVal sender As Object, ByVal e As Tronco_GrupoCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),
     System.Diagnostics.DebuggerStepThroughAttribute(),
     System.ComponentModel.DesignerCategoryAttribute("code")>
    Partial Public Class Tronco_GrupoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), System.Data.DataSet)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>
    Public Delegate Sub TroncoCompletedEventHandler(ByVal sender As Object, ByVal e As TroncoCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),
     System.Diagnostics.DebuggerStepThroughAttribute(),
     System.ComponentModel.DesignerCategoryAttribute("code")>
    Partial Public Class TroncoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), System.Data.DataSet)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>
    Public Delegate Sub Ativo_ReplaceCompletedEventHandler(ByVal sender As Object, ByVal e As Ativo_ReplaceCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),
     System.Diagnostics.DebuggerStepThroughAttribute(),
     System.ComponentModel.DesignerCategoryAttribute("code")>
    Partial Public Class Ativo_ReplaceCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), System.Data.DataSet)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>
    Public Delegate Sub Fatura_Parametro_CampoCompletedEventHandler(ByVal sender As Object, ByVal e As Fatura_Parametro_CampoCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),
     System.Diagnostics.DebuggerStepThroughAttribute(),
     System.ComponentModel.DesignerCategoryAttribute("code")>
    Partial Public Class Fatura_Parametro_CampoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), System.Data.DataSet)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>
    Public Delegate Sub Fatura_ParametroCompletedEventHandler(ByVal sender As Object, ByVal e As Fatura_ParametroCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),
     System.Diagnostics.DebuggerStepThroughAttribute(),
     System.ComponentModel.DesignerCategoryAttribute("code")>
    Partial Public Class Fatura_ParametroCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), System.Data.DataSet)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>
    Public Delegate Sub Consumidor_StatusCompletedEventHandler(ByVal sender As Object, ByVal e As Consumidor_StatusCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),
     System.Diagnostics.DebuggerStepThroughAttribute(),
     System.ComponentModel.DesignerCategoryAttribute("code")>
    Partial Public Class Consumidor_StatusCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), System.Data.DataSet)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>
    Public Delegate Sub Ativo_StatusCompletedEventHandler(ByVal sender As Object, ByVal e As Ativo_StatusCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),
     System.Diagnostics.DebuggerStepThroughAttribute(),
     System.ComponentModel.DesignerCategoryAttribute("code")>
    Partial Public Class Ativo_StatusCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), System.Data.DataSet)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>
    Public Delegate Sub Agenda_Marcacao_ParticularCompletedEventHandler(ByVal sender As Object, ByVal e As Agenda_Marcacao_ParticularCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),
     System.Diagnostics.DebuggerStepThroughAttribute(),
     System.ComponentModel.DesignerCategoryAttribute("code")>
    Partial Public Class Agenda_Marcacao_ParticularCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), System.Data.DataSet)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>
    Public Delegate Sub Contrato_StatusCompletedEventHandler(ByVal sender As Object, ByVal e As Contrato_StatusCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),
     System.Diagnostics.DebuggerStepThroughAttribute(),
     System.ComponentModel.DesignerCategoryAttribute("code")>
    Partial Public Class Contrato_StatusCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), System.Data.DataSet)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>
    Public Delegate Sub Contrato_IndiceCompletedEventHandler(ByVal sender As Object, ByVal e As Contrato_IndiceCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),
     System.Diagnostics.DebuggerStepThroughAttribute(),
     System.ComponentModel.DesignerCategoryAttribute("code")>
    Partial Public Class Contrato_IndiceCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), System.Data.DataSet)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>
    Public Delegate Sub Fatura_Nota_FiscalCompletedEventHandler(ByVal sender As Object, ByVal e As Fatura_Nota_FiscalCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),
     System.Diagnostics.DebuggerStepThroughAttribute(),
     System.ComponentModel.DesignerCategoryAttribute("code")>
    Partial Public Class Fatura_Nota_FiscalCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), System.Data.DataSet)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>
    Public Delegate Sub Custo_FixoCompletedEventHandler(ByVal sender As Object, ByVal e As Custo_FixoCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Custo_FixoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub Custo_Fixo_ItemCompletedEventHandler(ByVal sender As Object, ByVal e As Custo_Fixo_ItemCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Custo_Fixo_ItemCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub Ativo_VagoCompletedEventHandler(ByVal sender As Object, ByVal e As Ativo_VagoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Ativo_VagoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub Envia_LogCompletedEventHandler(ByVal sender As Object, ByVal e As Envia_LogCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Envia_LogCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub Excedente_PoliticaCompletedEventHandler(ByVal sender As Object, ByVal e As Excedente_PoliticaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Excedente_PoliticaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub Estoque_Aparelho_StatusCompletedEventHandler(ByVal sender As Object, ByVal e As Estoque_Aparelho_StatusCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Estoque_Aparelho_StatusCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub Solicitacao_SLACompletedEventHandler(ByVal sender As Object, ByVal e As Solicitacao_SLACompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Solicitacao_SLACompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub Solicitacao_TipoCompletedEventHandler(ByVal sender As Object, ByVal e As Solicitacao_TipoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Solicitacao_TipoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub Solicitacao_SolucaoCompletedEventHandler(ByVal sender As Object, ByVal e As Solicitacao_SolucaoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Solicitacao_SolucaoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub Solicitacao_Data_ParadaCompletedEventHandler(ByVal sender As Object, ByVal e As Solicitacao_Data_ParadaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Solicitacao_Data_ParadaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub Solicitacao_Fila_AtendimentoCompletedEventHandler(ByVal sender As Object, ByVal e As Solicitacao_Fila_AtendimentoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Solicitacao_Fila_AtendimentoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
End Namespace
