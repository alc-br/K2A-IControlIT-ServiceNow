'------------------------------------------------------------------------------
' <auto-generated>
'     O código foi gerado por uma ferramenta.
'     Versão de Tempo de Execução:4.0.30319.42000
'
'     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
'     o código for gerado novamente.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'Este código-fonte foi gerado automaticamente por Microsoft.VSDesigner, Versão 4.0.30319.42000.
'
Namespace WS_GUA_Consulta
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="WSConsultaSoap", [Namespace]:="http://tempuri.org/")>  _
    Partial Public Class WSConsulta
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private PesquisarOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AtivoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsumidorOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LoteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private BilheteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private TemplateOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Rateio_ListaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Volumetria_CustoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Volumetria_ConsumoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Aproveitamento_PacoteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Detalhamento_BilheteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.IControlIT.My.MySettings.Default.IControlIT_WS_GUA_Consulta_WSConsulta
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event PesquisarCompleted As PesquisarCompletedEventHandler
        
        '''<remarks/>
        Public Event AtivoCompleted As AtivoCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsumidorCompleted As ConsumidorCompletedEventHandler
        
        '''<remarks/>
        Public Event LoteCompleted As LoteCompletedEventHandler
        
        '''<remarks/>
        Public Event BilheteCompleted As BilheteCompletedEventHandler
        
        '''<remarks/>
        Public Event TemplateCompleted As TemplateCompletedEventHandler
        
        '''<remarks/>
        Public Event Rateio_ListaCompleted As Rateio_ListaCompletedEventHandler
        
        '''<remarks/>
        Public Event Volumetria_CustoCompleted As Volumetria_CustoCompletedEventHandler
        
        '''<remarks/>
        Public Event Volumetria_ConsumoCompleted As Volumetria_ConsumoCompletedEventHandler
        
        '''<remarks/>
        Public Event Aproveitamento_PacoteCompleted As Aproveitamento_PacoteCompletedEventHandler
        
        '''<remarks/>
        Public Event Detalhamento_BilheteCompleted As Detalhamento_BilheteCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Pesquisar", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Pesquisar(ByVal pPConn_Banco As String, ByVal pPakage As String, ByVal pDescricao As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Pesquisar", New Object() {pPConn_Banco, pPakage, pDescricao})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub PesquisarAsync(ByVal pPConn_Banco As String, ByVal pPakage As String, ByVal pDescricao As String)
            Me.PesquisarAsync(pPConn_Banco, pPakage, pDescricao, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub PesquisarAsync(ByVal pPConn_Banco As String, ByVal pPakage As String, ByVal pDescricao As String, ByVal userState As Object)
            If (Me.PesquisarOperationCompleted Is Nothing) Then
                Me.PesquisarOperationCompleted = AddressOf Me.OnPesquisarOperationCompleted
            End If
            Me.InvokeAsync("Pesquisar", New Object() {pPConn_Banco, pPakage, pDescricao}, Me.PesquisarOperationCompleted, userState)
        End Sub
        
        Private Sub OnPesquisarOperationCompleted(ByVal arg As Object)
            If (Not (Me.PesquisarCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent PesquisarCompleted(Me, New PesquisarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Ativo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Ativo(ByVal pPConn_Banco As String, ByVal pPakage As String, ByVal pDescricao As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Ativo", New Object() {pPConn_Banco, pPakage, pDescricao})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub AtivoAsync(ByVal pPConn_Banco As String, ByVal pPakage As String, ByVal pDescricao As String)
            Me.AtivoAsync(pPConn_Banco, pPakage, pDescricao, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AtivoAsync(ByVal pPConn_Banco As String, ByVal pPakage As String, ByVal pDescricao As String, ByVal userState As Object)
            If (Me.AtivoOperationCompleted Is Nothing) Then
                Me.AtivoOperationCompleted = AddressOf Me.OnAtivoOperationCompleted
            End If
            Me.InvokeAsync("Ativo", New Object() {pPConn_Banco, pPakage, pDescricao}, Me.AtivoOperationCompleted, userState)
        End Sub
        
        Private Sub OnAtivoOperationCompleted(ByVal arg As Object)
            If (Not (Me.AtivoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AtivoCompleted(Me, New AtivoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Consumidor", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Consumidor(ByVal pPConn_Banco As String, ByVal pPakage As String, ByVal pDescricao As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Consumidor", New Object() {pPConn_Banco, pPakage, pDescricao})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsumidorAsync(ByVal pPConn_Banco As String, ByVal pPakage As String, ByVal pDescricao As String)
            Me.ConsumidorAsync(pPConn_Banco, pPakage, pDescricao, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsumidorAsync(ByVal pPConn_Banco As String, ByVal pPakage As String, ByVal pDescricao As String, ByVal userState As Object)
            If (Me.ConsumidorOperationCompleted Is Nothing) Then
                Me.ConsumidorOperationCompleted = AddressOf Me.OnConsumidorOperationCompleted
            End If
            Me.InvokeAsync("Consumidor", New Object() {pPConn_Banco, pPakage, pDescricao}, Me.ConsumidorOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsumidorOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsumidorCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsumidorCompleted(Me, New ConsumidorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Lote", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Lote(ByVal pPConn_Banco As String, ByVal pPakage As String, ByVal pPakage_Filtro As String, ByVal pId_Filtro_1 As String, ByVal pId_Filtro_Filial As String, ByVal pId_Filtro_Usuario As Integer, ByVal p_Id_Filtro_Centro_Custo As String, ByVal p_Id_Filtro_Departamento As String, ByVal p_Id_Filtro_Setor As String, ByVal pDt_LoteDe As String, ByVal pDt_LoteAte As String, ByVal pAtivo_Tipo_Grupo As String, ByVal pId_Usuario As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Lote", New Object() {pPConn_Banco, pPakage, pPakage_Filtro, pId_Filtro_1, pId_Filtro_Filial, pId_Filtro_Usuario, p_Id_Filtro_Centro_Custo, p_Id_Filtro_Departamento, p_Id_Filtro_Setor, pDt_LoteDe, pDt_LoteAte, pAtivo_Tipo_Grupo, pId_Usuario})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub LoteAsync(ByVal pPConn_Banco As String, ByVal pPakage As String, ByVal pPakage_Filtro As String, ByVal pId_Filtro_1 As String, ByVal pId_Filtro_Filial As String, ByVal pId_Filtro_Usuario As Integer, ByVal p_Id_Filtro_Centro_Custo As String, ByVal p_Id_Filtro_Departamento As String, ByVal p_Id_Filtro_Setor As String, ByVal pDt_LoteDe As String, ByVal pDt_LoteAte As String, ByVal pAtivo_Tipo_Grupo As String, ByVal pId_Usuario As Integer)
            Me.LoteAsync(pPConn_Banco, pPakage, pPakage_Filtro, pId_Filtro_1, pId_Filtro_Filial, pId_Filtro_Usuario, p_Id_Filtro_Centro_Custo, p_Id_Filtro_Departamento, p_Id_Filtro_Setor, pDt_LoteDe, pDt_LoteAte, pAtivo_Tipo_Grupo, pId_Usuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LoteAsync(ByVal pPConn_Banco As String, ByVal pPakage As String, ByVal pPakage_Filtro As String, ByVal pId_Filtro_1 As String, ByVal pId_Filtro_Filial As String, ByVal pId_Filtro_Usuario As Integer, ByVal p_Id_Filtro_Centro_Custo As String, ByVal p_Id_Filtro_Departamento As String, ByVal p_Id_Filtro_Setor As String, ByVal pDt_LoteDe As String, ByVal pDt_LoteAte As String, ByVal pAtivo_Tipo_Grupo As String, ByVal pId_Usuario As Integer, ByVal userState As Object)
            If (Me.LoteOperationCompleted Is Nothing) Then
                Me.LoteOperationCompleted = AddressOf Me.OnLoteOperationCompleted
            End If
            Me.InvokeAsync("Lote", New Object() {pPConn_Banco, pPakage, pPakage_Filtro, pId_Filtro_1, pId_Filtro_Filial, pId_Filtro_Usuario, p_Id_Filtro_Centro_Custo, p_Id_Filtro_Departamento, p_Id_Filtro_Setor, pDt_LoteDe, pDt_LoteAte, pAtivo_Tipo_Grupo, pId_Usuario}, Me.LoteOperationCompleted, userState)
        End Sub
        
        Private Sub OnLoteOperationCompleted(ByVal arg As Object)
            If (Not (Me.LoteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LoteCompleted(Me, New LoteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Bilhete", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Bilhete(ByVal pPConn_Banco As String, ByVal pPakage As String, ByVal pId_Lote As Double, ByVal pId_Usuario As Integer, ByVal pId_Bilhete_Tipo As Integer, ByVal pId_Usuario_Marcacao As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Bilhete", New Object() {pPConn_Banco, pPakage, pId_Lote, pId_Usuario, pId_Bilhete_Tipo, pId_Usuario_Marcacao})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub BilheteAsync(ByVal pPConn_Banco As String, ByVal pPakage As String, ByVal pId_Lote As Double, ByVal pId_Usuario As Integer, ByVal pId_Bilhete_Tipo As Integer, ByVal pId_Usuario_Marcacao As Integer)
            Me.BilheteAsync(pPConn_Banco, pPakage, pId_Lote, pId_Usuario, pId_Bilhete_Tipo, pId_Usuario_Marcacao, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub BilheteAsync(ByVal pPConn_Banco As String, ByVal pPakage As String, ByVal pId_Lote As Double, ByVal pId_Usuario As Integer, ByVal pId_Bilhete_Tipo As Integer, ByVal pId_Usuario_Marcacao As Integer, ByVal userState As Object)
            If (Me.BilheteOperationCompleted Is Nothing) Then
                Me.BilheteOperationCompleted = AddressOf Me.OnBilheteOperationCompleted
            End If
            Me.InvokeAsync("Bilhete", New Object() {pPConn_Banco, pPakage, pId_Lote, pId_Usuario, pId_Bilhete_Tipo, pId_Usuario_Marcacao}, Me.BilheteOperationCompleted, userState)
        End Sub
        
        Private Sub OnBilheteOperationCompleted(ByVal arg As Object)
            If (Not (Me.BilheteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent BilheteCompleted(Me, New BilheteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Template", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Template(ByVal pPConn_Banco As String, ByVal pProcedure As String, ByVal pPakage As String, ByVal pPakage_Filtro As String, ByVal pId_Filtro_1 As String, ByVal pId_Filtro_Filial As String, ByVal pId_Filtro_Usuario As Integer, ByVal p_Id_Filtro_Centro_Custo As String, ByVal p_Id_Filtro_Departamento As String, ByVal p_Id_Filtro_Setor As String, ByVal pDt_LoteDe As String, ByVal pDt_LoteAte As String, ByVal pAtivo_Tipo_Grupo As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Template", New Object() {pPConn_Banco, pProcedure, pPakage, pPakage_Filtro, pId_Filtro_1, pId_Filtro_Filial, pId_Filtro_Usuario, p_Id_Filtro_Centro_Custo, p_Id_Filtro_Departamento, p_Id_Filtro_Setor, pDt_LoteDe, pDt_LoteAte, pAtivo_Tipo_Grupo})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub TemplateAsync(ByVal pPConn_Banco As String, ByVal pProcedure As String, ByVal pPakage As String, ByVal pPakage_Filtro As String, ByVal pId_Filtro_1 As String, ByVal pId_Filtro_Filial As String, ByVal pId_Filtro_Usuario As Integer, ByVal p_Id_Filtro_Centro_Custo As String, ByVal p_Id_Filtro_Departamento As String, ByVal p_Id_Filtro_Setor As String, ByVal pDt_LoteDe As String, ByVal pDt_LoteAte As String, ByVal pAtivo_Tipo_Grupo As String)
            Me.TemplateAsync(pPConn_Banco, pProcedure, pPakage, pPakage_Filtro, pId_Filtro_1, pId_Filtro_Filial, pId_Filtro_Usuario, p_Id_Filtro_Centro_Custo, p_Id_Filtro_Departamento, p_Id_Filtro_Setor, pDt_LoteDe, pDt_LoteAte, pAtivo_Tipo_Grupo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub TemplateAsync(ByVal pPConn_Banco As String, ByVal pProcedure As String, ByVal pPakage As String, ByVal pPakage_Filtro As String, ByVal pId_Filtro_1 As String, ByVal pId_Filtro_Filial As String, ByVal pId_Filtro_Usuario As Integer, ByVal p_Id_Filtro_Centro_Custo As String, ByVal p_Id_Filtro_Departamento As String, ByVal p_Id_Filtro_Setor As String, ByVal pDt_LoteDe As String, ByVal pDt_LoteAte As String, ByVal pAtivo_Tipo_Grupo As String, ByVal userState As Object)
            If (Me.TemplateOperationCompleted Is Nothing) Then
                Me.TemplateOperationCompleted = AddressOf Me.OnTemplateOperationCompleted
            End If
            Me.InvokeAsync("Template", New Object() {pPConn_Banco, pProcedure, pPakage, pPakage_Filtro, pId_Filtro_1, pId_Filtro_Filial, pId_Filtro_Usuario, p_Id_Filtro_Centro_Custo, p_Id_Filtro_Departamento, p_Id_Filtro_Setor, pDt_LoteDe, pDt_LoteAte, pAtivo_Tipo_Grupo}, Me.TemplateOperationCompleted, userState)
        End Sub
        
        Private Sub OnTemplateOperationCompleted(ByVal arg As Object)
            If (Not (Me.TemplateCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent TemplateCompleted(Me, New TemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Rateio_Lista", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Rateio_Lista(ByVal pPConn_Banco As String, ByVal pId_Rateio As String, ByVal pDt_Lote As String, ByVal pPakage As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Rateio_Lista", New Object() {pPConn_Banco, pId_Rateio, pDt_Lote, pPakage})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Rateio_ListaAsync(ByVal pPConn_Banco As String, ByVal pId_Rateio As String, ByVal pDt_Lote As String, ByVal pPakage As String)
            Me.Rateio_ListaAsync(pPConn_Banco, pId_Rateio, pDt_Lote, pPakage, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Rateio_ListaAsync(ByVal pPConn_Banco As String, ByVal pId_Rateio As String, ByVal pDt_Lote As String, ByVal pPakage As String, ByVal userState As Object)
            If (Me.Rateio_ListaOperationCompleted Is Nothing) Then
                Me.Rateio_ListaOperationCompleted = AddressOf Me.OnRateio_ListaOperationCompleted
            End If
            Me.InvokeAsync("Rateio_Lista", New Object() {pPConn_Banco, pId_Rateio, pDt_Lote, pPakage}, Me.Rateio_ListaOperationCompleted, userState)
        End Sub
        
        Private Sub OnRateio_ListaOperationCompleted(ByVal arg As Object)
            If (Not (Me.Rateio_ListaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Rateio_ListaCompleted(Me, New Rateio_ListaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Volumetria_Custo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Volumetria_Custo(ByVal pPConn_Banco As String, ByVal pAtivo_Tipo_Grupo As String, ByVal pId_Conglomerado As Integer, ByVal pDt_LoteDe As String, ByVal pDt_LoteAte As String, ByVal pPakage As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Volumetria_Custo", New Object() {pPConn_Banco, pAtivo_Tipo_Grupo, pId_Conglomerado, pDt_LoteDe, pDt_LoteAte, pPakage})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Volumetria_CustoAsync(ByVal pPConn_Banco As String, ByVal pAtivo_Tipo_Grupo As String, ByVal pId_Conglomerado As Integer, ByVal pDt_LoteDe As String, ByVal pDt_LoteAte As String, ByVal pPakage As String)
            Me.Volumetria_CustoAsync(pPConn_Banco, pAtivo_Tipo_Grupo, pId_Conglomerado, pDt_LoteDe, pDt_LoteAte, pPakage, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Volumetria_CustoAsync(ByVal pPConn_Banco As String, ByVal pAtivo_Tipo_Grupo As String, ByVal pId_Conglomerado As Integer, ByVal pDt_LoteDe As String, ByVal pDt_LoteAte As String, ByVal pPakage As String, ByVal userState As Object)
            If (Me.Volumetria_CustoOperationCompleted Is Nothing) Then
                Me.Volumetria_CustoOperationCompleted = AddressOf Me.OnVolumetria_CustoOperationCompleted
            End If
            Me.InvokeAsync("Volumetria_Custo", New Object() {pPConn_Banco, pAtivo_Tipo_Grupo, pId_Conglomerado, pDt_LoteDe, pDt_LoteAte, pPakage}, Me.Volumetria_CustoOperationCompleted, userState)
        End Sub
        
        Private Sub OnVolumetria_CustoOperationCompleted(ByVal arg As Object)
            If (Not (Me.Volumetria_CustoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Volumetria_CustoCompleted(Me, New Volumetria_CustoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Volumetria_Consumo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Volumetria_Consumo(ByVal pPConn_Banco As String, ByVal pAtivo_Tipo_Grupo As String, ByVal pId_Conglomerado As Integer, ByVal pDt_LoteDe As String, ByVal pDt_LoteAte As String, ByVal pPakage As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Volumetria_Consumo", New Object() {pPConn_Banco, pAtivo_Tipo_Grupo, pId_Conglomerado, pDt_LoteDe, pDt_LoteAte, pPakage})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Volumetria_ConsumoAsync(ByVal pPConn_Banco As String, ByVal pAtivo_Tipo_Grupo As String, ByVal pId_Conglomerado As Integer, ByVal pDt_LoteDe As String, ByVal pDt_LoteAte As String, ByVal pPakage As String)
            Me.Volumetria_ConsumoAsync(pPConn_Banco, pAtivo_Tipo_Grupo, pId_Conglomerado, pDt_LoteDe, pDt_LoteAte, pPakage, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Volumetria_ConsumoAsync(ByVal pPConn_Banco As String, ByVal pAtivo_Tipo_Grupo As String, ByVal pId_Conglomerado As Integer, ByVal pDt_LoteDe As String, ByVal pDt_LoteAte As String, ByVal pPakage As String, ByVal userState As Object)
            If (Me.Volumetria_ConsumoOperationCompleted Is Nothing) Then
                Me.Volumetria_ConsumoOperationCompleted = AddressOf Me.OnVolumetria_ConsumoOperationCompleted
            End If
            Me.InvokeAsync("Volumetria_Consumo", New Object() {pPConn_Banco, pAtivo_Tipo_Grupo, pId_Conglomerado, pDt_LoteDe, pDt_LoteAte, pPakage}, Me.Volumetria_ConsumoOperationCompleted, userState)
        End Sub
        
        Private Sub OnVolumetria_ConsumoOperationCompleted(ByVal arg As Object)
            If (Not (Me.Volumetria_ConsumoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Volumetria_ConsumoCompleted(Me, New Volumetria_ConsumoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Aproveitamento_Pacote", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Aproveitamento_Pacote(ByVal pPConn_Banco As String, ByVal pAtivo_Tipo_Grupo As String, ByVal pDt_LoteDe As String, ByVal pPakage As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Aproveitamento_Pacote", New Object() {pPConn_Banco, pAtivo_Tipo_Grupo, pDt_LoteDe, pPakage})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Aproveitamento_PacoteAsync(ByVal pPConn_Banco As String, ByVal pAtivo_Tipo_Grupo As String, ByVal pDt_LoteDe As String, ByVal pPakage As String)
            Me.Aproveitamento_PacoteAsync(pPConn_Banco, pAtivo_Tipo_Grupo, pDt_LoteDe, pPakage, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Aproveitamento_PacoteAsync(ByVal pPConn_Banco As String, ByVal pAtivo_Tipo_Grupo As String, ByVal pDt_LoteDe As String, ByVal pPakage As String, ByVal userState As Object)
            If (Me.Aproveitamento_PacoteOperationCompleted Is Nothing) Then
                Me.Aproveitamento_PacoteOperationCompleted = AddressOf Me.OnAproveitamento_PacoteOperationCompleted
            End If
            Me.InvokeAsync("Aproveitamento_Pacote", New Object() {pPConn_Banco, pAtivo_Tipo_Grupo, pDt_LoteDe, pPakage}, Me.Aproveitamento_PacoteOperationCompleted, userState)
        End Sub
        
        Private Sub OnAproveitamento_PacoteOperationCompleted(ByVal arg As Object)
            If (Not (Me.Aproveitamento_PacoteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Aproveitamento_PacoteCompleted(Me, New Aproveitamento_PacoteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Detalhamento_Bilhete", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Detalhamento_Bilhete(ByVal pPConn_Banco As String, ByVal pAtivo_Tipo_Grupo As String, ByVal pId_Conglomerado As Integer, ByVal pDt_LoteDe As String, ByVal pDt_LoteAte As String, ByVal pPakage As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Detalhamento_Bilhete", New Object() {pPConn_Banco, pAtivo_Tipo_Grupo, pId_Conglomerado, pDt_LoteDe, pDt_LoteAte, pPakage})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Detalhamento_BilheteAsync(ByVal pPConn_Banco As String, ByVal pAtivo_Tipo_Grupo As String, ByVal pId_Conglomerado As Integer, ByVal pDt_LoteDe As String, ByVal pDt_LoteAte As String, ByVal pPakage As String)
            Me.Detalhamento_BilheteAsync(pPConn_Banco, pAtivo_Tipo_Grupo, pId_Conglomerado, pDt_LoteDe, pDt_LoteAte, pPakage, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Detalhamento_BilheteAsync(ByVal pPConn_Banco As String, ByVal pAtivo_Tipo_Grupo As String, ByVal pId_Conglomerado As Integer, ByVal pDt_LoteDe As String, ByVal pDt_LoteAte As String, ByVal pPakage As String, ByVal userState As Object)
            If (Me.Detalhamento_BilheteOperationCompleted Is Nothing) Then
                Me.Detalhamento_BilheteOperationCompleted = AddressOf Me.OnDetalhamento_BilheteOperationCompleted
            End If
            Me.InvokeAsync("Detalhamento_Bilhete", New Object() {pPConn_Banco, pAtivo_Tipo_Grupo, pId_Conglomerado, pDt_LoteDe, pDt_LoteAte, pPakage}, Me.Detalhamento_BilheteOperationCompleted, userState)
        End Sub
        
        Private Sub OnDetalhamento_BilheteOperationCompleted(ByVal arg As Object)
            If (Not (Me.Detalhamento_BilheteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Detalhamento_BilheteCompleted(Me, New Detalhamento_BilheteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub PesquisarCompletedEventHandler(ByVal sender As Object, ByVal e As PesquisarCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class PesquisarCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub AtivoCompletedEventHandler(ByVal sender As Object, ByVal e As AtivoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class AtivoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub ConsumidorCompletedEventHandler(ByVal sender As Object, ByVal e As ConsumidorCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsumidorCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub LoteCompletedEventHandler(ByVal sender As Object, ByVal e As LoteCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class LoteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub BilheteCompletedEventHandler(ByVal sender As Object, ByVal e As BilheteCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class BilheteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub TemplateCompletedEventHandler(ByVal sender As Object, ByVal e As TemplateCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class TemplateCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub Rateio_ListaCompletedEventHandler(ByVal sender As Object, ByVal e As Rateio_ListaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Rateio_ListaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub Volumetria_CustoCompletedEventHandler(ByVal sender As Object, ByVal e As Volumetria_CustoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Volumetria_CustoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub Volumetria_ConsumoCompletedEventHandler(ByVal sender As Object, ByVal e As Volumetria_ConsumoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Volumetria_ConsumoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub Aproveitamento_PacoteCompletedEventHandler(ByVal sender As Object, ByVal e As Aproveitamento_PacoteCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Aproveitamento_PacoteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub Detalhamento_BilheteCompletedEventHandler(ByVal sender As Object, ByVal e As Detalhamento_BilheteCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Detalhamento_BilheteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
End Namespace
