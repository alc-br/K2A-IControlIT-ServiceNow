'------------------------------------------------------------------------------
' <auto-generated>
'     O código foi gerado por uma ferramenta.
'     Versão de Tempo de Execução:4.0.30319.42000
'
'     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
'     o código for gerado novamente.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'Este código-fonte foi gerado automaticamente por Microsoft.VSDesigner, Versão 4.0.30319.42000.
'
Namespace WS_GUA_Contrato
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="WSContratoSoap", [Namespace]:="http://tempuri.org/")>  _
    Partial Public Class WSContrato
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private ContratoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Contrato_SLA_OperacaoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Contrato_SLA_ServicoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Contrato_AditivoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.IControlIT.My.MySettings.Default.IControlIT_WS_GUA_Contrato_WSContrato
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event ContratoCompleted As ContratoCompletedEventHandler
        
        '''<remarks/>
        Public Event Contrato_SLA_OperacaoCompleted As Contrato_SLA_OperacaoCompletedEventHandler
        
        '''<remarks/>
        Public Event Contrato_SLA_ServicoCompleted As Contrato_SLA_ServicoCompletedEventHandler
        
        '''<remarks/>
        Public Event Contrato_AditivoCompleted As Contrato_AditivoCompletedEventHandler

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Contrato", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function Contrato(ByVal pPConn_Banco As String, ByVal pId_Contrato As Integer, ByVal pNr_Contrato As String, ByVal pDescricao As String, ByVal pId_Contrato_Status As Integer, ByVal pId_Servico As Integer, ByVal pDt_Inicio_Vigencia As Date, ByVal pDt_Fim_Vigencia As Date, ByVal pId_Filial As String, ByVal pId_Empresa_Contratada As String, ByVal pObjeto As String, ByVal pId_Contrato_Indice As Integer, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Contrato", New Object() {pPConn_Banco, pId_Contrato, pNr_Contrato, pDescricao, pId_Contrato_Status, pId_Servico, pDt_Inicio_Vigencia, pDt_Fim_Vigencia, pId_Filial, pId_Empresa_Contratada, pObjeto, pId_Contrato_Indice, pId_Usuario_Permissao, pPakage, pRetorno})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub ContratoAsync(ByVal pPConn_Banco As String, ByVal pId_Contrato As Integer, ByVal pNr_Contrato As String, ByVal pDescricao As String, ByVal pId_Contrato_Status As Integer, ByVal pId_Servico As Integer, ByVal pDt_Inicio_Vigencia As Date, ByVal pDt_Fim_Vigencia As Date, ByVal pId_Filial As String, ByVal pId_Empresa_Contratada As String, ByVal pObjeto As String, ByVal pId_Contrato_Indice As Integer, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean)
            Me.ContratoAsync(pPConn_Banco, pId_Contrato, pNr_Contrato, pDescricao, pId_Contrato_Status, pId_Servico, pDt_Inicio_Vigencia, pDt_Fim_Vigencia, pId_Filial, pId_Empresa_Contratada, pObjeto, pId_Contrato_Indice, pId_Usuario_Permissao, pPakage, pRetorno, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub ContratoAsync(ByVal pPConn_Banco As String, ByVal pId_Contrato As Integer, ByVal pNr_Contrato As String, ByVal pDescricao As String, ByVal pId_Contrato_Status As Integer, ByVal pId_Servico As Integer, ByVal pDt_Inicio_Vigencia As Date, ByVal pDt_Fim_Vigencia As Date, ByVal pId_Filial As String, ByVal pId_Empresa_Contratada As String, ByVal pObjeto As String, ByVal pId_Contrato_Indice As Integer, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean, ByVal userState As Object)
            If (Me.ContratoOperationCompleted Is Nothing) Then
                Me.ContratoOperationCompleted = AddressOf Me.OnContratoOperationCompleted
            End If
            Me.InvokeAsync("Contrato", New Object() {pPConn_Banco, pId_Contrato, pNr_Contrato, pDescricao, pId_Contrato_Status, pId_Servico, pDt_Inicio_Vigencia, pDt_Fim_Vigencia, pId_Filial, pId_Empresa_Contratada, pObjeto, pId_Contrato_Indice, pId_Usuario_Permissao, pPakage, pRetorno}, Me.ContratoOperationCompleted, userState)
        End Sub

        Private Sub OnContratoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ContratoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ContratoCompleted(Me, New ContratoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Contrato_SLA_Operacao", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Contrato_SLA_Operacao(ByVal pPConn_Banco As String, ByVal pId_Contrato_SLA_Operacao As Integer, ByVal pId_Contrato As Integer, ByVal pDescricao As String, ByVal pPrazo_Dias As Integer, ByVal pVr_SLA_Operacao As Double, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Contrato_SLA_Operacao", New Object() {pPConn_Banco, pId_Contrato_SLA_Operacao, pId_Contrato, pDescricao, pPrazo_Dias, pVr_SLA_Operacao, pId_Usuario_Permissao, pPakage, pRetorno})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Contrato_SLA_OperacaoAsync(ByVal pPConn_Banco As String, ByVal pId_Contrato_SLA_Operacao As Integer, ByVal pId_Contrato As Integer, ByVal pDescricao As String, ByVal pPrazo_Dias As Integer, ByVal pVr_SLA_Operacao As Double, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean)
            Me.Contrato_SLA_OperacaoAsync(pPConn_Banco, pId_Contrato_SLA_Operacao, pId_Contrato, pDescricao, pPrazo_Dias, pVr_SLA_Operacao, pId_Usuario_Permissao, pPakage, pRetorno, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Contrato_SLA_OperacaoAsync(ByVal pPConn_Banco As String, ByVal pId_Contrato_SLA_Operacao As Integer, ByVal pId_Contrato As Integer, ByVal pDescricao As String, ByVal pPrazo_Dias As Integer, ByVal pVr_SLA_Operacao As Double, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean, ByVal userState As Object)
            If (Me.Contrato_SLA_OperacaoOperationCompleted Is Nothing) Then
                Me.Contrato_SLA_OperacaoOperationCompleted = AddressOf Me.OnContrato_SLA_OperacaoOperationCompleted
            End If
            Me.InvokeAsync("Contrato_SLA_Operacao", New Object() {pPConn_Banco, pId_Contrato_SLA_Operacao, pId_Contrato, pDescricao, pPrazo_Dias, pVr_SLA_Operacao, pId_Usuario_Permissao, pPakage, pRetorno}, Me.Contrato_SLA_OperacaoOperationCompleted, userState)
        End Sub
        
        Private Sub OnContrato_SLA_OperacaoOperationCompleted(ByVal arg As Object)
            If (Not (Me.Contrato_SLA_OperacaoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Contrato_SLA_OperacaoCompleted(Me, New Contrato_SLA_OperacaoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Contrato_SLA_Servico", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function Contrato_SLA_Servico(ByVal pPConn_Banco As String, ByVal pId_Contrato_SLA_Servico As Integer, ByVal pId_Contrato As Integer, ByVal pDescricao As String, ByVal pId_Operadora As Integer, ByVal pTipo_Servico As String, ByVal pVr_SLA_Servico As Double, ByVal pId_Contrato_Indice As Integer, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Contrato_SLA_Servico", New Object() {pPConn_Banco, pId_Contrato_SLA_Servico, pId_Contrato, pDescricao, pId_Operadora, pTipo_Servico, pVr_SLA_Servico, pId_Contrato_Indice, pId_Usuario_Permissao, pPakage, pRetorno})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub Contrato_SLA_ServicoAsync(ByVal pPConn_Banco As String, ByVal pId_Contrato_SLA_Servico As Integer, ByVal pId_Contrato As Integer, ByVal pDescricao As String, ByVal pId_Operadora As Integer, ByVal pTipo_Servico As String, ByVal pVr_SLA_Servico As Double, ByVal pId_Contrato_Indice As Integer, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean)
            Me.Contrato_SLA_ServicoAsync(pPConn_Banco, pId_Contrato_SLA_Servico, pId_Contrato, pDescricao, pId_Operadora, pTipo_Servico, pVr_SLA_Servico, pId_Contrato_Indice, pId_Usuario_Permissao, pPakage, pRetorno, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub Contrato_SLA_ServicoAsync(ByVal pPConn_Banco As String, ByVal pId_Contrato_SLA_Servico As Integer, ByVal pId_Contrato As Integer, ByVal pDescricao As String, ByVal pId_Operadora As Integer, ByVal pTipo_Servico As String, ByVal pVr_SLA_Servico As Double, ByVal pId_Contrato_Indice As Integer, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean, ByVal userState As Object)
            If (Me.Contrato_SLA_ServicoOperationCompleted Is Nothing) Then
                Me.Contrato_SLA_ServicoOperationCompleted = AddressOf Me.OnContrato_SLA_ServicoOperationCompleted
            End If
            Me.InvokeAsync("Contrato_SLA_Servico", New Object() {pPConn_Banco, pId_Contrato_SLA_Servico, pId_Contrato, pDescricao, pTipo_Servico, pVr_SLA_Servico, pId_Usuario_Permissao, pPakage, pRetorno}, Me.Contrato_SLA_ServicoOperationCompleted, userState)
        End Sub

        Private Sub OnContrato_SLA_ServicoOperationCompleted(ByVal arg As Object)
            If (Not (Me.Contrato_SLA_ServicoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Contrato_SLA_ServicoCompleted(Me, New Contrato_SLA_ServicoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Contrato_Aditivo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Contrato_Aditivo(ByVal pPConn_Banco As String, ByVal pId_Contrato_Aditivo As Integer, ByVal pId_Contrato As Integer, ByVal pDt_Vigencia As Date, ByVal pDescricao As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Contrato_Aditivo", New Object() {pPConn_Banco, pId_Contrato_Aditivo, pId_Contrato, pDt_Vigencia, pDescricao, pId_Usuario_Permissao, pPakage, pRetorno})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Contrato_AditivoAsync(ByVal pPConn_Banco As String, ByVal pId_Contrato_Aditivo As Integer, ByVal pId_Contrato As Integer, ByVal pDt_Vigencia As Date, ByVal pDescricao As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean)
            Me.Contrato_AditivoAsync(pPConn_Banco, pId_Contrato_Aditivo, pId_Contrato, pDt_Vigencia, pDescricao, pId_Usuario_Permissao, pPakage, pRetorno, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Contrato_AditivoAsync(ByVal pPConn_Banco As String, ByVal pId_Contrato_Aditivo As Integer, ByVal pId_Contrato As Integer, ByVal pDt_Vigencia As Date, ByVal pDescricao As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean, ByVal userState As Object)
            If (Me.Contrato_AditivoOperationCompleted Is Nothing) Then
                Me.Contrato_AditivoOperationCompleted = AddressOf Me.OnContrato_AditivoOperationCompleted
            End If
            Me.InvokeAsync("Contrato_Aditivo", New Object() {pPConn_Banco, pId_Contrato_Aditivo, pId_Contrato, pDt_Vigencia, pDescricao, pId_Usuario_Permissao, pPakage, pRetorno}, Me.Contrato_AditivoOperationCompleted, userState)
        End Sub
        
        Private Sub OnContrato_AditivoOperationCompleted(ByVal arg As Object)
            If (Not (Me.Contrato_AditivoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Contrato_AditivoCompleted(Me, New Contrato_AditivoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub ContratoCompletedEventHandler(ByVal sender As Object, ByVal e As ContratoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ContratoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub Contrato_SLA_OperacaoCompletedEventHandler(ByVal sender As Object, ByVal e As Contrato_SLA_OperacaoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Contrato_SLA_OperacaoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub Contrato_SLA_ServicoCompletedEventHandler(ByVal sender As Object, ByVal e As Contrato_SLA_ServicoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Contrato_SLA_ServicoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub Contrato_AditivoCompletedEventHandler(ByVal sender As Object, ByVal e As Contrato_AditivoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Contrato_AditivoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
End Namespace
