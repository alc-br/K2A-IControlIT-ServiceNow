'------------------------------------------------------------------------------
' <auto-generated>
'     O código foi gerado por uma ferramenta.
'     Versão de Tempo de Execução:4.0.30319.42000
'
'     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
'     o código for gerado novamente.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'Este código-fonte foi gerado automaticamente por Microsoft.VSDesigner, Versão 4.0.30319.42000.
'
Namespace WS_GUA_Modulo
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="WSModuloSoap", [Namespace]:="http://tempuri.org/")>  _
    Partial Public Class WSModulo
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private Conn_BancoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Validacao_GlobalOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ValidacaoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Status_AcordoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Validacao_RelatorioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeskboardOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Carga_BilheteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Valida_BilheteOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Carga_UsuarioOperationCompleted As System.Threading.SendOrPostCallback

        Private ConsumidorUsuarioOperationCompleted As System.Threading.SendOrPostCallback

        Private Carga_InventarioOperationCompleted As System.Threading.SendOrPostCallback

        Private Bilhete_ManualOperationCompleted As System.Threading.SendOrPostCallback

        Private Bilhete_Tipo_ManualOperationCompleted As System.Threading.SendOrPostCallback

        Private Alerta_SistemaOperationCompleted As System.Threading.SendOrPostCallback

        Private Arquivo_PastaOperationCompleted As System.Threading.SendOrPostCallback

        Private Monta_CargaOperationCompleted As System.Threading.SendOrPostCallback

        Private Monta_Texto_TermoOperationCompleted As System.Threading.SendOrPostCallback

        Private SolicitacaoOperationCompleted As System.Threading.SendOrPostCallback

        Private Solicitacao_AvaliacaoOperationCompleted As System.Threading.SendOrPostCallback

        Private Ativo_App_TrafegoOperationCompleted As System.Threading.SendOrPostCallback

        Private Monitoramento_DadosOperationCompleted As System.Threading.SendOrPostCallback

        Private useDefaultCredentialsSetExplicitly As Boolean

        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.IControlIT.My.MySettings.Default.Ativvus_WS_GUA_Modulo_WSModulo
            If (Me.IsLocalFileSystemWebService(Me.Url) = True) Then
                Me.UseDefaultCredentials = True
                Me.useDefaultCredentialsSetExplicitly = False
            Else
                Me.useDefaultCredentialsSetExplicitly = True
            End If
        End Sub

        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = True) _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = False)) _
                            AndAlso (Me.IsLocalFileSystemWebService(Value) = False)) Then
                    MyBase.UseDefaultCredentials = False
                End If
                MyBase.Url = Value
            End Set
        End Property

        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = Value
                Me.useDefaultCredentialsSetExplicitly = True
            End Set
        End Property

        '''<remarks/>
        Public Event Conn_BancoCompleted As Conn_BancoCompletedEventHandler

        '''<remarks/>
        Public Event Validacao_GlobalCompleted As Validacao_GlobalCompletedEventHandler

        '''<remarks/>
        Public Event ValidacaoCompleted As ValidacaoCompletedEventHandler

        '''<remarks/>
        Public Event Status_AcordoCompleted As Status_AcordoCompletedEventHandler

        '''<remarks/>
        Public Event Validacao_RelatorioCompleted As Validacao_RelatorioCompletedEventHandler

        '''<remarks/>
        Public Event DeskboardCompleted As DeskboardCompletedEventHandler

        '''<remarks/>
        Public Event Carga_BilheteCompleted As Carga_BilheteCompletedEventHandler

        '''<remarks/>
        Public Event Valida_BilheteCompleted As Valida_BilheteCompletedEventHandler

        '''<remarks/>
        Public Event Carga_UsuarioCompleted As Carga_UsuarioCompletedEventHandler

        '''<remarks/>
        Public Event ConsumidorUsuarioCompleted As ConsumidorUsuarioCompletedEventHandler

        '''<remarks/>
        Public Event Carga_InventarioCompleted As Carga_InventarioCompletedEventHandler

        '''<remarks/>
        Public Event Bilhete_ManualCompleted As Bilhete_ManualCompletedEventHandler

        '''<remarks/>
        Public Event Bilhete_Tipo_ManualCompleted As Bilhete_Tipo_ManualCompletedEventHandler

        '''<remarks/>
        Public Event Alerta_SistemaCompleted As Alerta_SistemaCompletedEventHandler

        '''<remarks/>
        Public Event Arquivo_PastaCompleted As Arquivo_PastaCompletedEventHandler

        '''<remarks/>
        Public Event Monta_CargaCompleted As Monta_CargaCompletedEventHandler

        '''<remarks/>
        Public Event Monta_Texto_TermoCompleted As Monta_Texto_TermoCompletedEventHandler

        '''<remarks/>
        Public Event SolicitacaoCompleted As SolicitacaoCompletedEventHandler

        '''<remarks/>
        Public Event Solicitacao_AvaliacaoCompleted As Solicitacao_AvaliacaoCompletedEventHandler

        '''<remarks/>
        Public Event Ativo_App_TrafegoCompleted As Ativo_App_TrafegoCompletedEventHandler

        '''<remarks/>
        Public Event Monitoramento_DadosCompleted As Monitoramento_DadosCompletedEventHandler

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Conn_Banco", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function Conn_Banco() As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Conn_Banco", New Object(-1) {})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub Conn_BancoAsync()
            Me.Conn_BancoAsync(Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub Conn_BancoAsync(ByVal userState As Object)
            If (Me.Conn_BancoOperationCompleted Is Nothing) Then
                Me.Conn_BancoOperationCompleted = AddressOf Me.OnConn_BancoOperationCompleted
            End If
            Me.InvokeAsync("Conn_Banco", New Object(-1) {}, Me.Conn_BancoOperationCompleted, userState)
        End Sub

        Private Sub OnConn_BancoOperationCompleted(ByVal arg As Object)
            If (Not (Me.Conn_BancoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Conn_BancoCompleted(Me, New Conn_BancoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Validacao_Global", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function Validacao_Global(ByVal pPConn_Banco As String, ByVal pPakage As String, ByVal pNm_Usuario As String, ByVal pSenha As String, ByVal pNova_Senha As String, ByVal pEmail_Corporativo As String, ByVal pId_Facebook As String, ByVal pChave_Validacao As String, ByVal pFl_Automatico As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Validacao_Global", New Object() {pPConn_Banco, pPakage, pNm_Usuario, pSenha, pNova_Senha, pEmail_Corporativo, pId_Facebook, pChave_Validacao, pFl_Automatico})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub Validacao_GlobalAsync(ByVal pPConn_Banco As String, ByVal pPakage As String, ByVal pNm_Usuario As String, ByVal pSenha As String, ByVal pNova_Senha As String, ByVal pEmail_Corporativo As String, ByVal pId_Facebook As String, ByVal pChave_Validacao As String, ByVal pFl_Automatico As String)
            Me.Validacao_GlobalAsync(pPConn_Banco, pPakage, pNm_Usuario, pSenha, pNova_Senha, pEmail_Corporativo, pId_Facebook, pChave_Validacao, pFl_Automatico, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub Validacao_GlobalAsync(ByVal pPConn_Banco As String, ByVal pPakage As String, ByVal pNm_Usuario As String, ByVal pSenha As String, ByVal pNova_Senha As String, ByVal pEmail_Corporativo As String, ByVal pId_Facebook As String, ByVal pChave_Validacao As String, ByVal pFl_Automatico As String, ByVal userState As Object)
            If (Me.Validacao_GlobalOperationCompleted Is Nothing) Then
                Me.Validacao_GlobalOperationCompleted = AddressOf Me.OnValidacao_GlobalOperationCompleted
            End If
            Me.InvokeAsync("Validacao_Global", New Object() {pPConn_Banco, pPakage, pNm_Usuario, pSenha, pNova_Senha, pEmail_Corporativo, pId_Facebook, pChave_Validacao, pFl_Automatico}, Me.Validacao_GlobalOperationCompleted, userState)
        End Sub

        Private Sub OnValidacao_GlobalOperationCompleted(ByVal arg As Object)
            If (Not (Me.Validacao_GlobalCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Validacao_GlobalCompleted(Me, New Validacao_GlobalCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Validacao", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function Validacao(ByVal pPConn_Banco As String, ByVal pPakage As String, ByVal pNm_Usuario As String, ByVal pId_Menu As Integer, ByVal pSenha As String, ByVal pLink As String, ByVal pId_Idioma As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Validacao", New Object() {pPConn_Banco, pPakage, pNm_Usuario, pId_Menu, pSenha, pLink, pId_Idioma})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub ValidacaoAsync(ByVal pPConn_Banco As String, ByVal pPakage As String, ByVal pNm_Usuario As String, ByVal pId_Menu As Integer, ByVal pSenha As String, ByVal pLink As String, ByVal pId_Idioma As Integer)
            Me.ValidacaoAsync(pPConn_Banco, pPakage, pNm_Usuario, pId_Menu, pSenha, pLink, pId_Idioma, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub ValidacaoAsync(ByVal pPConn_Banco As String, ByVal pPakage As String, ByVal pNm_Usuario As String, ByVal pId_Menu As Integer, ByVal pSenha As String, ByVal pLink As String, ByVal pId_Idioma As Integer, ByVal userState As Object)
            If (Me.ValidacaoOperationCompleted Is Nothing) Then
                Me.ValidacaoOperationCompleted = AddressOf Me.OnValidacaoOperationCompleted
            End If
            Me.InvokeAsync("Validacao", New Object() {pPConn_Banco, pPakage, pNm_Usuario, pId_Menu, pSenha, pLink, pId_Idioma}, Me.ValidacaoOperationCompleted, userState)
        End Sub

        Private Sub OnValidacaoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ValidacaoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ValidacaoCompleted(Me, New ValidacaoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Status_Acordo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function Status_Acordo(ByVal pPConn_Banco As String, ByVal pPakage As String, ByVal pNm_Usuario As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Status_Acordo", New Object() {pPConn_Banco, pPakage, pNm_Usuario})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub Status_AcordoAsync(ByVal pPConn_Banco As String, ByVal pPakage As String, ByVal pNm_Usuario As Integer)
            Me.Status_AcordoAsync(pPConn_Banco, pPakage, pNm_Usuario, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub Status_AcordoAsync(ByVal pPConn_Banco As String, ByVal pPakage As String, ByVal pNm_Usuario As Integer, ByVal userState As Object)
            If (Me.Status_AcordoOperationCompleted Is Nothing) Then
                Me.Status_AcordoOperationCompleted = AddressOf Me.OnStatus_AcordoOperationCompleted
            End If
            Me.InvokeAsync("Status_Acordo", New Object() {pPConn_Banco, pPakage, pNm_Usuario}, Me.Status_AcordoOperationCompleted, userState)
        End Sub

        Private Sub OnStatus_AcordoOperationCompleted(ByVal arg As Object)
            If (Not (Me.Status_AcordoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Status_AcordoCompleted(Me, New Status_AcordoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Validacao_Relatorio", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function Validacao_Relatorio(ByVal pPConn_Banco As String, ByVal pPakage As String, ByVal pId_Template As Integer, ByVal pId_Usuario As Integer, ByVal pId_Ativo_Tipo_Grupo As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Validacao_Relatorio", New Object() {pPConn_Banco, pPakage, pId_Template, pId_Usuario, pId_Ativo_Tipo_Grupo})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub Validacao_RelatorioAsync(ByVal pPConn_Banco As String, ByVal pPakage As String, ByVal pId_Template As Integer, ByVal pId_Usuario As Integer, ByVal pId_Ativo_Tipo_Grupo As Integer)
            Me.Validacao_RelatorioAsync(pPConn_Banco, pPakage, pId_Template, pId_Usuario, pId_Ativo_Tipo_Grupo, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub Validacao_RelatorioAsync(ByVal pPConn_Banco As String, ByVal pPakage As String, ByVal pId_Template As Integer, ByVal pId_Usuario As Integer, ByVal pId_Ativo_Tipo_Grupo As Integer, ByVal userState As Object)
            If (Me.Validacao_RelatorioOperationCompleted Is Nothing) Then
                Me.Validacao_RelatorioOperationCompleted = AddressOf Me.OnValidacao_RelatorioOperationCompleted
            End If
            Me.InvokeAsync("Validacao_Relatorio", New Object() {pPConn_Banco, pPakage, pId_Template, pId_Usuario, pId_Ativo_Tipo_Grupo}, Me.Validacao_RelatorioOperationCompleted, userState)
        End Sub

        Private Sub OnValidacao_RelatorioOperationCompleted(ByVal arg As Object)
            If (Not (Me.Validacao_RelatorioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Validacao_RelatorioCompleted(Me, New Validacao_RelatorioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Deskboard", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function Deskboard(ByVal pPConn_Banco As String, ByVal pPakage As String, ByVal pGrupoTipoAtivo As String, ByVal pId_Usuario As Integer, ByVal pMes As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Deskboard", New Object() {pPConn_Banco, pPakage, pGrupoTipoAtivo, pId_Usuario, pMes})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub DeskboardAsync(ByVal pPConn_Banco As String, ByVal pPakage As String, ByVal pGrupoTipoAtivo As String, ByVal pId_Usuario As Integer, ByVal pMes As String)
            Me.DeskboardAsync(pPConn_Banco, pPakage, pGrupoTipoAtivo, pId_Usuario, pMes, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub DeskboardAsync(ByVal pPConn_Banco As String, ByVal pPakage As String, ByVal pGrupoTipoAtivo As String, ByVal pId_Usuario As Integer, ByVal pMes As String, ByVal userState As Object)
            If (Me.DeskboardOperationCompleted Is Nothing) Then
                Me.DeskboardOperationCompleted = AddressOf Me.OnDeskboardOperationCompleted
            End If
            Me.InvokeAsync("Deskboard", New Object() {pPConn_Banco, pPakage, pGrupoTipoAtivo, pId_Usuario, pMes}, Me.DeskboardOperationCompleted, userState)
        End Sub

        Private Sub OnDeskboardOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeskboardCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeskboardCompleted(Me, New DeskboardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Carga_Bilhete", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function Carga_Bilhete(ByVal pPConn_Banco As String, ByVal pPakage As String, ByVal pId_Arquivo As Integer, ByVal pId_Ativo_Tipo As Integer, ByVal pId_Conglomerado As Integer, ByVal pDt_Lote As String, ByVal pDt_Liberacao_Lote As Date, ByVal pNumero_Nota_Fiscal As String, ByVal pRetorno As Boolean) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Carga_Bilhete", New Object() {pPConn_Banco, pPakage, pId_Arquivo, pId_Ativo_Tipo, pId_Conglomerado, pDt_Lote, pDt_Liberacao_Lote, pNumero_Nota_Fiscal, pRetorno})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub Carga_BilheteAsync(ByVal pPConn_Banco As String, ByVal pPakage As String, ByVal pId_Arquivo As Integer, ByVal pId_Ativo_Tipo As Integer, ByVal pId_Conglomerado As Integer, ByVal pDt_Lote As String, ByVal pDt_Liberacao_Lote As Date, ByVal pNumero_Nota_Fiscal As String, ByVal pRetorno As Boolean)
            Me.Carga_BilheteAsync(pPConn_Banco, pPakage, pId_Arquivo, pId_Ativo_Tipo, pId_Conglomerado, pDt_Lote, pDt_Liberacao_Lote, pNumero_Nota_Fiscal, pRetorno, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub Carga_BilheteAsync(ByVal pPConn_Banco As String, ByVal pPakage As String, ByVal pId_Arquivo As Integer, ByVal pId_Ativo_Tipo As Integer, ByVal pId_Conglomerado As Integer, ByVal pDt_Lote As String, ByVal pDt_Liberacao_Lote As Date, ByVal pNumero_Nota_Fiscal As String, ByVal pRetorno As Boolean, ByVal userState As Object)
            If (Me.Carga_BilheteOperationCompleted Is Nothing) Then
                Me.Carga_BilheteOperationCompleted = AddressOf Me.OnCarga_BilheteOperationCompleted
            End If
            Me.InvokeAsync("Carga_Bilhete", New Object() {pPConn_Banco, pPakage, pId_Arquivo, pId_Ativo_Tipo, pId_Conglomerado, pDt_Lote, pDt_Liberacao_Lote, pNumero_Nota_Fiscal, pRetorno}, Me.Carga_BilheteOperationCompleted, userState)
        End Sub

        Private Sub OnCarga_BilheteOperationCompleted(ByVal arg As Object)
            If (Not (Me.Carga_BilheteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Carga_BilheteCompleted(Me, New Carga_BilheteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Valida_Bilhete", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function Valida_Bilhete(ByVal pPConn_Banco As String, ByVal pPakage As String, ByVal pId_Arquivo As Integer, ByVal pId_Ativo_Tipo As Integer, ByVal pId_Conglomerado As Integer, ByVal pDt_Lote As String, ByVal pDt_Liberacao_Lote As Date, ByVal pNumero_Nota_Fiscal As String, ByVal pRetorno As Boolean) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Valida_Bilhete", New Object() {pPConn_Banco, pPakage, pId_Arquivo, pId_Ativo_Tipo, pId_Conglomerado, pDt_Lote, pDt_Liberacao_Lote, pNumero_Nota_Fiscal, pRetorno})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub Valida_BilheteAsync(ByVal pPConn_Banco As String, ByVal pPakage As String, ByVal pId_Arquivo As Integer, ByVal pId_Ativo_Tipo As Integer, ByVal pId_Conglomerado As Integer, ByVal pDt_Lote As String, ByVal pDt_Liberacao_Lote As Date, ByVal pNumero_Nota_Fiscal As String, ByVal pRetorno As Boolean)
            Me.Valida_BilheteAsync(pPConn_Banco, pPakage, pId_Arquivo, pId_Ativo_Tipo, pId_Conglomerado, pDt_Lote, pDt_Liberacao_Lote, pNumero_Nota_Fiscal, pRetorno, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub Valida_BilheteAsync(ByVal pPConn_Banco As String, ByVal pPakage As String, ByVal pId_Arquivo As Integer, ByVal pId_Ativo_Tipo As Integer, ByVal pId_Conglomerado As Integer, ByVal pDt_Lote As String, ByVal pDt_Liberacao_Lote As Date, ByVal pNumero_Nota_Fiscal As String, ByVal pRetorno As Boolean, ByVal userState As Object)
            If (Me.Valida_BilheteOperationCompleted Is Nothing) Then
                Me.Valida_BilheteOperationCompleted = AddressOf Me.OnValida_BilheteOperationCompleted
            End If
            Me.InvokeAsync("Valida_Bilhete", New Object() {pPConn_Banco, pPakage, pId_Arquivo, pId_Ativo_Tipo, pId_Conglomerado, pDt_Lote, pDt_Liberacao_Lote, pNumero_Nota_Fiscal, pRetorno}, Me.Valida_BilheteOperationCompleted, userState)
        End Sub

        Private Sub OnValida_BilheteOperationCompleted(ByVal arg As Object)
            If (Not (Me.Valida_BilheteCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Valida_BilheteCompleted(Me, New Valida_BilheteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Carga_Usuario", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function Carga_Usuario(ByVal pPConn_Banco As String, ByVal pPakage As String, ByVal pId_Campo As Integer, ByVal pCampo_Arquivo As String, ByVal pColuna_Fixo As String, ByVal pImportacao As String, ByVal pRetorno As Boolean) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Carga_Usuario", New Object() {pPConn_Banco, pPakage, pId_Campo, pCampo_Arquivo, pColuna_Fixo, pImportacao, pRetorno})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub Carga_UsuarioAsync(ByVal pPConn_Banco As String, ByVal pPakage As String, ByVal pId_Campo As Integer, ByVal pCampo_Arquivo As String, ByVal pColuna_Fixo As String, ByVal pImportacao As String, ByVal pRetorno As Boolean)
            Me.Carga_UsuarioAsync(pPConn_Banco, pPakage, pId_Campo, pCampo_Arquivo, pColuna_Fixo, pImportacao, pRetorno, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub Carga_UsuarioAsync(ByVal pPConn_Banco As String, ByVal pPakage As String, ByVal pId_Campo As Integer, ByVal pCampo_Arquivo As String, ByVal pColuna_Fixo As String, ByVal pImportacao As String, ByVal pRetorno As Boolean, ByVal userState As Object)
            If (Me.Carga_UsuarioOperationCompleted Is Nothing) Then
                Me.Carga_UsuarioOperationCompleted = AddressOf Me.OnCarga_UsuarioOperationCompleted
            End If
            Me.InvokeAsync("Carga_Usuario", New Object() {pPConn_Banco, pPakage, pId_Campo, pCampo_Arquivo, pColuna_Fixo, pImportacao, pRetorno}, Me.Carga_UsuarioOperationCompleted, userState)
        End Sub

        Private Sub OnCarga_UsuarioOperationCompleted(ByVal arg As Object)
            If (Not (Me.Carga_UsuarioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Carga_UsuarioCompleted(Me, New Carga_UsuarioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ConsumidorUsuario", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function ConsumidorUsuario(ByVal pPconn_Banco As String, ByVal pPakage As String, ByVal pRetorno As Boolean) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsumidorUsuario", New Object() {pPconn_Banco, pPakage, pRetorno})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub ConsumidorUsuarioAsync(ByVal pPconn_Banco As String, ByVal pPakage As String, ByVal pRetorno As Boolean)
            Me.ConsumidorUsuarioAsync(pPconn_Banco, pPakage, pRetorno, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub ConsumidorUsuarioAsync(ByVal pPconn_Banco As String, ByVal pPakage As String, ByVal pRetorno As Boolean, ByVal userState As Object)
            If (Me.ConsumidorUsuarioOperationCompleted Is Nothing) Then
                Me.ConsumidorUsuarioOperationCompleted = AddressOf Me.OnConsumidorUsuarioOperationCompleted
            End If
            Me.InvokeAsync("ConsumidorUsuario", New Object() {pPconn_Banco, pPakage, pRetorno}, Me.ConsumidorUsuarioOperationCompleted, userState)
        End Sub

        Private Sub OnConsumidorUsuarioOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsumidorUsuarioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsumidorUsuarioCompleted(Me, New ConsumidorUsuarioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Carga_Inventario", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function Carga_Inventario(ByVal pPConn_Banco As String, ByVal pPakage As String, ByVal pId_Arquivo As Integer, ByVal pRetorno As Boolean) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Carga_Inventario", New Object() {pPConn_Banco, pPakage, pId_Arquivo, pRetorno})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub Carga_InventarioAsync(ByVal pPConn_Banco As String, ByVal pPakage As String, ByVal pId_Arquivo As Integer, ByVal pRetorno As Boolean)
            Me.Carga_InventarioAsync(pPConn_Banco, pPakage, pId_Arquivo, pRetorno, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub Carga_InventarioAsync(ByVal pPConn_Banco As String, ByVal pPakage As String, ByVal pId_Arquivo As Integer, ByVal pRetorno As Boolean, ByVal userState As Object)
            If (Me.Carga_InventarioOperationCompleted Is Nothing) Then
                Me.Carga_InventarioOperationCompleted = AddressOf Me.OnCarga_InventarioOperationCompleted
            End If
            Me.InvokeAsync("Carga_Inventario", New Object() {pPConn_Banco, pPakage, pId_Arquivo, pRetorno}, Me.Carga_InventarioOperationCompleted, userState)
        End Sub

        Private Sub OnCarga_InventarioOperationCompleted(ByVal arg As Object)
            If (Not (Me.Carga_InventarioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Carga_InventarioCompleted(Me, New Carga_InventarioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Bilhete_Manual", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function Bilhete_Manual(ByVal pPConn_Banco As String, ByVal pNr_Ativo As String, ByVal pValor As Double, ByVal pDataLote As String, ByVal pData As Date, ByVal pNotaFiscal As String, ByVal pIdTipoBilhete As Integer, ByVal pIdBilhete As Integer, ByVal pPakage As String, ByVal pId_Usuario_Permissao As Integer, ByVal pRetorno As Boolean) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Bilhete_Manual", New Object() {pPConn_Banco, pNr_Ativo, pValor, pDataLote, pData, pNotaFiscal, pIdTipoBilhete, pIdBilhete, pPakage, pId_Usuario_Permissao, pRetorno})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub Bilhete_ManualAsync(ByVal pPConn_Banco As String, ByVal pNr_Ativo As String, ByVal pValor As Double, ByVal pDataLote As String, ByVal pData As Date, ByVal pNotaFiscal As String, ByVal pIdTipoBilhete As Integer, ByVal pIdBilhete As Integer, ByVal pPakage As String, ByVal pId_Usuario_Permissao As Integer, ByVal pRetorno As Boolean)
            Me.Bilhete_ManualAsync(pPConn_Banco, pNr_Ativo, pValor, pDataLote, pData, pNotaFiscal, pIdTipoBilhete, pIdBilhete, pPakage, pId_Usuario_Permissao, pRetorno, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub Bilhete_ManualAsync(ByVal pPConn_Banco As String, ByVal pNr_Ativo As String, ByVal pValor As Double, ByVal pDataLote As String, ByVal pData As Date, ByVal pNotaFiscal As String, ByVal pIdTipoBilhete As Integer, ByVal pIdBilhete As Integer, ByVal pPakage As String, ByVal pId_Usuario_Permissao As Integer, ByVal pRetorno As Boolean, ByVal userState As Object)
            If (Me.Bilhete_ManualOperationCompleted Is Nothing) Then
                Me.Bilhete_ManualOperationCompleted = AddressOf Me.OnBilhete_ManualOperationCompleted
            End If
            Me.InvokeAsync("Bilhete_Manual", New Object() {pPConn_Banco, pNr_Ativo, pValor, pDataLote, pData, pNotaFiscal, pIdTipoBilhete, pIdBilhete, pPakage, pId_Usuario_Permissao, pRetorno}, Me.Bilhete_ManualOperationCompleted, userState)
        End Sub

        Private Sub OnBilhete_ManualOperationCompleted(ByVal arg As Object)
            If (Not (Me.Bilhete_ManualCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Bilhete_ManualCompleted(Me, New Bilhete_ManualCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Bilhete_Tipo_Manual", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function Bilhete_Tipo_Manual(ByVal pPConn_Banco As String, ByVal pId_Bilhete_Tipo As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Bilhete_Tipo_Manual", New Object() {pPConn_Banco, pId_Bilhete_Tipo, pId_Usuario_Permissao, pPakage, pRetorno})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub Bilhete_Tipo_ManualAsync(ByVal pPConn_Banco As String, ByVal pId_Bilhete_Tipo As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean)
            Me.Bilhete_Tipo_ManualAsync(pPConn_Banco, pId_Bilhete_Tipo, pId_Usuario_Permissao, pPakage, pRetorno, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub Bilhete_Tipo_ManualAsync(ByVal pPConn_Banco As String, ByVal pId_Bilhete_Tipo As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean, ByVal userState As Object)
            If (Me.Bilhete_Tipo_ManualOperationCompleted Is Nothing) Then
                Me.Bilhete_Tipo_ManualOperationCompleted = AddressOf Me.OnBilhete_Tipo_ManualOperationCompleted
            End If
            Me.InvokeAsync("Bilhete_Tipo_Manual", New Object() {pPConn_Banco, pId_Bilhete_Tipo, pId_Usuario_Permissao, pPakage, pRetorno}, Me.Bilhete_Tipo_ManualOperationCompleted, userState)
        End Sub

        Private Sub OnBilhete_Tipo_ManualOperationCompleted(ByVal arg As Object)
            If (Not (Me.Bilhete_Tipo_ManualCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Bilhete_Tipo_ManualCompleted(Me, New Bilhete_Tipo_ManualCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Alerta_Sistema", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function Alerta_Sistema(ByVal pPConn_Banco As String, ByVal pFiltro_1 As String, ByVal pPakage As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Alerta_Sistema", New Object() {pPConn_Banco, pFiltro_1, pPakage})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub Alerta_SistemaAsync(ByVal pPConn_Banco As String, ByVal pFiltro_1 As String, ByVal pPakage As String)
            Me.Alerta_SistemaAsync(pPConn_Banco, pFiltro_1, pPakage, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub Alerta_SistemaAsync(ByVal pPConn_Banco As String, ByVal pFiltro_1 As String, ByVal pPakage As String, ByVal userState As Object)
            If (Me.Alerta_SistemaOperationCompleted Is Nothing) Then
                Me.Alerta_SistemaOperationCompleted = AddressOf Me.OnAlerta_SistemaOperationCompleted
            End If
            Me.InvokeAsync("Alerta_Sistema", New Object() {pPConn_Banco, pFiltro_1, pPakage}, Me.Alerta_SistemaOperationCompleted, userState)
        End Sub

        Private Sub OnAlerta_SistemaOperationCompleted(ByVal arg As Object)
            If (Not (Me.Alerta_SistemaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Alerta_SistemaCompleted(Me, New Alerta_SistemaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Arquivo_Pasta", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function Arquivo_Pasta(ByVal pPConn_Banco As String, ByVal pPakage As String, ByVal pPasta As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Arquivo_Pasta", New Object() {pPConn_Banco, pPakage, pPasta})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub Arquivo_PastaAsync(ByVal pPConn_Banco As String, ByVal pPakage As String, ByVal pPasta As String)
            Me.Arquivo_PastaAsync(pPConn_Banco, pPakage, pPasta, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub Arquivo_PastaAsync(ByVal pPConn_Banco As String, ByVal pPakage As String, ByVal pPasta As String, ByVal userState As Object)
            If (Me.Arquivo_PastaOperationCompleted Is Nothing) Then
                Me.Arquivo_PastaOperationCompleted = AddressOf Me.OnArquivo_PastaOperationCompleted
            End If
            Me.InvokeAsync("Arquivo_Pasta", New Object() {pPConn_Banco, pPakage, pPasta}, Me.Arquivo_PastaOperationCompleted, userState)
        End Sub

        Private Sub OnArquivo_PastaOperationCompleted(ByVal arg As Object)
            If (Not (Me.Arquivo_PastaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Arquivo_PastaCompleted(Me, New Arquivo_PastaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Monta_Carga", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function Monta_Carga(ByVal pPConn_Banco As String, ByVal pPakage As String, ByVal pPasta As String, ByVal pOperadora As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Monta_Carga", New Object() {pPConn_Banco, pPakage, pPasta, pOperadora})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub Monta_CargaAsync(ByVal pPConn_Banco As String, ByVal pPakage As String, ByVal pPasta As String, ByVal pOperadora As String)
            Me.Monta_CargaAsync(pPConn_Banco, pPakage, pPasta, pOperadora, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub Monta_CargaAsync(ByVal pPConn_Banco As String, ByVal pPakage As String, ByVal pPasta As String, ByVal pOperadora As String, ByVal userState As Object)
            If (Me.Monta_CargaOperationCompleted Is Nothing) Then
                Me.Monta_CargaOperationCompleted = AddressOf Me.OnMonta_CargaOperationCompleted
            End If
            Me.InvokeAsync("Monta_Carga", New Object() {pPConn_Banco, pPakage, pPasta, pOperadora}, Me.Monta_CargaOperationCompleted, userState)
        End Sub

        Private Sub OnMonta_CargaOperationCompleted(ByVal arg As Object)
            If (Not (Me.Monta_CargaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Monta_CargaCompleted(Me, New Monta_CargaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Monta_Texto_Termo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function Monta_Texto_Termo(ByVal pPConn_Banco As String, ByVal pPakage As String, ByVal pEmpresa As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Monta_Texto_Termo", New Object() {pPConn_Banco, pPakage, pEmpresa})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub Monta_Texto_TermoAsync(ByVal pPConn_Banco As String, ByVal pPakage As String, ByVal pEmpresa As String)
            Me.Monta_Texto_TermoAsync(pPConn_Banco, pPakage, pEmpresa, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub Monta_Texto_TermoAsync(ByVal pPConn_Banco As String, ByVal pPakage As String, ByVal pEmpresa As String, ByVal userState As Object)
            If (Me.Monta_Texto_TermoOperationCompleted Is Nothing) Then
                Me.Monta_Texto_TermoOperationCompleted = AddressOf Me.OnMonta_Texto_TermoOperationCompleted
            End If
            Me.InvokeAsync("Monta_Texto_Termo", New Object() {pPConn_Banco, pPakage, pEmpresa}, Me.Monta_Texto_TermoOperationCompleted, userState)
        End Sub

        Private Sub OnMonta_Texto_TermoOperationCompleted(ByVal arg As Object)
            If (Not (Me.Monta_Texto_TermoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Monta_Texto_TermoCompleted(Me, New Monta_Texto_TermoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Solicitacao", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function Solicitacao(
                    ByVal pPConn_Banco As String,
                    ByVal pId_Solicitacao As Integer,
                    ByVal pNm_Solicitacao As String,
                    ByVal pId_Usuario As Integer,
                    ByVal pNm_Usuario As String,
                    ByVal pId_Ativo_Tipo As Integer,
                    ByVal pId_Solicitacao_Tipo As Integer,
                    ByVal pId_Solicitacao_Item As String,
                    ByVal pNm_Solicitacao_Item As String,
                    ByVal pFl_Status As Integer,
                    ByVal pExcedente_SLA As String,
                    ByVal pDt_LoteDe As String,
                    ByVal pDt_LoteAte As String,
                    ByVal pId_Solicitacao_Solucao As Integer,
                    ByVal pId_Consumidor_Unidade As Integer,
                    ByVal pId_Usuario_Permissao As Integer,
                    ByVal pPakage As String,
                    ByVal pRetorno As Boolean) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Solicitacao", New Object() {pPConn_Banco, pId_Solicitacao, pNm_Solicitacao, pId_Usuario, pNm_Usuario, pId_Ativo_Tipo, pId_Solicitacao_Tipo, pId_Solicitacao_Item, pNm_Solicitacao_Item, pFl_Status, pExcedente_SLA, pDt_LoteDe, pDt_LoteAte, pId_Solicitacao_Solucao, pId_Consumidor_Unidade, pId_Usuario_Permissao, pPakage, pRetorno})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub SolicitacaoAsync(
                    ByVal pPConn_Banco As String,
                    ByVal pId_Solicitacao As Integer,
                    ByVal pNm_Solicitacao As String,
                    ByVal pId_Usuario As Integer,
                    ByVal pNm_Usuario As String,
                    ByVal pId_Ativo_Tipo As Integer,
                    ByVal pId_Solicitacao_Tipo As Integer,
                    ByVal pId_Solicitacao_Item As String,
                    ByVal pNm_Solicitacao_Item As String,
                    ByVal pFl_Status As Integer,
                    ByVal pExcedente_SLA As String,
                    ByVal pDt_LoteDe As String,
                    ByVal pDt_LoteAte As String,
                    ByVal pId_Solicitacao_Solucao As Integer,
                    ByVal pId_Consumidor_Unidade As Integer,
                    ByVal pId_Usuario_Permissao As Integer,
                    ByVal pPakage As String,
                    ByVal pRetorno As Boolean)
            Me.SolicitacaoAsync(pPConn_Banco, pId_Solicitacao, pNm_Solicitacao, pId_Usuario, pNm_Usuario, pId_Ativo_Tipo, pId_Solicitacao_Tipo, pId_Solicitacao_Item, pNm_Solicitacao_Item, pFl_Status, pExcedente_SLA, pDt_LoteDe, pDt_LoteAte, pId_Solicitacao_Solucao, pId_Consumidor_Unidade, pId_Usuario_Permissao, pPakage, pRetorno, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub SolicitacaoAsync(
                    ByVal pPConn_Banco As String,
                    ByVal pId_Solicitacao As Integer,
                    ByVal pNm_Solicitacao As String,
                    ByVal pId_Usuario As Integer,
                    ByVal pNm_Usuario As String,
                    ByVal pId_Ativo_Tipo As Integer,
                    ByVal pId_Solicitacao_Tipo As Integer,
                    ByVal pId_Solicitacao_Item As String,
                    ByVal pNm_Solicitacao_Item As String,
                    ByVal pFl_Status As Integer,
                    ByVal pExcedente_SLA As String,
                    ByVal pDt_LoteDe As String,
                    ByVal pDt_LoteAte As String,
                    ByVal pId_Solicitacao_Solucao As Integer,
                    ByVal pId_Consumidor_Unidade As Integer,
                    ByVal pId_Usuario_Permissao As Integer,
                    ByVal pPakage As String,
                    ByVal pRetorno As Boolean,
                    ByVal userState As Object)
            If (Me.SolicitacaoOperationCompleted Is Nothing) Then
                Me.SolicitacaoOperationCompleted = AddressOf Me.OnSolicitacaoOperationCompleted
            End If
            Me.InvokeAsync("Solicitacao", New Object() {pPConn_Banco, pId_Solicitacao, pNm_Solicitacao, pId_Usuario, pNm_Usuario, pId_Ativo_Tipo, pId_Solicitacao_Tipo, pId_Solicitacao_Item, pNm_Solicitacao_Item, pFl_Status, pExcedente_SLA, pDt_LoteDe, pDt_LoteAte, pId_Solicitacao_Solucao, pId_Consumidor_Unidade, pId_Usuario_Permissao, pPakage, pRetorno}, Me.SolicitacaoOperationCompleted, userState)
        End Sub

        Private Sub OnSolicitacaoOperationCompleted(ByVal arg As Object)
            If (Not (Me.SolicitacaoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent SolicitacaoCompleted(Me, New SolicitacaoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Solicitacao_Avaliacao", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function Solicitacao_Avaliacao(ByVal pPConn_Banco As String, ByVal pId_Solicitacao As Integer, ByVal pId_Solicitacao_Avaliacao As Integer, ByVal pDt_Avaliacao As Date, ByVal pAvaliacao As Integer, ByVal pDescricao As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Solicitacao_Avaliacao", New Object() {pPConn_Banco, pId_Solicitacao, pId_Solicitacao_Avaliacao, pDt_Avaliacao, pAvaliacao, pDescricao, pId_Usuario_Permissao, pPakage, pRetorno})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub Solicitacao_AvaliacaoAsync(ByVal pPConn_Banco As String, ByVal pId_Solicitacao As Integer, ByVal pId_Solicitacao_Avaliacao As Integer, ByVal pDt_Avaliacao As Date, ByVal pAvaliacao As Integer, ByVal pDescricao As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean)
            Me.Solicitacao_AvaliacaoAsync(pPConn_Banco, pId_Solicitacao, pId_Solicitacao_Avaliacao, pDt_Avaliacao, pAvaliacao, pDescricao, pId_Usuario_Permissao, pPakage, pRetorno, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub Solicitacao_AvaliacaoAsync(ByVal pPConn_Banco As String, ByVal pId_Solicitacao As Integer, ByVal pId_Solicitacao_Avaliacao As Integer, ByVal pDt_Avaliacao As Date, ByVal pAvaliacao As Integer, ByVal pDescricao As String, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean, ByVal userState As Object)
            If (Me.Solicitacao_AvaliacaoOperationCompleted Is Nothing) Then
                Me.Solicitacao_AvaliacaoOperationCompleted = AddressOf Me.OnSolicitacao_AvaliacaoOperationCompleted
            End If
            Me.InvokeAsync("Solicitacao_Avaliacao", New Object() {pPConn_Banco, pId_Solicitacao, pId_Solicitacao_Avaliacao, pDt_Avaliacao, pAvaliacao, pDescricao, pId_Usuario_Permissao, pPakage, pRetorno}, Me.Solicitacao_AvaliacaoOperationCompleted, userState)
        End Sub

        Private Sub OnSolicitacao_AvaliacaoOperationCompleted(ByVal arg As Object)
            If (Not (Me.Solicitacao_AvaliacaoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Solicitacao_AvaliacaoCompleted(Me, New Solicitacao_AvaliacaoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Ativo_App_Trafego", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function Ativo_App_Trafego(ByVal pPConn_Banco As String, ByVal pNumero_Linha As String, ByVal pId_Ativo As Integer, ByVal pString_Dados As String, ByVal pMes As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Ativo_App_Trafego", New Object() {pPConn_Banco, pNumero_Linha, pId_Ativo, pString_Dados, pMes, pPakage, pRetorno})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub Ativo_App_TrafegoAsync(ByVal pPConn_Banco As String, ByVal pNumero_Linha As String, ByVal pId_Ativo As Integer, ByVal pString_Dados As String, ByVal pMes As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean)
            Me.Ativo_App_TrafegoAsync(pPConn_Banco, pNumero_Linha, pId_Ativo, pString_Dados, pMes, pPakage, pRetorno, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub Ativo_App_TrafegoAsync(ByVal pPConn_Banco As String, ByVal pNumero_Linha As String, ByVal pId_Ativo As Integer, ByVal pString_Dados As String, ByVal pMes As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean, ByVal userState As Object)
            If (Me.Ativo_App_TrafegoOperationCompleted Is Nothing) Then
                Me.Ativo_App_TrafegoOperationCompleted = AddressOf Me.OnAtivo_App_TrafegoOperationCompleted
            End If
            Me.InvokeAsync("Ativo_App_Trafego", New Object() {pPConn_Banco, pNumero_Linha, pId_Ativo, pString_Dados, pMes, pPakage, pRetorno}, Me.Ativo_App_TrafegoOperationCompleted, userState)
        End Sub

        Private Sub OnAtivo_App_TrafegoOperationCompleted(ByVal arg As Object)
            If (Not (Me.Ativo_App_TrafegoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Ativo_App_TrafegoCompleted(Me, New Ativo_App_TrafegoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Monitoramento_Dados", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>
        Public Function Monitoramento_Dados(ByVal pPConn_Banco As String, ByVal pMes As String, ByVal pId_Conglomerado As Integer, ByVal pId_Ativo As Integer, ByVal pNr_Ativo As String, ByVal pCorteDe As Integer, ByVal pCorteAte As Integer, ByVal pPacoteMB As Integer, ByVal pQtdMes As Integer, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Monitoramento_Dados", New Object() {pPConn_Banco, pMes, pId_Conglomerado, pId_Ativo, pNr_Ativo, pCorteDe, pCorteAte, pPacoteMB, pQtdMes, pId_Usuario_Permissao, pPakage, pRetorno})
            Return CType(results(0), System.Data.DataSet)
        End Function

        '''<remarks/>
        Public Overloads Sub Monitoramento_DadosAsync(ByVal pPConn_Banco As String, ByVal pMes As String, ByVal pId_Conglomerado As Integer, ByVal pId_Ativo As Integer, ByVal pNr_Ativo As String, ByVal pCorteDe As Integer, ByVal pCorteAte As Integer, ByVal pPacoteMB As Integer, ByVal pQtdMes As Integer, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean)
            Me.Monitoramento_DadosAsync(pPConn_Banco, pMes, pId_Conglomerado, pId_Ativo, pNr_Ativo, pCorteDe, pCorteAte, pPacoteMB, pQtdMes, pId_Usuario_Permissao, pPakage, pRetorno, Nothing)
        End Sub

        '''<remarks/>
        Public Overloads Sub Monitoramento_DadosAsync(ByVal pPConn_Banco As String, ByVal pMes As String, ByVal pId_Conglomerado As Integer, ByVal pId_Ativo As Integer, ByVal pNr_Ativo As String, ByVal pCorteDe As Integer, ByVal pCorteAte As Integer, ByVal pPacoteMB As Integer, ByVal pQtdMes As Integer, ByVal pId_Usuario_Permissao As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean, ByVal userState As Object)
            If (Me.Monitoramento_DadosOperationCompleted Is Nothing) Then
                Me.Monitoramento_DadosOperationCompleted = AddressOf Me.OnMonitoramento_DadosOperationCompleted
            End If
            Me.InvokeAsync("Monitoramento_Dados", New Object() {pPConn_Banco, pMes, pId_Conglomerado, pId_Ativo, pNr_Ativo, pCorteDe, pCorteAte, pPacoteMB, pQtdMes, pId_Usuario_Permissao, pPakage, pRetorno}, Me.Monitoramento_DadosOperationCompleted, userState)
        End Sub

        Private Sub OnMonitoramento_DadosOperationCompleted(ByVal arg As Object)
            If (Not (Me.Monitoramento_DadosCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg, System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Monitoramento_DadosCompleted(Me, New Monitoramento_DadosCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub

        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub

        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing) _
                        OrElse (url Is String.Empty)) Then
                Return False
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024) _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return True
            End If
            Return False
        End Function
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>
    Public Delegate Sub Conn_BancoCompletedEventHandler(ByVal sender As Object, ByVal e As Conn_BancoCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),
     System.Diagnostics.DebuggerStepThroughAttribute(),
     System.ComponentModel.DesignerCategoryAttribute("code")>
    Partial Public Class Conn_BancoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), System.Data.DataSet)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>
    Public Delegate Sub Validacao_GlobalCompletedEventHandler(ByVal sender As Object, ByVal e As Validacao_GlobalCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),
     System.Diagnostics.DebuggerStepThroughAttribute(),
     System.ComponentModel.DesignerCategoryAttribute("code")>
    Partial Public Class Validacao_GlobalCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), System.Data.DataSet)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>
    Public Delegate Sub ValidacaoCompletedEventHandler(ByVal sender As Object, ByVal e As ValidacaoCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),
     System.Diagnostics.DebuggerStepThroughAttribute(),
     System.ComponentModel.DesignerCategoryAttribute("code")>
    Partial Public Class ValidacaoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), System.Data.DataSet)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>
    Public Delegate Sub Status_AcordoCompletedEventHandler(ByVal sender As Object, ByVal e As Status_AcordoCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),
     System.Diagnostics.DebuggerStepThroughAttribute(),
     System.ComponentModel.DesignerCategoryAttribute("code")>
    Partial Public Class Status_AcordoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), System.Data.DataSet)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>
    Public Delegate Sub Validacao_RelatorioCompletedEventHandler(ByVal sender As Object, ByVal e As Validacao_RelatorioCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),
     System.Diagnostics.DebuggerStepThroughAttribute(),
     System.ComponentModel.DesignerCategoryAttribute("code")>
    Partial Public Class Validacao_RelatorioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), System.Data.DataSet)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>
    Public Delegate Sub DeskboardCompletedEventHandler(ByVal sender As Object, ByVal e As DeskboardCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),
     System.Diagnostics.DebuggerStepThroughAttribute(),
     System.ComponentModel.DesignerCategoryAttribute("code")>
    Partial Public Class DeskboardCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), System.Data.DataSet)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>
    Public Delegate Sub Carga_BilheteCompletedEventHandler(ByVal sender As Object, ByVal e As Carga_BilheteCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),
     System.Diagnostics.DebuggerStepThroughAttribute(),
     System.ComponentModel.DesignerCategoryAttribute("code")>
    Partial Public Class Carga_BilheteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), System.Data.DataSet)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>
    Public Delegate Sub Valida_BilheteCompletedEventHandler(ByVal sender As Object, ByVal e As Valida_BilheteCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),
     System.Diagnostics.DebuggerStepThroughAttribute(),
     System.ComponentModel.DesignerCategoryAttribute("code")>
    Partial Public Class Valida_BilheteCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), System.Data.DataSet)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>
    Public Delegate Sub Carga_UsuarioCompletedEventHandler(ByVal sender As Object, ByVal e As Carga_UsuarioCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),
     System.Diagnostics.DebuggerStepThroughAttribute(),
     System.ComponentModel.DesignerCategoryAttribute("code")>
    Partial Public Class Carga_UsuarioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), System.Data.DataSet)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>
    Public Delegate Sub ConsumidorUsuarioCompletedEventHandler(ByVal sender As Object, ByVal e As ConsumidorUsuarioCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),
     System.Diagnostics.DebuggerStepThroughAttribute(),
     System.ComponentModel.DesignerCategoryAttribute("code")>
    Partial Public Class ConsumidorUsuarioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs

        Private results() As Object

        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub

        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary()
                Return CType(Me.results(0), System.Data.DataSet)
            End Get
        End Property
    End Class

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>
    Public Delegate Sub Carga_InventarioCompletedEventHandler(ByVal sender As Object, ByVal e As Carga_InventarioCompletedEventArgs)

    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Carga_InventarioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub Bilhete_ManualCompletedEventHandler(ByVal sender As Object, ByVal e As Bilhete_ManualCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Bilhete_ManualCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub Bilhete_Tipo_ManualCompletedEventHandler(ByVal sender As Object, ByVal e As Bilhete_Tipo_ManualCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Bilhete_Tipo_ManualCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub Alerta_SistemaCompletedEventHandler(ByVal sender As Object, ByVal e As Alerta_SistemaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Alerta_SistemaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub Arquivo_PastaCompletedEventHandler(ByVal sender As Object, ByVal e As Arquivo_PastaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Arquivo_PastaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub Monta_CargaCompletedEventHandler(ByVal sender As Object, ByVal e As Monta_CargaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Monta_CargaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub Monta_Texto_TermoCompletedEventHandler(ByVal sender As Object, ByVal e As Monta_Texto_TermoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Monta_Texto_TermoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub SolicitacaoCompletedEventHandler(ByVal sender As Object, ByVal e As SolicitacaoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class SolicitacaoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub Solicitacao_AvaliacaoCompletedEventHandler(ByVal sender As Object, ByVal e As Solicitacao_AvaliacaoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Solicitacao_AvaliacaoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub Ativo_App_TrafegoCompletedEventHandler(ByVal sender As Object, ByVal e As Ativo_App_TrafegoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Ativo_App_TrafegoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")>  _
    Public Delegate Sub Monitoramento_DadosCompletedEventHandler(ByVal sender As Object, ByVal e As Monitoramento_DadosCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Monitoramento_DadosCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
End Namespace
