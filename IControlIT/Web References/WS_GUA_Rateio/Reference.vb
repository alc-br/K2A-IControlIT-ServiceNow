'------------------------------------------------------------------------------
' <auto-generated>
'     O código foi gerado por uma ferramenta.
'     Versão de Tempo de Execução:4.0.30319.42000
'
'     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
'     o código for gerado novamente.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'Este código-fonte foi gerado automaticamente por Microsoft.VSDesigner, Versão 4.0.30319.42000.
'
Namespace WS_GUA_Rateio
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="WSRateioSoap", [Namespace]:="http://tempuri.org/")>  _
    Partial Public Class WSRateio
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private FaturaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private RateioOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Plano_ContaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private Rateio_Custo_FixoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.IControlIT.My.MySettings.Default.Ativvus_WS_GUA_Rateio_WSRateio
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event FaturaCompleted As FaturaCompletedEventHandler
        
        '''<remarks/>
        Public Event RateioCompleted As RateioCompletedEventHandler
        
        '''<remarks/>
        Public Event Plano_ContaCompleted As Plano_ContaCompletedEventHandler
        
        '''<remarks/>
        Public Event Rateio_Custo_FixoCompleted As Rateio_Custo_FixoCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Fatura", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Fatura( _
                    ByVal pPConn_Banco As String,  _
                    ByVal pId_Fatura As Integer,  _
                    ByVal pId_Fatura_Parametro As Integer,  _
                    ByVal pNr_Fatura As String,  _
                    ByVal pNm_Fatura As String,  _
                    ByVal pDt_Lote As String,  _
                    ByVal pDt_Emissao As Date,  _
                    ByVal pDt_Vencimento As Date,  _
                    ByVal pVr_Fatura As Double,  _
                    ByVal pNm_Campo As String,  _
                    ByVal pId_Conglomerado As Integer,  _
                    ByVal pId_Usuario_Permissao As Integer,  _
                    ByVal pPakage As String,  _
                    ByVal pRetorno As Boolean,  _
                    ByVal pNota_Fiscal As String,  _
                    ByVal pPedido As String,  _
                    ByVal pRef As String,  _
                    ByVal pReq As String,  _
                    ByVal pProvisao As Short,  _
                    ByVal pObservacao As String) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Fatura", New Object() {pPConn_Banco, pId_Fatura, pId_Fatura_Parametro, pNr_Fatura, pNm_Fatura, pDt_Lote, pDt_Emissao, pDt_Vencimento, pVr_Fatura, pNm_Campo, pId_Conglomerado, pId_Usuario_Permissao, pPakage, pRetorno, pNota_Fiscal, pPedido, pRef, pReq, pProvisao, pObservacao})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub FaturaAsync( _
                    ByVal pPConn_Banco As String,  _
                    ByVal pId_Fatura As Integer,  _
                    ByVal pId_Fatura_Parametro As Integer,  _
                    ByVal pNr_Fatura As String,  _
                    ByVal pNm_Fatura As String,  _
                    ByVal pDt_Lote As String,  _
                    ByVal pDt_Emissao As Date,  _
                    ByVal pDt_Vencimento As Date,  _
                    ByVal pVr_Fatura As Double,  _
                    ByVal pNm_Campo As String,  _
                    ByVal pId_Conglomerado As Integer,  _
                    ByVal pId_Usuario_Permissao As Integer,  _
                    ByVal pPakage As String,  _
                    ByVal pRetorno As Boolean,  _
                    ByVal pNota_Fiscal As String,  _
                    ByVal pPedido As String,  _
                    ByVal pRef As String,  _
                    ByVal pReq As String,  _
                    ByVal pProvisao As Short,  _
                    ByVal pObservacao As String)
            Me.FaturaAsync(pPConn_Banco, pId_Fatura, pId_Fatura_Parametro, pNr_Fatura, pNm_Fatura, pDt_Lote, pDt_Emissao, pDt_Vencimento, pVr_Fatura, pNm_Campo, pId_Conglomerado, pId_Usuario_Permissao, pPakage, pRetorno, pNota_Fiscal, pPedido, pRef, pReq, pProvisao, pObservacao, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub FaturaAsync( _
                    ByVal pPConn_Banco As String,  _
                    ByVal pId_Fatura As Integer,  _
                    ByVal pId_Fatura_Parametro As Integer,  _
                    ByVal pNr_Fatura As String,  _
                    ByVal pNm_Fatura As String,  _
                    ByVal pDt_Lote As String,  _
                    ByVal pDt_Emissao As Date,  _
                    ByVal pDt_Vencimento As Date,  _
                    ByVal pVr_Fatura As Double,  _
                    ByVal pNm_Campo As String,  _
                    ByVal pId_Conglomerado As Integer,  _
                    ByVal pId_Usuario_Permissao As Integer,  _
                    ByVal pPakage As String,  _
                    ByVal pRetorno As Boolean,  _
                    ByVal pNota_Fiscal As String,  _
                    ByVal pPedido As String,  _
                    ByVal pRef As String,  _
                    ByVal pReq As String,  _
                    ByVal pProvisao As Short,  _
                    ByVal pObservacao As String,  _
                    ByVal userState As Object)
            If (Me.FaturaOperationCompleted Is Nothing) Then
                Me.FaturaOperationCompleted = AddressOf Me.OnFaturaOperationCompleted
            End If
            Me.InvokeAsync("Fatura", New Object() {pPConn_Banco, pId_Fatura, pId_Fatura_Parametro, pNr_Fatura, pNm_Fatura, pDt_Lote, pDt_Emissao, pDt_Vencimento, pVr_Fatura, pNm_Campo, pId_Conglomerado, pId_Usuario_Permissao, pPakage, pRetorno, pNota_Fiscal, pPedido, pRef, pReq, pProvisao, pObservacao}, Me.FaturaOperationCompleted, userState)
        End Sub
        
        Private Sub OnFaturaOperationCompleted(ByVal arg As Object)
            If (Not (Me.FaturaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent FaturaCompleted(Me, New FaturaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Rateio", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Rateio(ByVal pPConn_Banco As String, ByVal pNm_Rateio As String, ByVal pId_Fatura_Parametro As Integer, ByVal pId_Array As String, ByVal pData_Lote As String, ByVal pId_Fatura_Tipo_Rateio As String, ByVal pId_Fatura As String, ByVal pGrava_Rateio As Integer, ByVal pId_Rateio As Integer, ByVal pObservacao As String, ByVal pPakage As String, ByVal pRetorno As Boolean) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Rateio", New Object() {pPConn_Banco, pNm_Rateio, pId_Fatura_Parametro, pId_Array, pData_Lote, pId_Fatura_Tipo_Rateio, pId_Fatura, pGrava_Rateio, pId_Rateio, pObservacao, pPakage, pRetorno})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub RateioAsync(ByVal pPConn_Banco As String, ByVal pNm_Rateio As String, ByVal pId_Fatura_Parametro As Integer, ByVal pId_Array As String, ByVal pData_Lote As String, ByVal pId_Fatura_Tipo_Rateio As String, ByVal pId_Fatura As String, ByVal pGrava_Rateio As Integer, ByVal pId_Rateio As Integer, ByVal pObservacao As String, ByVal pPakage As String, ByVal pRetorno As Boolean)
            Me.RateioAsync(pPConn_Banco, pNm_Rateio, pId_Fatura_Parametro, pId_Array, pData_Lote, pId_Fatura_Tipo_Rateio, pId_Fatura, pGrava_Rateio, pId_Rateio, pObservacao, pPakage, pRetorno, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub RateioAsync(ByVal pPConn_Banco As String, ByVal pNm_Rateio As String, ByVal pId_Fatura_Parametro As Integer, ByVal pId_Array As String, ByVal pData_Lote As String, ByVal pId_Fatura_Tipo_Rateio As String, ByVal pId_Fatura As String, ByVal pGrava_Rateio As Integer, ByVal pId_Rateio As Integer, ByVal pObservacao As String, ByVal pPakage As String, ByVal pRetorno As Boolean, ByVal userState As Object)
            If (Me.RateioOperationCompleted Is Nothing) Then
                Me.RateioOperationCompleted = AddressOf Me.OnRateioOperationCompleted
            End If
            Me.InvokeAsync("Rateio", New Object() {pPConn_Banco, pNm_Rateio, pId_Fatura_Parametro, pId_Array, pData_Lote, pId_Fatura_Tipo_Rateio, pId_Fatura, pGrava_Rateio, pId_Rateio, pObservacao, pPakage, pRetorno}, Me.RateioOperationCompleted, userState)
        End Sub
        
        Private Sub OnRateioOperationCompleted(ByVal arg As Object)
            If (Not (Me.RateioCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent RateioCompleted(Me, New RateioCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Plano_Conta", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Plano_Conta(ByVal pPConn_Banco As String, ByVal pId_Fatura_Plano_Conta As Integer, ByVal pNr_Plano_Conta As String, ByVal pId_Conglomerado As Integer, ByVal pId_Empresa As Integer, ByVal pId_Contrato As Integer, ByVal pDia_Vencimento As Integer, ByVal pLote_Cancelamento As Date, ByVal pDescricao As String, ByVal pDt_Lote As String, ByVal pId_Usuario_Permissao As Integer, ByVal pId_Ativo_Tipo_Grupo As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Plano_Conta", New Object() {pPConn_Banco, pId_Fatura_Plano_Conta, pNr_Plano_Conta, pId_Conglomerado, pId_Empresa, pId_Contrato, pDia_Vencimento, pLote_Cancelamento, pDescricao, pDt_Lote, pId_Usuario_Permissao, pId_Ativo_Tipo_Grupo, pPakage, pRetorno})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Plano_ContaAsync(ByVal pPConn_Banco As String, ByVal pId_Fatura_Plano_Conta As Integer, ByVal pNr_Plano_Conta As String, ByVal pId_Conglomerado As Integer, ByVal pId_Empresa As Integer, ByVal pId_Contrato As Integer, ByVal pDia_Vencimento As Integer, ByVal pLote_Cancelamento As Date, ByVal pDescricao As String, ByVal pDt_Lote As String, ByVal pId_Usuario_Permissao As Integer, ByVal pId_Ativo_Tipo_Grupo As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean)
            Me.Plano_ContaAsync(pPConn_Banco, pId_Fatura_Plano_Conta, pNr_Plano_Conta, pId_Conglomerado, pId_Empresa, pId_Contrato, pDia_Vencimento, pLote_Cancelamento, pDescricao, pDt_Lote, pId_Usuario_Permissao, pId_Ativo_Tipo_Grupo, pPakage, pRetorno, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Plano_ContaAsync(ByVal pPConn_Banco As String, ByVal pId_Fatura_Plano_Conta As Integer, ByVal pNr_Plano_Conta As String, ByVal pId_Conglomerado As Integer, ByVal pId_Empresa As Integer, ByVal pId_Contrato As Integer, ByVal pDia_Vencimento As Integer, ByVal pLote_Cancelamento As Date, ByVal pDescricao As String, ByVal pDt_Lote As String, ByVal pId_Usuario_Permissao As Integer, ByVal pId_Ativo_Tipo_Grupo As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean, ByVal userState As Object)
            If (Me.Plano_ContaOperationCompleted Is Nothing) Then
                Me.Plano_ContaOperationCompleted = AddressOf Me.OnPlano_ContaOperationCompleted
            End If
            Me.InvokeAsync("Plano_Conta", New Object() {pPConn_Banco, pId_Fatura_Plano_Conta, pNr_Plano_Conta, pId_Conglomerado, pId_Empresa, pId_Contrato, pDia_Vencimento, pLote_Cancelamento, pDescricao, pDt_Lote, pId_Usuario_Permissao, pId_Ativo_Tipo_Grupo, pPakage, pRetorno}, Me.Plano_ContaOperationCompleted, userState)
        End Sub
        
        Private Sub OnPlano_ContaOperationCompleted(ByVal arg As Object)
            If (Not (Me.Plano_ContaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Plano_ContaCompleted(Me, New Plano_ContaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Rateio_Custo_Fixo", RequestNamespace:="http://tempuri.org/", ResponseNamespace:="http://tempuri.org/", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Rateio_Custo_Fixo(ByVal pPConn_Banco As String, ByVal pDt_Lote As String, ByVal pId_Fatura_Parametro As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Rateio_Custo_Fixo", New Object() {pPConn_Banco, pDt_Lote, pId_Fatura_Parametro, pPakage, pRetorno})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub Rateio_Custo_FixoAsync(ByVal pPConn_Banco As String, ByVal pDt_Lote As String, ByVal pId_Fatura_Parametro As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean)
            Me.Rateio_Custo_FixoAsync(pPConn_Banco, pDt_Lote, pId_Fatura_Parametro, pPakage, pRetorno, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub Rateio_Custo_FixoAsync(ByVal pPConn_Banco As String, ByVal pDt_Lote As String, ByVal pId_Fatura_Parametro As Integer, ByVal pPakage As String, ByVal pRetorno As Boolean, ByVal userState As Object)
            If (Me.Rateio_Custo_FixoOperationCompleted Is Nothing) Then
                Me.Rateio_Custo_FixoOperationCompleted = AddressOf Me.OnRateio_Custo_FixoOperationCompleted
            End If
            Me.InvokeAsync("Rateio_Custo_Fixo", New Object() {pPConn_Banco, pDt_Lote, pId_Fatura_Parametro, pPakage, pRetorno}, Me.Rateio_Custo_FixoOperationCompleted, userState)
        End Sub
        
        Private Sub OnRateio_Custo_FixoOperationCompleted(ByVal arg As Object)
            If (Not (Me.Rateio_Custo_FixoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent Rateio_Custo_FixoCompleted(Me, New Rateio_Custo_FixoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub FaturaCompletedEventHandler(ByVal sender As Object, ByVal e As FaturaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class FaturaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub RateioCompletedEventHandler(ByVal sender As Object, ByVal e As RateioCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class RateioCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub Plano_ContaCompletedEventHandler(ByVal sender As Object, ByVal e As Plano_ContaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Plano_ContaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")>  _
    Public Delegate Sub Rateio_Custo_FixoCompletedEventHandler(ByVal sender As Object, ByVal e As Rateio_Custo_FixoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class Rateio_Custo_FixoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
End Namespace
