<?xml version="1.0"?>
<doc>
    <assembly>
        <name>EntityFramework</name>
    </assembly>
    <members>
        <member name="T:System.Data.Entity.Edm.EdmDataModelType">
            <summary>
                The base for all all Entity Data Model (EDM) types that represent a type from the EDM type system.
            </summary>
        </member>
        <member name="T:System.Data.Entity.Edm.EdmNamespaceItem">
            <summary>
                Represents an item in an Entity Data Model (EDM) <see cref="T:System.Data.Entity.Edm.EdmNamespace"/> .
            </summary>
        </member>
        <member name="T:System.Data.Entity.Edm.EdmQualifiedNameMetadataItem">
            <summary>
                The base for all all Entity Data Model (EDM) item types that with a Name property that represents a qualified (can be dotted) name.
            </summary>
        </member>
        <member name="T:System.Data.Entity.Edm.EdmNamedMetadataItem">
            <summary>
                The base for all all Entity Data Model (EDM) item types that with a <see cref="P:System.Data.Entity.Edm.EdmNamedMetadataItem.Name"/> property.
            </summary>
        </member>
        <member name="T:System.Data.Entity.Edm.EdmMetadataItem">
            <summary>
                The base for all all Entity Data Model (EDM) types that support annotation using <see cref="T:System.Data.Entity.Edm.Common.DataModelAnnotation"/> .
            </summary>
        </member>
        <member name="T:System.Data.Entity.Edm.EdmDataModelItem">
            <summary>
                EdmDataModelItem is the base for all types in the Entity Data Model (EDM) metadata construction and modification API.
            </summary>
        </member>
        <member name="T:System.Data.Entity.Edm.Common.DataModelItem">
            <summary>
                DataModelItem is the base for all types in the EDM metadata reflection, construction and modification API.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.EdmDataModelItem.ItemKind">
            <summary>
                Gets an <see cref="T:System.Data.Entity.Edm.EdmItemKind"/> value indicating which Entity Data Model (EDM) concept is represented by this item.
            </summary>
        </member>
        <member name="T:System.Data.Entity.Edm.Common.IAnnotatedDataModelItem">
            <summary>
                IAnnotatedDataModelItem is implemented by model-specific base types for all types with an <see cref="P:System.Data.Entity.Edm.Common.IAnnotatedDataModelItem.Annotations"/> property. <seealso cref="T:System.Data.Entity.Edm.EdmDataModelItem"/>
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.Common.IAnnotatedDataModelItem.Annotations">
            <summary>
                Gets or sets the currently assigned annotations.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.EdmMetadataItem.Annotations">
            <summary>
                Gets or sets the currently assigned annotations.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.EdmMetadataItem.ChildItems">
            <summary>
                Returns all EdmItem children directly contained by this EdmItem.
            </summary>
        </member>
        <member name="T:System.Data.Entity.Edm.Common.INamedDataModelItem">
            <summary>
                INamedDataModelItem is implemented by model-specific base types for all types with a <see cref="P:System.Data.Entity.Edm.Common.INamedDataModelItem.Name"/> property. <seealso cref="T:System.Data.Entity.Edm.EdmNamedMetadataItem"/>
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.Common.INamedDataModelItem.Name">
            <summary>
                Gets or sets the currently assigned name.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.EdmNamedMetadataItem.Name">
            <summary>
                Gets or sets the currently assigned name.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.EdmDataModelType.IsAbstract">
            <summary>
                Gets a value indicating whether this type is abstract.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.EdmDataModelType.BaseType">
            <summary>
                Gets the optional base type of this type.
            </summary>
        </member>
        <member name="T:System.Data.Entity.Edm.EdmStructuralMember">
            <summary>
                EdmStructuralMember is the base for all types that represent members of structural items in the Entity Data Model (EDM) metadata construction and modification API.
            </summary>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.DbConnectionInfo">
            <summary>
                Represents information about a database connection.
            </summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.DbConnectionInfo.#ctor(System.String)">
            <summary>
                Creates a new instance of DbConnectionInfo representing a connection that is specified in the application configuration file.
            </summary>
            <param name = "connectionName">The name of the connection string in the application configuration.</param>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.DbConnectionInfo.#ctor(System.String,System.String)">
            <summary>
                Creates a new instance of DbConnectionInfo based on a connection string.
            </summary>
            <param name = "connectionString">The connection string to use for the connection.</param>
            <param name = "providerInvariantName">The name of the provider to use for the connection. Use 'System.Data.SqlClient' for SQL Server.</param>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.DbConnectionInfo.GetConnectionString(System.Data.Entity.Internal.AppConfig)">
            <summary>
                Gets the connection information represented by this instance.
            </summary>
            <param name = "config">Configuration to use if connection comes from the configuration file.</param>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.LocalDbConnectionFactory">
            <summary>
                Instances of this class are used to create DbConnection objects for
                SQL Server LocalDb based on a given database name or connection string.
            </summary>
            <remarks>
                An instance of this class can be set on the <see cref="T:System.Data.Entity.Database"/> class or in the
                app.config/web.config for the application to cause all DbContexts created with no
                connection information or just a database name to use SQL Server LocalDb by default.
                This class is immutable since multiple threads may access instances simultaneously
                when creating connections.
            </remarks>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.IDbConnectionFactory">
            <summary>
                Implementations of this interface are used to create DbConnection objects for
                a type of database server based on a given database name.  
                An Instance is set on the <see cref="T:System.Data.Entity.Database"/> class to
                cause all DbContexts created with no connection information or just a database
                name or connection string to use a certain type of database server by default.
                Two implementations of this interface are provided: <see cref="T:System.Data.Entity.Infrastructure.SqlConnectionFactory"/>
                is used to create connections to Microsoft SQL Server, including EXPRESS editions.
                <see cref="T:System.Data.Entity.Infrastructure.SqlCeConnectionFactory"/> is used to create connections to Microsoft SQL
                Server Compact Editions.
                Other implementations for other database servers can be added as needed.
                Note that implementations should be thread safe or immutable since they may
                be accessed by multiple threads at the same time.
            </summary>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.IDbConnectionFactory.CreateConnection(System.String)">
            <summary>
                Creates a connection based on the given database name or connection string.
            </summary>
            <param name = "nameOrConnectionString">The database name or connection string.</param>
            <returns>An initialized DbConnection.</returns>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.LocalDbConnectionFactory.#ctor(System.String)">
            <summary>
                Creates a new instance of the connection factory for the given version of LocalDb.
                For SQL Server 2012 LocalDb use "v11.0".
            </summary>
            <param name="localDbVersion">The LocalDb version to use.</param>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.LocalDbConnectionFactory.#ctor(System.String,System.String)">
            <summary>
                Creates a new instance of the connection factory for the given version of LocalDb.
                For SQL Server 2012 LocalDb use "v11.0".
                
            </summary>
            <param name="localDbVersion">The LocalDb version to use.</param>
            <param name = "baseConnectionString">
                The connection string to use for options to the database other than the 'Initial Catalog',
                'Data Source', and 'AttachDbFilename'.
                The 'Initial Catalog' and 'AttachDbFilename' will be prepended to this string based on the
                database name when CreateConnection is called.
                The 'Data Source' will be set based on the LocalDbVersion argument.
            </param>
        </member>
        <member name="M:System.Data.Entity.Infrastructure.LocalDbConnectionFactory.CreateConnection(System.String)">
            <summary>
                Creates a connection for SQL Server LocalDb based on the given database name or connection string.
                If the given string contains an '=' character then it is treated as a full connection string,
                otherwise it is treated as a database name only.
            </summary>
            <param name = "nameOrConnectionString">The database name or connection string.</param>
            <returns>An initialized DbConnection.</returns>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.LocalDbConnectionFactory.BaseConnectionString">
            <summary>
                The connection string to use for options to the database other than the 'Initial Catalog',
                'Data Source', and 'AttachDbFilename'.
                The 'Initial Catalog' and 'AttachDbFilename' will be prepended to this string based on the
                database name when CreateConnection is called.
                The 'Data Source' will be set based on the LocalDbVersion argument.
                The default is 'Integrated Security=True; MultipleActiveResultSets=True;'.
            </summary>
        </member>
        <member name="T:System.Data.Entity.Internal.ClonedObjectContext">
            <summary>
            Encapsulates a cloned <see cref="P:System.Data.Entity.Internal.ClonedObjectContext.ObjectContext"/> and store <see cref="T:System.Data.Common.DbConnection"/>. Note that these
            objects are disposable and should be used in a using block to ensure both the cloned context and the
            cloned connection are disposed.
            </summary>
        </member>
        <member name="M:System.Data.Entity.Internal.ClonedObjectContext.#ctor">
            <summary>
            For mocking.
            </summary>
        </member>
        <member name="M:System.Data.Entity.Internal.ClonedObjectContext.#ctor(System.Data.Entity.Internal.MockingProxies.ObjectContextProxy,System.String,System.Boolean)">
            <summary>
            Creates a clone of the given <see cref="P:System.Data.Entity.Internal.ClonedObjectContext.ObjectContext"/>. The underlying <see cref="T:System.Data.Common.DbConnection"/> of
            the context is also cloned and the given connection string is used for the connection string of
            the cloned connection.
            </summary>
        </member>
        <member name="M:System.Data.Entity.Internal.ClonedObjectContext.TransferLoadedAssemblies(System.Data.Entity.Internal.MockingProxies.ObjectContextProxy)">
            <summary>
                Finds the assemblies that were used for loading o-space types in the source context
                and loads those assemblies in the cloned context.
            </summary>
        </member>
        <member name="M:System.Data.Entity.Internal.ClonedObjectContext.Dispose">
            <summary>
            Disposes both the underlying ObjectContext and its store connection.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Internal.ClonedObjectContext.ObjectContext">
            <summary>
            The cloned context.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Internal.ClonedObjectContext.Connection">
            <summary>
            This is always the store connection of the underlying ObjectContext.
            </summary>
        </member>
        <member name="T:System.Data.Entity.Internal.ConfigFile.DatabaseInitializerElement">
            <summary>
                Represents setting the database initializer for a specific context type
            </summary>
        </member>
        <member name="T:System.Data.Entity.Internal.ConfigFile.ParameterElement">
            <summary>
                Represents a parameter to be passed to a method
            </summary>
        </member>
        <member name="T:System.Data.Entity.Internal.ConfigFile.ParameterCollection">
            <summary>
                Represents a series of parameters to pass to a method
            </summary>
        </member>
        <member name="M:System.Data.Entity.Internal.ConfigFile.ParameterCollection.NewElement">
            <summary>
                Adds a new parameter to the collection
                Used for unit testing
            </summary>
        </member>
        <member name="T:System.Data.Entity.Internal.ConfigFile.ContextCollection">
            <summary>
                Represents the configuration for a series of contexts
            </summary>
        </member>
        <member name="M:System.Data.Entity.Internal.ConfigFile.ContextCollection.NewElement(System.String)">
            <summary>
                Adds a new context to the collection
                Used for unit testing
            </summary>
        </member>
        <member name="T:System.Data.Entity.Internal.ConfigFile.ContextElement">
            <summary>
                Represents the configuration for a specific context type
            </summary>
        </member>
        <member name="T:System.Data.Entity.Internal.ConfigFile.DefaultConnectionFactoryElement">
            <summary>
                Represents setting the default connection factory
            </summary>
        </member>
        <member name="T:System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection">
            <summary>
                Represents all Entity Framework related configuration
            </summary>
        </member>
        <member name="T:System.Data.Entity.Internal.DatabaseCreator">
            <summary>
                Handles creating databases either using the core provider or the Migrations pipeline.
            </summary>
        </member>
        <member name="M:System.Data.Entity.Internal.DatabaseCreator.CreateDatabase(System.Data.Entity.Internal.InternalContext,System.Func{System.Data.Entity.Migrations.DbMigrationsConfiguration,System.Data.Entity.DbContext,System.Data.Entity.Migrations.DbMigrator},System.Data.Objects.ObjectContext)">
            <summary>
                Creates a database using the core provider (i.e. ObjectContext.CreateDatabase) or
                by using Code First Migrations <see cref="T:System.Data.Entity.Migrations.DbMigrator"/> to create an empty database
                and the perform an automatic migration to the current model.
                Migrations is used if Code First is being used and the EF provider is for SQL Server
                or SQL Compact. The core is used for non-Code First models and for other providers even
                when using Code First.
            </summary>
        </member>
        <member name="T:System.Data.Entity.DbContext">
            <summary>
                A DbContext instance represents a combination of the Unit Of Work and Repository patterns such that
                it can be used to query from a database and group together changes that will then be written
                back to the store as a unit.
                DbContext is conceptually similar to ObjectContext.
            </summary>
            <remarks>
                DbContext is usually used with a derived type that contains <see cref="T:System.Data.Entity.DbSet`1"/> properties for
                the root entities of the model. These sets are automatically initialized when the
                instance of the derived class is created.  This behavior can be modified by applying the
                <see cref="T:System.Data.Entity.Infrastructure.SuppressDbSetInitializationAttribute"/>  attribute to either the entire derived context
                class, or to individual properties on the class.
            
                The Entity Data Model backing the context can be specified in several ways.  When using the Code First
                approach, the <see cref="T:System.Data.Entity.DbSet`1"/> properties on the derived context are used to build a model
                by convention.  The protected OnModelCreating method can be overridden to tweak this model.  More
                control over the model used for the Model First approach can be obtained by creating a <see cref="T:System.Data.Entity.Infrastructure.DbCompiledModel"/>
                explicitly from a <see cref="T:System.Data.Entity.DbModelBuilder"/> and passing this model to one of the DbContext constructors.
            
                When using the Database First or Model First approach the Entity Data Model can be created using the
                Entity Designer (or manually through creation of an EDMX file) and then this model can be specified using
                entity connection string or an <see cref="T:System.Data.EntityClient.EntityConnection"/> object.
            
                The connection to the database (including the name of the database) can be specified in several ways.
                If the parameterless DbContext constructor is called from a derived context, then the name of the derived context
                is used to find a connection string in the app.config or web.config file.  If no connection string is found, then
                the name is passed to the DefaultConnectionFactory registered on the <see cref="T:System.Data.Entity.Database"/> class.  The connection
                factory then uses the context name as the database name in a default connection string.  (This default connection
                string points to .\SQLEXPRESS on the local machine unless a different DefaultConnectionFactory is registered.)
            
                Instead of using the derived context name, the connection/database name can also be specified explicitly by
                passing the name to one of the DbContext constructors that takes a string.  The name can also be passed in
                the form "name=myname", in which case the name must be found in the config file or an exception will be thrown.
            
                Note that the connection found in the app.config or web.config file can be a normal database connection
                string (not a special Entity Framework connection string) in which case the DbContext will use Code First.
                However, if the connection found in the config file is a special Entity Framework connection string, then the
                DbContext will use Database/Model First and the model specified in the connection string will be used.
            
                An existing or explicitly created DbConnection can also be used instead of the database/connection name.
            
                A <see cref="T:System.Data.Entity.DbModelBuilderVersionAttribute"/> can be applied to a class derived from DbContext to set the
                version of conventions used by the context when it creates a model. If no attribute is applied then the
                latest version of conventions will be used.
            </remarks>
        </member>
        <member name="T:System.Data.Entity.Infrastructure.IObjectContextAdapter">
            <summary>
                Interface implemented by objects that can provide an <see cref="P:System.Data.Entity.Infrastructure.IObjectContextAdapter.ObjectContext"/> instance.
                The <see cref="T:System.Data.Entity.DbContext"/> class implements this interface to provide access to the underlying
                ObjectContext.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Infrastructure.IObjectContextAdapter.ObjectContext">
            <summary>
                Gets the object context.
            </summary>
            <value>The object context.</value>
        </member>
        <member name="M:System.Data.Entity.DbContext.#ctor">
            <summary>
                Constructs a new context instance using conventions to create the name of the database to
                which a connection will be made.  The by-convention name is the full name (namespace + class name)
                of the derived context class.
                See the class remarks for how this is used to create a connection.
            </summary>
        </member>
        <member name="M:System.Data.Entity.DbContext.#ctor(System.Data.Entity.Infrastructure.DbCompiledModel)">
            <summary>
                Constructs a new context instance using conventions to create the name of the database to
                which a connection will be made, and initializes it from the given model.
                The by-convention name is the full name (namespace + class name) of the derived context class.
                See the class remarks for how this is used to create a connection.
            </summary>
            <param name = "model">The model that will back this context.</param>
        </member>
        <member name="M:System.Data.Entity.DbContext.#ctor(System.String)">
            <summary>
                Constructs a new context instance using the given string as the name or connection string for the
                database to which a connection will be made.
                See the class remarks for how this is used to create a connection.
            </summary>
            <param name = "nameOrConnectionString">Either the database name or a connection string.</param>
        </member>
        <member name="M:System.Data.Entity.DbContext.#ctor(System.String,System.Data.Entity.Infrastructure.DbCompiledModel)">
            <summary>
                Constructs a new context instance using the given string as the name or connection string for the
                database to which a connection will be made, and initializes it from the given model.
                See the class remarks for how this is used to create a connection.
            </summary>
            <param name = "nameOrConnectionString">Either the database name or a connection string.</param>
            <param name = "model">The model that will back this context.</param>
        </member>
        <member name="M:System.Data.Entity.DbContext.#ctor(System.Data.Common.DbConnection,System.Boolean)">
            <summary>
                Constructs a new context instance using the existing connection to connect to a database.
                The connection will not be disposed when the context is disposed.
            </summary>
            <param name = "existingConnection">An existing connection to use for the new context.</param>
            <param name = "contextOwnsConnection">If set to <c>true</c> the connection is disposed when
                the context is disposed, otherwise the caller must dispose the connection.</param>
        </member>
        <member name="M:System.Data.Entity.DbContext.#ctor(System.Data.Common.DbConnection,System.Data.Entity.Infrastructure.DbCompiledModel,System.Boolean)">
            <summary>
                Constructs a new context instance using the existing connection to connect to a database,
                and initializes it from the given model.
                The connection will not be disposed when the context is disposed.
                <param name = "existingConnection">An existing connection to use for the new context.</param>
                <param name = "model">The model that will back this context.</param>
                <param name = "contextOwnsConnection">If set to <c>true</c> the connection is disposed when
                    the context is disposed, otherwise the caller must dispose the connection.</param>
            </summary>
        </member>
        <member name="M:System.Data.Entity.DbContext.#ctor(System.Data.Objects.ObjectContext,System.Boolean)">
            <summary>
                Constructs a new context instance around an existing ObjectContext.
                <param name = "objectContext">An existing ObjectContext to wrap with the new context.</param>
                <param name = "dbContextOwnsObjectContext">If set to <c>true</c> the ObjectContext is disposed when
                    the DbContext is disposed, otherwise the caller must dispose the connection.</param>
            </summary>
        </member>
        <member name="M:System.Data.Entity.DbContext.InitializeLazyInternalContext(System.Data.Entity.Internal.IInternalConnection,System.Data.Entity.Infrastructure.DbCompiledModel)">
            <summary>
                Initializes the internal context, discovers and initializes sets, and initializes from a model if one is provided.
            </summary>
        </member>
        <member name="M:System.Data.Entity.DbContext.DiscoverAndInitializeSets">
            <summary>
                Discovers DbSets and initializes them.
            </summary>
        </member>
        <member name="M:System.Data.Entity.DbContext.OnModelCreating(System.Data.Entity.DbModelBuilder)">
            <summary>
                This method is called when the model for a derived context has been initialized, but
                before the model has been locked down and used to initialize the context.  The default
                implementation of this method does nothing, but it can be overridden in a derived class
                such that the model can be further configured before it is locked down.
            </summary>
            <remarks>
                Typically, this method is called only once when the first instance of a derived context
                is created.  The model for that context is then cached and is for all further instances of
                the context in the app domain.  This caching can be disabled by setting the ModelCaching
                property on the given ModelBuidler, but note that this can seriously degrade performance.
                More control over caching is provided through use of the DbModelBuilder and DbContextFactory
                classes directly.
            </remarks>
            <param name = "modelBuilder">The builder that defines the model for the context being created.</param>
        </member>
        <member name="M:System.Data.Entity.DbContext.CallOnModelCreating(System.Data.Entity.DbModelBuilder)">
            <summary>
                Internal method used to make the call to the real OnModelCreating method.
            </summary>
            <param name = "modelBuilder">The model builder.</param>
        </member>
        <member name="M:System.Data.Entity.DbContext.Set``1">
            <summary>
                Returns a DbSet instance for access to entities of the given type in the context,
                the ObjectStateManager, and the underlying store.
            </summary>
            <remarks>
                See the DbSet class for more details.
            </remarks>
            <typeparam name = "TEntity">The type entity for which a set should be returned.</typeparam>
            <returns>A set for the given entity type.</returns>
        </member>
        <member name="M:System.Data.Entity.DbContext.Set(System.Type)">
            <summary>
                Returns a non-generic DbSet instance for access to entities of the given type in the context,
                the ObjectStateManager, and the underlying store.
            </summary>
            <param name = "entityType">The type of entity for which a set should be returned.</param>
            <returns>A set for the given entity type.</returns>
            <remarks>
                See the DbSet class for more details.
            </remarks>
        </member>
        <member name="M:System.Data.Entity.DbContext.SaveChanges">
            <summary>
                Saves all changes made in this context to the underlying database.
            </summary>
            <returns>The number of objects written to the underlying database.</returns>
            <exception cref="T:System.InvalidOperationException">Thrown if the context has been disposed.</exception>
        </member>
        <member name="M:System.Data.Entity.DbContext.GetValidationErrors">
            <summary>
                Validates tracked entities and returns a Collection of <see cref="T:System.Data.Entity.Validation.DbEntityValidationResult"/> containing validation results.
            </summary>
            <returns>
                Collection of validation results for invalid entities. The collection is never null and must not contain null 
                values or results for valid entities.
            </returns>
            <remarks>
                1. This method calls DetectChanges() to determine states of the tracked entities unless 
                DbContextConfiguration.AutoDetectChangesEnabled is set to false.
                2. By default only Added on Modified entities are validated. The user is able to change this behavior 
                by overriding ShouldValidateEntity method.
            </remarks>
        </member>
        <member name="M:System.Data.Entity.DbContext.ShouldValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry)">
            <summary>
                Extension point allowing the user to override the default behavior of validating only
                added and modified entities.
            </summary>
            <param name = "entityEntry">DbEntityEntry instance that is supposed to be validated.</param>
            <returns>true to proceed with validation. false otherwise.</returns>
        </member>
        <member name="M:System.Data.Entity.DbContext.ValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry,System.Collections.Generic.IDictionary{System.Object,System.Object})">
            <summary>
                Extension point allowing the user to customize validation of an entity or filter out validation results.
                Called by <see cref="M:System.Data.Entity.DbContext.GetValidationErrors"/>.
            </summary>
            <param name="entityEntry">DbEntityEntry instance to be validated.</param>
            <param name="items">User defined dictionary containing additional info for custom validation.
                It will be passed to <see cref="T:System.ComponentModel.DataAnnotations.ValidationContext"/>
                and will be exposed as <see cref="P:System.ComponentModel.DataAnnotations.ValidationContext.Items"/>.
                This parameter is optional and can be null.</param>
            <returns>Entity validation result. Possibly null when overridden.</returns>
        </member>
        <member name="M:System.Data.Entity.DbContext.CallValidateEntity(System.Data.Entity.Infrastructure.DbEntityEntry)">
            <summary>
                Internal method that calls the protected ValidateEntity method.
            </summary>
            <param name="entityEntry">DbEntityEntry instance to be validated.</param>
            <param name="items">User defined dictionary containing additional info for custom validation.
                It will be passed to <see cref="T:System.ComponentModel.DataAnnotations.ValidationContext"/>
                and will be exposed as <see cref="P:System.ComponentModel.DataAnnotations.ValidationContext.Items"/>.
                This parameter is optional and can be null.</param>
            <returns>Entity validation result. Possibly null when ValidateEntity is overridden.</returns>
        </member>
        <member name="M:System.Data.Entity.DbContext.Entry``1(``0)">
            <summary>
                Gets a <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry`1"/> object for the given entity providing access to
                information about the entity and the ability to perform actions on the entity.
            </summary>
            <typeparam name="TEntity">The type of the entity.</typeparam>
            <param name="entity">The entity.</param>
            <returns>An entry for the entity.</returns>
        </member>
        <member name="M:System.Data.Entity.DbContext.Entry(System.Object)">
            <summary>
                Gets a <see cref="T:System.Data.Entity.Infrastructure.DbEntityEntry"/> object for the given entity providing access to
                information about the entity and the ability to perform actions on the entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns>An entry for the entity.</returns>
        </member>
        <member name="M:System.Data.Entity.DbContext.Dispose">
            <summary>
                Calls the protected Dispose method.
            </summary>
        </member>
        <member name="M:System.Data.Entity.DbContext.Dispose(System.Boolean)">
            <summary>
                Disposes the context. The underlying <see cref="T:System.Data.Objects.ObjectContext"/> is also disposed if it was created
                is by this context or ownership was passed to this context when this context was created.
                The connection to the database (<see cref="T:System.Data.Common.DbConnection"/> object) is also disposed if it was created
                is by this context or ownership was passed to this context when this context was created.
            </summary>
            <param name="disposing"><c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.</param>
        </member>
        <member name="P:System.Data.Entity.DbContext.Database">
            <summary>
                Creates a Database instance for this context that allows for creation/deletion/existence checks
                for the underlying database.
            </summary>
        </member>
        <member name="P:System.Data.Entity.DbContext.System#Data#Entity#Infrastructure#IObjectContextAdapter#ObjectContext">
            <summary>
                Returns the Entity Framework ObjectContext that is underlying this context.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown if the context has been disposed.</exception>
        </member>
        <member name="P:System.Data.Entity.DbContext.ChangeTracker">
            <summary>
                Provides access to features of the context that deal with change tracking of entities.
            </summary>
            <value>An object used to access features that deal with change tracking.</value>
        </member>
        <member name="P:System.Data.Entity.DbContext.Configuration">
            <summary>
                Provides access to configuration options for the context.
            </summary>
            <value>An object used to access configuration options.</value>
        </member>
        <member name="P:System.Data.Entity.DbContext.InternalContext">
            <summary>
                Provides access to the underlying InternalContext for other parts of the internal design.
            </summary>
        </member>
        <member name="T:System.Data.Entity.Internal.AppConfig">
            <summary>
            A simple representation of an app.config or web.config file.
            </summary>
        </member>
        <member name="M:System.Data.Entity.Internal.AppConfig.#ctor(System.Configuration.Configuration)">
            <summary>
            Initializes a new instance of AppConfig based on supplied configuration
            </summary>
            <param name="configuration">Configuration to load settings from</param>
        </member>
        <member name="M:System.Data.Entity.Internal.AppConfig.#ctor(System.Configuration.ConnectionStringSettingsCollection)">
            <summary>
            Initializes a new instance of AppConfig based on supplied connection strings
            The default configuration for database initializers and default connection factory will be used
            </summary>
            <param name="connectionStrings">Connection strings to be used</param>
        </member>
        <member name="M:System.Data.Entity.Internal.AppConfig.#ctor">
            <summary>
            Initializes a new instance of AppConfig based on the <see cref="T:System.Configuration.ConfigurationManager"/> for the AppDomain
            </summary>
            <remarks>
            Use AppConfig.DefaultInstance instead of this constructor
            </remarks>
        </member>
        <member name="M:System.Data.Entity.Internal.AppConfig.ApplyInitializers">
            <summary>
            Appies any database intializers specified in the configuration
            </summary>
        </member>
        <member name="M:System.Data.Entity.Internal.AppConfig.InternalApplyInitializers(System.Boolean)">
            <summary>
            Appies any database intializers specified in the configuration
            </summary>
            <param name="force">
            Value indicating if initializers should be re-applied if they have already been applied in this AppDomain
            </param>
        </member>
        <member name="M:System.Data.Entity.Internal.AppConfig.GetConnectionString(System.String)">
            <summary>
            Gets the specified connection string from the configuration
            </summary>
            <param name="name">Name of the connection string to get</param>
            <returns>The connection string, or null if there is no connection string with the specified name</returns>
        </member>
        <member name="P:System.Data.Entity.Internal.AppConfig.DefaultConnectionFactory">
            <summary>
            Gets the default connection factory based on the configuration
            </summary>
        </member>
        <member name="P:System.Data.Entity.Internal.AppConfig.DefaultInstance">
            <summary>
            Gets a singleton instance of configuration based on the <see cref="T:System.Configuration.ConfigurationManager"/> for the AppDomain
            </summary>
        </member>
        <member name="T:System.Data.Entity.Internal.MockingProxies.EntityConnectionProxy">
            <summary>
            Acts as a proxy for <see cref="T:System.Data.EntityClient.EntityConnection"/> that for the most part just passes calls
            through to the real object but uses virtual methods/properties such that uses of the object
            can be mocked.
            </summary>
        </member>
        <member name="T:System.Data.Entity.Internal.LegacyDatabaseInitializerConfig">
            <summary>
                Encapsulates information read from the application config file that specifies a database initializer
                and allows that initializer to be dynamically applied.
            </summary>
        </member>
        <member name="M:System.Data.Entity.Internal.LegacyDatabaseInitializerConfig.#ctor(System.String,System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:System.Data.Entity.Internal.LegacyDatabaseInitializerConfig"/> class.
            </summary>
            <param name="configKey">The key from the entry in the config file.</param>
            <param name="configValue">The value from the enrty in the config file.</param>
        </member>
        <member name="M:System.Data.Entity.Internal.LegacyDatabaseInitializerConfig.ApplyInitializer">
            <summary>
                Uses the context type and initializer type specified in the config to create an initializer instance
                and set it with the DbDbatabase.SetInitializer method.
            </summary>
        </member>
        <member name="M:System.Data.Entity.Internal.LegacyDatabaseInitializerConfig.ApplyInitializersFromConfig(System.Configuration.KeyValueConfigurationCollection)">
            <summary>
                Reads all initializers from the application config file and sets them using the Database class.
            </summary>
        </member>
        <member name="T:System.Data.Entity.Internal.ModelHashCalculator">
            <summary>
                Calculates the model hash values used the EdmMetadata table from EF 4.1/4.2.
            </summary>
        </member>
        <member name="M:System.Data.Entity.Internal.ModelHashCalculator.Calculate(System.Data.Entity.Infrastructure.DbCompiledModel)">
            <summary>
                Calculates an SHA256 hash of the EDMX from the given code first model. This is the hash stored in
                the database in the EdmMetadata table in EF 4.1/4.2. The hash is always calculated using a v2 schema
                as was generated by EF 4.1/4.2 and with the <see cref="T:System.Data.Entity.Infrastructure.EdmMetadata"/> entity included in the model.
            </summary>
        </member>
        <member name="T:System.Data.Entity.Internal.MockingProxies.ObjectContextProxy">
            <summary>
            Acts as a proxy for <see cref="T:System.Data.Objects.ObjectContext"/> that for the most part just passes calls
            through to the real object but uses virtual methods/properties such that uses of the object
            can be mocked.
            </summary>
        </member>
        <member name="T:System.Data.Entity.MigrateDatabaseToLatestVersion`2">
            <summary>
            An implementation of <see cref="T:System.Data.Entity.IDatabaseInitializer`1"/> that will use Code First Migrations
            to update the database to the latest version.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:System.Data.Entity.IDatabaseInitializer`1" -->
        <member name="M:System.Data.Entity.IDatabaseInitializer`1.InitializeDatabase(`0)">
            <summary>
                Executes the strategy to initialize the database for the given context.
            </summary>
            <param name = "context">The context.</param>
        </member>
        <member name="M:System.Data.Entity.MigrateDatabaseToLatestVersion`2.#ctor">
            <summary>
            Initializes a new instance of the MigrateDatabaseToLatestVersion class. 
            </summary>
        </member>
        <member name="M:System.Data.Entity.MigrateDatabaseToLatestVersion`2.#ctor(System.String)">
            <summary>
            Initializes a new instance of the MigrateDatabaseToLatestVersion class that will
            use a specific connection string from the configuration file to connect to
            the database to perform the migration.
            </summary>
            <param name="connectionStringName">The name of the connection string to use for migration.</param>
        </member>
        <member name="M:System.Data.Entity.MigrateDatabaseToLatestVersion`2.InitializeDatabase(`0)">
            <inheritdoc/>
        </member>
        <member name="T:System.Data.Entity.Migrations.Builders.ColumnBuilder">
            <summary>
                Helper class that is used to configure a column.
            </summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Builders.ColumnBuilder.Binary(System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Byte[],System.String,System.Boolean,System.String,System.String)">
            <summary>
                Creates a new column definition to store Binary data.
            </summary>
            <param name = "nullable">Value indicating whether or not the column allows null values.</param>
            <param name = "maxLength">The maximum allowable length of the array data.</param>
            <param name = "fixedLength">Value indicating whether or not all data should be padded to the maximum length.</param>
            <param name = "isMaxLength">Value indicating whether or not the maximum length supported by the database provider should be used.</param>
            <param name = "defaultValue">Constant value to use as the default value for this column.</param>
            <param name = "defaultValueSql">SQL expression used as the default value for this column.</param>
            <param name = "timestamp">Value indicating whether or not this column should be configured as a timestamp.</param>
            <param name = "name">The name of the column.</param>
            <param name = "storeType">Provider specific data type to use for this column.</param>
            <returns>The newly constructed column definition.</returns>
        </member>
        <member name="M:System.Data.Entity.Migrations.Builders.ColumnBuilder.Boolean(System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String,System.String)">
            <summary>
                Creates a new column definition to store Boolean data.
            </summary>
            <param name = "nullable">Value indicating whether or not the column allows null values.</param>
            <param name = "defaultValue">Constant value to use as the default value for this column.</param>
            <param name = "defaultValueSql">SQL expression used as the default value for this column.</param>
            <param name = "name">The name of the column.</param>
            <param name = "storeType">Provider specific data type to use for this column.</param>
            <returns>The newly constructed column definition.</returns>
        </member>
        <member name="M:System.Data.Entity.Migrations.Builders.ColumnBuilder.Byte(System.Nullable{System.Boolean},System.Boolean,System.Nullable{System.Byte},System.String,System.String,System.String)">
            <summary>
                Creates a new column definition to store Byte data.
            </summary>
            <param name = "nullable">Value indicating whether or not the column allows null values.</param>
            <param name = "identity">Value indicating whether or not the database will generate values for this column during insert.</param>
            <param name = "defaultValue">Constant value to use as the default value for this column.</param>
            <param name = "defaultValueSql">SQL expression used as the default value for this column.</param>
            <param name = "name">The name of the column.</param>
            <param name = "storeType">Provider specific data type to use for this column.</param>
            <returns>The newly constructed column definition.</returns>
        </member>
        <member name="M:System.Data.Entity.Migrations.Builders.ColumnBuilder.DateTime(System.Nullable{System.Boolean},System.Nullable{System.Byte},System.Nullable{System.DateTime},System.String,System.String,System.String)">
            <summary>
                Creates a new column definition to store DateTime data.
            </summary>
            <param name = "nullable">Value indicating whether or not the column allows null values.</param>
            <param name = "precision">The precision of the column.</param>
            <param name = "defaultValue">Constant value to use as the default value for this column.</param>
            <param name = "defaultValueSql">SQL expression used as the default value for this column.</param>
            <param name = "name">The name of the column.</param>
            <param name = "storeType">Provider specific data type to use for this column.</param>
            <returns>The newly constructed column definition.</returns>
        </member>
        <member name="M:System.Data.Entity.Migrations.Builders.ColumnBuilder.Decimal(System.Nullable{System.Boolean},System.Nullable{System.Byte},System.Nullable{System.Byte},System.Nullable{System.Decimal},System.String,System.String,System.String,System.Boolean)">
            <summary>
                Creates a new column definition to store Decimal data.
            </summary>
            <param name = "nullable">Value indicating whether or not the column allows null values.</param>
            <param name = "precision">The numeric precision of the column.</param>
            <param name = "scale">The numeric scale of the column.</param>
            <param name = "defaultValue">Constant value to use as the default value for this column.</param>
            <param name = "defaultValueSql">SQL expression used as the default value for this column.</param>
            <param name = "name">The name of the column.</param>
            <param name = "storeType">Provider specific data type to use for this column.</param>
            <param name = "identity">Value indicating whether or not the database will generate values for this column during insert.</param>
            <returns>The newly constructed column definition.</returns>
        </member>
        <member name="M:System.Data.Entity.Migrations.Builders.ColumnBuilder.Double(System.Nullable{System.Boolean},System.Nullable{System.Double},System.String,System.String,System.String)">
            <summary>
                Creates a new column definition to store Double data.
            </summary>
            <param name = "nullable">Value indicating whether or not the column allows null values.</param>
            <param name = "defaultValue">Constant value to use as the default value for this column.</param>
            <param name = "defaultValueSql">SQL expression used as the default value for this column.</param>
            <param name = "name">The name of the column.</param>
            <param name = "storeType">Provider specific data type to use for this column.</param>
            <returns>The newly constructed column definition.</returns>
        </member>
        <member name="M:System.Data.Entity.Migrations.Builders.ColumnBuilder.Guid(System.Nullable{System.Boolean},System.Boolean,System.Nullable{System.Guid},System.String,System.String,System.String)">
            <summary>
                Creates a new column definition to store GUID data.
            </summary>
            <param name = "nullable">Value indicating whether or not the column allows null values.</param>
            <param name = "identity">Value indicating whether or not the database will generate values for this column during insert.</param>
            <param name = "defaultValue">Constant value to use as the default value for this column.</param>
            <param name = "defaultValueSql">SQL expression used as the default value for this column.</param>
            <param name = "name">The name of the column.</param>
            <param name = "storeType">Provider specific data type to use for this column.</param>
            <returns>The newly constructed column definition.</returns>
        </member>
        <member name="M:System.Data.Entity.Migrations.Builders.ColumnBuilder.Single(System.Nullable{System.Boolean},System.Nullable{System.Single},System.String,System.String,System.String)">
            <summary>
                Creates a new column definition to store Single data.
            </summary>
            <param name = "nullable">Value indicating whether or not the column allows null values.</param>
            <param name = "defaultValue">Constant value to use as the default value for this column.</param>
            <param name = "defaultValueSql">SQL expression used as the default value for this column.</param>
            <param name = "name">The name of the column.</param>
            <param name = "storeType">Provider specific data type to use for this column.</param>
            <returns>The newly constructed column definition.</returns>
        </member>
        <member name="M:System.Data.Entity.Migrations.Builders.ColumnBuilder.Short(System.Nullable{System.Boolean},System.Boolean,System.Nullable{System.Int16},System.String,System.String,System.String)">
            <summary>
                Creates a new column definition to store Short data.
            </summary>
            <param name = "nullable">Value indicating whether or not the column allows null values.</param>
            <param name = "identity">Value indicating whether or not the database will generate values for this column during insert.</param>
            <param name = "defaultValue">Constant value to use as the default value for this column.</param>
            <param name = "defaultValueSql">SQL expression used as the default value for this column.</param>
            <param name = "name">The name of the column.</param>
            <param name = "storeType">Provider specific data type to use for this column.</param>
            <returns>The newly constructed column definition.</returns>
        </member>
        <member name="M:System.Data.Entity.Migrations.Builders.ColumnBuilder.Int(System.Nullable{System.Boolean},System.Boolean,System.Nullable{System.Int32},System.String,System.String,System.String)">
            <summary>
                Creates a new column definition to store Integer data.
            </summary>
            <param name = "nullable">Value indicating whether or not the column allows null values.</param>
            <param name = "identity">Value indicating whether or not the database will generate values for this column during insert.</param>
            <param name = "defaultValue">Constant value to use as the default value for this column.</param>
            <param name = "defaultValueSql">SQL expression used as the default value for this column.</param>
            <param name = "name">The name of the column.</param>
            <param name = "storeType">Provider specific data type to use for this column.</param>
            <returns>The newly constructed column definition.</returns>
        </member>
        <member name="M:System.Data.Entity.Migrations.Builders.ColumnBuilder.Long(System.Nullable{System.Boolean},System.Boolean,System.Nullable{System.Int64},System.String,System.String,System.String)">
            <summary>
                Creates a new column definition to store Long data.
            </summary>
            <param name = "nullable">Value indicating whether or not the column allows null values.</param>
            <param name = "identity">Value indicating whether or not the database will generate values for this column during insert.</param>
            <param name = "defaultValue">Constant value to use as the default value for this column.</param>
            <param name = "defaultValueSql">SQL expression used as the default value for this column.</param>
            <param name = "name">The name of the column.</param>
            <param name = "storeType">Provider specific data type to use for this column.</param>
            <returns>The newly constructed column definition.</returns>
        </member>
        <member name="M:System.Data.Entity.Migrations.Builders.ColumnBuilder.String(System.Nullable{System.Boolean},System.Nullable{System.Int32},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.String,System.String,System.String,System.String)">
            <summary>
                Creates a new column definition to store String data.
            </summary>
            <param name = "nullable">Value indicating whether or not the column allows null values.</param>
            <param name = "maxLength">The maximum allowable length of the string data.</param>
            <param name = "fixedLength">Value indicating whether or not all data should be padded to the maximum length.</param>
            <param name = "isMaxLength">Value indicating whether or not the maximum length supported by the database provider should be used.</param>
            <param name = "unicode">Value indicating whether or not the column supports Unicode content.</param>
            <param name = "defaultValue">Constant value to use as the default value for this column.</param>
            <param name = "defaultValueSql">SQL expression used as the default value for this column.</param>
            <param name = "name">The name of the column.</param>
            <param name = "storeType">Provider specific data type to use for this column.</param>
            <returns>The newly constructed column definition.</returns>
        </member>
        <member name="M:System.Data.Entity.Migrations.Builders.ColumnBuilder.Time(System.Nullable{System.Boolean},System.Nullable{System.Byte},System.Nullable{System.TimeSpan},System.String,System.String,System.String)">
            <summary>
                Creates a new column definition to store Time data.
            </summary>
            <param name = "nullable">Value indicating whether or not the column allows null values.</param>
            <param name = "precision">The precision of the column.</param>
            <param name = "defaultValue">Constant value to use as the default value for this column.</param>
            <param name = "defaultValueSql">SQL expression used as the default value for this column.</param>
            <param name = "name">The name of the column.</param>
            <param name = "storeType">Provider specific data type to use for this column.</param>
            <returns>The newly constructed column definition.</returns>
        </member>
        <member name="M:System.Data.Entity.Migrations.Builders.ColumnBuilder.DateTimeOffset(System.Nullable{System.Boolean},System.Nullable{System.Byte},System.Nullable{System.DateTimeOffset},System.String,System.String,System.String)">
            <summary>
                Creates a new column definition to store DateTimeOffset data.
            </summary>
            <param name = "nullable">Value indicating whether or not the column allows null values.</param>
            <param name = "precision">The precision of the column.</param>
            <param name = "defaultValue">Constant value to use as the default value for this column.</param>
            <param name = "defaultValueSql">SQL expression used as the default value for this column.</param>
            <param name = "name">The name of the column.</param>
            <param name = "storeType">Provider specific data type to use for this column.</param>
            <returns>The newly constructed column definition.</returns>
        </member>
        <member name="M:System.Data.Entity.Migrations.Builders.ColumnBuilder.Geography(System.Nullable{System.Boolean},System.Data.Spatial.DbGeography,System.String,System.String,System.String)">
            <summary>
                Creates a new column definition to store geography data.
            </summary>
            <param name = "nullable">Value indicating whether or not the column allows null values.</param>
            <param name = "defaultValue">Constant value to use as the default value for this column.</param>
            <param name = "defaultValueSql">SQL expression used as the default value for this column.</param>
            <param name = "name">The name of the column.</param>
            <param name = "storeType">Provider specific data type to use for this column.</param>
            <returns>The newly constructed column definition.</returns>
        </member>
        <member name="M:System.Data.Entity.Migrations.Builders.ColumnBuilder.Geometry(System.Nullable{System.Boolean},System.Data.Spatial.DbGeometry,System.String,System.String,System.String)">
            <summary>
                Creates a new column definition to store geometry data.
            </summary>
            <param name = "nullable">Value indicating whether or not the column allows null values.</param>
            <param name = "defaultValue">Constant value to use as the default value for this column.</param>
            <param name = "defaultValueSql">SQL expression used as the default value for this column.</param>
            <param name = "name">The name of the column.</param>
            <param name = "storeType">Provider specific data type to use for this column.</param>
            <returns>The newly constructed column definition.</returns>
        </member>
        <member name="T:System.Data.Entity.Migrations.Builders.TableBuilder`1">
            <summary>
                Helper class that is used to further configure a table being created from a CreateTable call on <see cref="T:System.Data.Entity.Migrations.DbMigration"/>.
            </summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Builders.TableBuilder`1.#ctor(System.Data.Entity.Migrations.Model.CreateTableOperation,System.Data.Entity.Migrations.DbMigration)">
            <summary>
                Initializes a new instance of the TableBuilder class.
            </summary>
            <param name = "createTableOperation">The table creation operation to be further configured.</param>
            <param name = "migration">The migration the table is created in.</param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Builders.TableBuilder`1.PrimaryKey(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.String,System.Object)">
            <summary>
                Specifies a primary key for the table.
            </summary>
            <param name = "keyExpression">
                A lambda expression representing the property to be used as the primary key. 
                C#: t => t.Id   
                VB.Net: Function(t) t.Id
            
                If the primary key is made up of multiple properties then specify an anonymous type including the properties. 
                C#: t => new { t.Id1, t.Id2 }
                VB.Net: Function(t) New With { t.Id1, t.Id2 }
            </param>
            <param name = "name">
                The name of the primary key.
                If null is supplied, a default name will be generated.</param>
            <param name = "anonymousArguments">
                Additional arguments that may be processed by providers. 
                Use anonymous type syntax to specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
            </param>
            <returns>Itself, so that multiple calls can be chained.</returns>
        </member>
        <member name="M:System.Data.Entity.Migrations.Builders.TableBuilder`1.Index(System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Boolean,System.Object)">
            <summary>
                Specifies an index to be created on the table.
            </summary>
            <param name = "indexExpression">
                A lambda expression representing the property to be indexed. 
                C#: t => t.PropertyOne   
                VB.Net: Function(t) t.PropertyOne
            
                If multiple properties are to be indexed then specify an anonymous type including the properties. 
                C#: t => new { t.PropertyOne, t.PropertyTwo }
                VB.Net: Function(t) New With { t.PropertyOne, t.PropertyTwo }
            </param>
            <param name = "unique">A value indicating whether or not this is a unique index.</param>
            <param name = "anonymousArguments">
                Additional arguments that may be processed by providers. 
                Use anonymous type syntax to specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
            </param>
            <returns>Itself, so that multiple calls can be chained.</returns>
        </member>
        <member name="M:System.Data.Entity.Migrations.Builders.TableBuilder`1.ForeignKey(System.String,System.Linq.Expressions.Expression{System.Func{`0,System.Object}},System.Boolean,System.String,System.Object)">
            <summary>
                Specifies a foreign key constraint to be created on the table.
            </summary>
            <param name = "principalTable">Name of the table that the foreign key constraint targets.</param>
            <param name = "dependentKeyExpression">
                A lambda expression representing the properties of the foreign key. 
                C#: t => t.PropertyOne   
                VB.Net: Function(t) t.PropertyOne
            
                If multiple properties make up the foreign key then specify an anonymous type including the properties. 
                C#: t => new { t.PropertyOne, t.PropertyTwo }
                VB.Net: Function(t) New With { t.PropertyOne, t.PropertyTwo }</param>
            <param name = "cascadeDelete">
                A value indicating whether or not cascade delete should be configured on the foreign key constraint.
            </param>
            <param name = "name">
                The name of this foreign key constraint.
                If no name is supplied, a default name will be calculated.
            </param>
            <param name = "anonymousArguments">
                Additional arguments that may be processed by providers. 
                Use anonymous type syntax to specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
            </param>
            <returns>Itself, so that multiple calls can be chained.</returns>
        </member>
        <member name="T:System.Data.Entity.Migrations.DbMigration">
            <summary>
                Base class for code-based migrations.
            </summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.DbMigration.Up">
            <summary>
                Operations to be performed during the upgrade process.
            </summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.DbMigration.Down">
            <summary>
                Operations to be performed during the downgrade process.
            </summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.DbMigration.CreateTable``1(System.String,System.Func{System.Data.Entity.Migrations.Builders.ColumnBuilder,``0},System.Object)">
            <summary>
                Adds an operation to create a new table.
            </summary>
            <typeparam name = "TColumns">
                The columns in this create table operation. 
                You do not need to specify this type, it will be inferred from the columnsAction parameter you supply.
            </typeparam>
            <param name = "name">The name of the table. Schema name is optional, if no schema is specified then dbo is assumed.</param>
            <param name = "columnsAction">
                An action that specifies the columns to be included in the table.
                i.e. t => new { Id = t.Int(identity: true), Name = t.String() }</param>
            <param name = "anonymousArguments">
                Additional arguments that may be processed by providers. 
                Use anonymous type syntax to specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
            </param>
            <returns>An object that allows further configuration of the table creation operation.</returns>
        </member>
        <member name="M:System.Data.Entity.Migrations.DbMigration.AddForeignKey(System.String,System.String,System.String,System.String,System.Boolean,System.String,System.Object)">
            <summary>
                Adds an operation to create a new foreign key constraint.
            </summary>
            <param name = "dependentTable">
                The table that contains the foreign key column.
                Schema name is optional, if no schema is specified then dbo is assumed.
            </param>
            <param name = "dependentColumn">The foreign key column.</param>
            <param name = "principalTable">
                The table that contains the column this foreign key references.
                Schema name is optional, if no schema is specified then dbo is assumed.
            </param>
            <param name = "principalColumn">
                The column this foreign key references. 
                If no value is supplied the primary key of the principal table will be referenced.
            </param>
            <param name = "cascadeDelete">
                A value indicating if cascade delete should be configured for the foreign key relationship.
                If no value is supplied, cascade delete will be off.
            </param>
            <param name = "name">
                The name of the foreign key constraint in the database.
                If no value is supplied a unique name will be generated.
            </param>
            <param name = "anonymousArguments">
                Additional arguments that may be processed by providers. 
                Use anonymous type syntax to specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
            </param>
        </member>
        <member name="M:System.Data.Entity.Migrations.DbMigration.AddForeignKey(System.String,System.String[],System.String,System.String[],System.Boolean,System.String,System.Object)">
            <summary>
                Adds an operation to create a new foreign key constraint.
            </summary>
            <param name = "dependentTable">
                The table that contains the foreign key columns.
                Schema name is optional, if no schema is specified then dbo is assumed.
            </param>
            <param name = "dependentColumns">The foreign key columns.</param>
            <param name = "principalTable">
                The table that contains the columns this foreign key references.
                Schema name is optional, if no schema is specified then dbo is assumed.
            </param>
            <param name = "principalColumns">
                The columns this foreign key references. 
                If no value is supplied the primary key of the principal table will be referenced.
            </param>
            <param name = "cascadeDelete">
                A value indicating if cascade delete should be configured for the foreign key relationship.
                If no value is supplied, cascade delete will be off.
            </param>
            <param name = "name">
                The name of the foreign key constraint in the database.
                If no value is supplied a unique name will be generated.
            </param>
            <param name = "anonymousArguments">
                Additional arguments that may be processed by providers. 
                Use anonymous type syntax to specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
            </param>
        </member>
        <member name="M:System.Data.Entity.Migrations.DbMigration.DropForeignKey(System.String,System.String,System.Object)">
            <summary>
                Adds an operation to drop a foreign key constraint based on its name.
            </summary>
            <param name = "dependentTable">
                The table that contains the foreign key column.
                Schema name is optional, if no schema is specified then dbo is assumed.
            </param>
            <param name = "name">The name of the foreign key constraint in the database.</param>
            <param name = "anonymousArguments">
                Additional arguments that may be processed by providers. 
                Use anonymous type syntax to specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
            </param>
        </member>
        <member name="M:System.Data.Entity.Migrations.DbMigration.DropForeignKey(System.String,System.String,System.String,System.String,System.Object)">
            <summary>
                Adds an operation to drop a foreign key constraint based on the column it targets.
            </summary>
            <param name = "dependentTable">
                The table that contains the foreign key column.
                Schema name is optional, if no schema is specified then dbo is assumed.
            </param>
            <param name = "dependentColumn">The foreign key column.</param>
            <param name = "principalTable">
                The table that contains the column this foreign key references.
                Schema name is optional, if no schema is specified then dbo is assumed.
            </param>
            <param name = "principalColumn">The columns this foreign key references.</param>
            <param name = "anonymousArguments">
                Additional arguments that may be processed by providers. 
                Use anonymous type syntax to specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
            </param>
        </member>
        <member name="M:System.Data.Entity.Migrations.DbMigration.DropForeignKey(System.String,System.String[],System.String,System.Object)">
            <summary>
                Adds an operation to drop a foreign key constraint based on the columns it targets.
            </summary>
            <param name = "dependentTable">
                The table that contains the foreign key columns.
                Schema name is optional, if no schema is specified then dbo is assumed.
            </param>
            <param name = "dependentColumns">The foreign key columns.</param>
            <param name = "principalTable">
                The table that contains the columns this foreign key references.
                Schema name is optional, if no schema is specified then dbo is assumed.
            </param>
            <param name = "principalColumns">The columns this foreign key references.</param>
            <param name = "anonymousArguments">
                Additional arguments that may be processed by providers. 
                Use anonymous type syntax to specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
            </param>
        </member>
        <member name="M:System.Data.Entity.Migrations.DbMigration.DropTable(System.String,System.Object)">
            <summary>
                Adds an operation to drop a table.
            </summary>
            <param name = "name">
                The name of the table to be dropped.
                Schema name is optional, if no schema is specified then dbo is assumed.
            </param>
            <param name = "anonymousArguments">
                Additional arguments that may be processed by providers. 
                Use anonymous type syntax to specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
            </param>
        </member>
        <member name="M:System.Data.Entity.Migrations.DbMigration.MoveTable(System.String,System.String,System.Object)">
            <summary>
                Adds an operation to move a table to a new schema.
            </summary>
            <param name = "name">
                The name of the table to be moved.
                Schema name is optional, if no schema is specified then dbo is assumed.
            </param>
            <param name = "newSchema">The schema the table is to be moved to.</param>
            <param name = "anonymousArguments">
                Additional arguments that may be processed by providers. 
                Use anonymous type syntax to specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
            </param>
        </member>
        <member name="M:System.Data.Entity.Migrations.DbMigration.RenameTable(System.String,System.String,System.Object)">
            <summary>
                Adds an operation to rename a table. To change the schema of a table use MoveTable
            </summary>
            <param name = "name">
                The name of the table to be renamed.
                Schema name is optional, if no schema is specified then dbo is assumed.
            </param>
            <param name = "newName">
                The new name for the table.
                Schema name is optional, if no schema is specified then dbo is assumed.
            </param>
            <param name = "anonymousArguments">
                Additional arguments that may be processed by providers. 
                Use anonymous type syntax to specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
            </param>
        </member>
        <member name="M:System.Data.Entity.Migrations.DbMigration.RenameColumn(System.String,System.String,System.String,System.Object)">
            <summary>
                Adds an operation to rename a column.
            </summary>
            <param name = "table">
                The name of the table that contains the column to be renamed.
                Schema name is optional, if no schema is specified then dbo is assumed.
            </param>
            <param name = "name">The name of the column to be renamed.</param>
            <param name = "newName">The new name for the column.</param>
            <param name = "anonymousArguments">
                Additional arguments that may be processed by providers. 
                Use anonymous type syntax to specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
            </param>
        </member>
        <member name="M:System.Data.Entity.Migrations.DbMigration.AddColumn(System.String,System.String,System.Func{System.Data.Entity.Migrations.Builders.ColumnBuilder,System.Data.Entity.Migrations.Model.ColumnModel},System.Object)">
            <summary>
                Adds an operation to add a column to an existing table.
            </summary>
            <param name = "table">
                The name of the table to add the column to.
                Schema name is optional, if no schema is specified then dbo is assumed.
            </param>
            <param name = "name">
                The name of the column to be added.
            </param>
            <param name = "columnAction">
                An action that specifies the column to be added.
                i.e. c => c.Int(nullable: false, defaultValue: 3)
            </param>
            <param name = "anonymousArguments">
                Additional arguments that may be processed by providers. 
                Use anonymous type syntax to specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
            </param>
        </member>
        <member name="M:System.Data.Entity.Migrations.DbMigration.DropColumn(System.String,System.String,System.Object)">
            <summary>
                Adds an operation to drop an existing column.
            </summary>
            <param name = "table">
                The name of the table to drop the column from.
                Schema name is optional, if no schema is specified then dbo is assumed.
            </param>
            <param name = "name">The name of the column to be dropped.</param>
            <param name = "anonymousArguments">
                Additional arguments that may be processed by providers. 
                Use anonymous type syntax to specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
            </param>
        </member>
        <member name="M:System.Data.Entity.Migrations.DbMigration.AlterColumn(System.String,System.String,System.Func{System.Data.Entity.Migrations.Builders.ColumnBuilder,System.Data.Entity.Migrations.Model.ColumnModel},System.Object)">
            <summary>
                Adds an operation to alter the definition of an existing column.
            </summary>
            <param name = "table">
                The name of the table the column exists in.
                Schema name is optional, if no schema is specified then dbo is assumed.
            </param>
            <param name = "name">The name of the column to be changed.</param>
            <param name = "columnAction">
                An action that specifies the new definition for the column.
                i.e. c => c.String(nullable: false, defaultValue: "none")
            </param>
            <param name = "anonymousArguments">
                Additional arguments that may be processed by providers. 
                Use anonymous type syntax to specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
            </param>
        </member>
        <member name="M:System.Data.Entity.Migrations.DbMigration.AddPrimaryKey(System.String,System.String,System.String,System.Object)">
            <summary>
                Adds an operation to create a new primary key.
            </summary>
            <param name = "table">
                The table that contains the primary key column.
                Schema name is optional, if no schema is specified then dbo is assumed.
            </param>
            <param name = "column">The primary key column.</param>
            <param name = "name">
                The name of the primary key in the database.
                If no value is supplied a unique name will be generated.
            </param>
            <param name = "anonymousArguments">
                Additional arguments that may be processed by providers. 
                Use anonymous type syntax to specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
            </param>
        </member>
        <member name="M:System.Data.Entity.Migrations.DbMigration.AddPrimaryKey(System.String,System.String[],System.String,System.Object)">
            <summary>
                Adds an operation to create a new primary key based on multiple columns.
            </summary>
            <param name = "table">
                The table that contains the primary key columns.
                Schema name is optional, if no schema is specified then dbo is assumed.
            </param>
            <param name = "columns">The primary key columns.</param>
            <param name = "name">
                The name of the primary key in the database.
                If no value is supplied a unique name will be generated.
            </param>
            <param name = "anonymousArguments">
                Additional arguments that may be processed by providers. 
                Use anonymous type syntax to specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
            </param>
        </member>
        <member name="M:System.Data.Entity.Migrations.DbMigration.DropPrimaryKey(System.String,System.String,System.Object)">
            <summary>
                Adds an operation to drop an existing primary key that does not have the default name.
            </summary>
            <param name = "table">
                The table that contains the primary key column.
                Schema name is optional, if no schema is specified then dbo is assumed.
            </param>
            <param name = "name">The name of the primary key to be dropped.</param>
            <param name = "anonymousArguments">
                Additional arguments that may be processed by providers. 
                Use anonymous type syntax to specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
            </param>
        </member>
        <member name="M:System.Data.Entity.Migrations.DbMigration.DropPrimaryKey(System.String,System.Object)">
            <summary>
                Adds an operation to drop an existing primary key that was created with the default name.
            </summary>
            <param name = "table">
                The table that contains the primary key column.
                Schema name is optional, if no schema is specified then dbo is assumed.
            </param>
            <param name = "anonymousArguments">
                Additional arguments that may be processed by providers. 
                Use anonymous type syntax to specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
            </param>
        </member>
        <member name="M:System.Data.Entity.Migrations.DbMigration.CreateIndex(System.String,System.String,System.Boolean,System.String,System.Object)">
            <summary>
                Adds an operation to create an index on a single column.
            </summary>
            <param name = "table">
                The name of the table to create the index on.
                Schema name is optional, if no schema is specified then dbo is assumed.
            </param>
            <param name = "column">The name of the column to create the index on.</param>
            <param name = "unique">
                A value indicating if this is a unique index.
                If no value is supplied a non-unique index will be created.
            </param>
            <param name = "name">
                The name to use for the index in the database.
                If no value is supplied a unique name will be generated.
            </param>
            <param name = "anonymousArguments">
                Additional arguments that may be processed by providers. 
                Use anonymous type syntax to specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
            </param>
        </member>
        <member name="M:System.Data.Entity.Migrations.DbMigration.CreateIndex(System.String,System.String[],System.Boolean,System.String,System.Object)">
            <summary>
                Adds an operation to create an index on multiple columns.
            </summary>
            <param name = "table">
                The name of the table to create the index on.
                Schema name is optional, if no schema is specified then dbo is assumed.
            </param>
            <param name = "columns">The name of the columns to create the index on.</param>
            <param name = "unique">
                A value indicating if this is a unique index.
                If no value is supplied a non-unique index will be created.
            </param>
            <param name = "name">
                The name to use for the index in the database.
                If no value is supplied a unique name will be generated.
            </param>
            <param name = "anonymousArguments">
                Additional arguments that may be processed by providers. 
                Use anonymous type syntax to specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
            </param>
        </member>
        <member name="M:System.Data.Entity.Migrations.DbMigration.DropIndex(System.String,System.String,System.Object)">
            <summary>
                Adds an operation to drop an index based on its name.
            </summary>
            <param name = "table">
                The name of the table to drop the index from.
                Schema name is optional, if no schema is specified then dbo is assumed.
            </param>
            <param name = "name">The name of the index to be dropped.</param>
            <param name = "anonymousArguments">
                Additional arguments that may be processed by providers. 
                Use anonymous type syntax to specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
            </param>
        </member>
        <member name="M:System.Data.Entity.Migrations.DbMigration.DropIndex(System.String,System.String[],System.Object)">
            <summary>
                Adds an operation to drop an index based on the columns it targets.
            </summary>
            <param name = "table">
                The name of the table to drop the index from.
                Schema name is optional, if no schema is specified then dbo is assumed.
            </param>
            <param name = "columns">The name of the column(s) the index targets.</param>
            <param name = "anonymousArguments">
                Additional arguments that may be processed by providers. 
                Use anonymous type syntax to specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
            </param>
        </member>
        <member name="M:System.Data.Entity.Migrations.DbMigration.Sql(System.String,System.Boolean,System.Object)">
            <summary>
                Adds an operation to execute a SQL command.
            </summary>
            <param name = "sql">The SQL to be executed.</param>
            <param name = "suppressTransaction">
                A value indicating if the SQL should be executed outside of the 
                transaction being used for the migration process.
                If no value is supplied the SQL will be executed within the transaction.
            </param>
            <param name = "anonymousArguments">
                Additional arguments that may be processed by providers. 
                Use anonymous type syntax to specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
            </param>
        </member>
        <member name="T:System.Data.Entity.Migrations.DbMigrationsConfiguration">
            <summary>
                Configuration relating to the use of migrations for a given model.
                You will typically create a configuration class that derives
                from <see cref="T:System.Data.Entity.Migrations.DbMigrationsConfiguration`1"/> rather than 
                using this class.
            </summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.DbMigrationsConfiguration.#ctor">
            <summary>
                Initializes a new instance of the DbMigrationsConfiguration class.
            </summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.DbMigrationsConfiguration.SetSqlGenerator(System.String,System.Data.Entity.Migrations.Sql.MigrationSqlGenerator)">
            <summary>
                Adds a new SQL generator to be used for a given database provider.
            </summary>
            <param name = "providerInvariantName">Name of the database provider to set the SQL generator for.</param>
            <param name = "migrationSqlGenerator">The SQL generator to be used.</param>
        </member>
        <member name="M:System.Data.Entity.Migrations.DbMigrationsConfiguration.GetSqlGenerator(System.String)">
            <summary>
                Gets the SQL generator that is set to be used with a given database provider.
            </summary>
            <param name = "providerInvariantName">Name of the database provider to get the SQL generator for.</param>
            <returns>The SQL generator that is set for the database provider.</returns>
        </member>
        <member name="P:System.Data.Entity.Migrations.DbMigrationsConfiguration.AutomaticMigrationsEnabled">
            <summary>
                Gets or sets a value indicating if automatic migrations can be used when migration the database.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.DbMigrationsConfiguration.AutomaticMigrationDataLossAllowed">
            <summary>
                Gets or sets a value indicating if data loss is acceptable during automatic migration.
                If set to false an exception will be thrown if data loss may occur as part of an automatic migration.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.DbMigrationsConfiguration.ContextType">
            <summary>
                Gets or sets the derived DbContext representing the model to be migrated.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.DbMigrationsConfiguration.MigrationsNamespace">
            <summary>
                Gets or sets the namespace used for code-based migrations.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.DbMigrationsConfiguration.MigrationsDirectory">
            <summary>
                Gets or sets the sub-directory that code-based migrations are stored in.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.DbMigrationsConfiguration.CodeGenerator">
            <summary>
                Gets or sets the code generator to be used when scaffolding migrations.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.DbMigrationsConfiguration.MigrationsAssembly">
            <summary>
                Gets or sets the assembly containing code-based migrations.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.DbMigrationsConfiguration.TargetDatabase">
            <summary>
                Gets or sets a value to override the connection of the database to be migrated.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.DbMigrationsConfiguration.CommandTimeout">
            <summary>
            Gets or sets the timeout value used for the individual commands within a
            migration. A null value indicates that the default value of the underlying
            provider will be used.
            </summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.DbMigrationsConfiguration`1">
            <summary>
                Configuration relating to the use of migrations for a given model.
            </summary>
            <typeparam name = "TContext">The context representing the model that this configuration applies to.</typeparam>
        </member>
        <member name="M:System.Data.Entity.Migrations.DbMigrationsConfiguration`1.#ctor">
            <summary>
                Initializes a new instance of the DbMigrationsConfiguration class.
            </summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.DbMigrationsConfiguration`1.Seed(`0)">
            <summary>
                Runs after upgrading to the latest migration to allow seed data to be updated.
            </summary>
            <param name = "context">Context to be used for updating seed data.</param>
        </member>
        <member name="T:System.Data.Entity.Migrations.DbMigrator">
            <summary>
                DbMigrator is used to apply existing migrations to a database. 
                DbMigrator can be used to upgrade and downgrade to any given migration.
                To scaffold migrations based on changes to your model use <see cref="T:System.Data.Entity.Migrations.Design.MigrationScaffolder"/>
            </summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Infrastructure.MigratorBase">
            <summary>
                Base class for decorators that wrap the core <see cref="T:System.Data.Entity.Migrations.DbMigrator"/>
            </summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.MigratorBase.#ctor(System.Data.Entity.Migrations.Infrastructure.MigratorBase)">
            <summary>
                Initializes a new instance of the MigratorBase class.
            </summary>
            <param name = "innerMigrator">The migrator that this decorator is wrapping.</param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.MigratorBase.GetPendingMigrations">
            <summary>
                Gets a list of the pending migrations that have not been applied to the database.
            </summary>
            <returns>List of migration Ids</returns>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.MigratorBase.Update">
            <summary>
                Updates the target database to the latest migration.
            </summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.MigratorBase.Update(System.String)">
            <summary>
                Updates the target database to a given migration.
            </summary>
            <param name = "targetMigration">The migration to upgrade/downgrade to.</param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.MigratorBase.GetLocalMigrations">
            <summary>
                Gets a list of the migrations that are defined in the assembly.
            </summary>
            <returns>List of migration Ids</returns>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.MigratorBase.GetDatabaseMigrations">
            <summary>
                Gets a list of the migrations that have been applied to the database.
            </summary>
            <returns>List of migration Ids</returns>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.MigratorBase.Configuration">
            <summary>
                Gets the configuration being used for the migrations process.
            </summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.DbMigrator.InitialDatabase">
            <summary>
                Migration Id representing the state of the database before any migrations are applied.
            </summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.DbMigrator.#ctor(System.Data.Entity.Migrations.DbMigrationsConfiguration)">
            <summary>
                Initializes a new instance of the DbMigrator class.
            </summary>
            <param name = "configuration">Configuration to be used for the migration process.</param>
        </member>
        <member name="M:System.Data.Entity.Migrations.DbMigrator.GetLocalMigrations">
            <summary>
                Gets all migrations that are defined in the configured migrations assembly.
            </summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.DbMigrator.GetDatabaseMigrations">
            <summary>
                Gets all migrations that have been applied to the target database.
            </summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.DbMigrator.GetPendingMigrations">
            <summary>
                Gets all migrations that are defined in the assembly but haven't been applied to the target database.
            </summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.DbMigrator.Update(System.String)">
            <summary>
                Updates the target database to a given migration.
            </summary>
            <param name = "targetMigration">The migration to upgrade/downgrade to.</param>
        </member>
        <member name="P:System.Data.Entity.Migrations.DbMigrator.Configuration">
            <summary>
                Gets the configuration that is being used for the migration process.
            </summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.IDbSetExtensions">
            <summary>
                A set of extension methods for <see cref="T:System.Data.Entity.IDbSet`1"/>
            </summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.IDbSetExtensions.AddOrUpdate``1(System.Data.Entity.IDbSet{``0},``0[])">
            <summary>
                Adds or updates entities by key when SaveChanges is called. Equivalent to an "upsert" operation
                from database terminology. 
                This method can useful when seeding data using Migrations.
            </summary>
            <param name = "entities">The entities to add or update.</param>
            <remarks>
                When the <param name="set"/> parameter is a custom or fake IDbSet implementation, this method will
                attempt to locate and invoke a public, instance method with the same signature as this extension method.
            </remarks>
        </member>
        <member name="M:System.Data.Entity.Migrations.IDbSetExtensions.AddOrUpdate``1(System.Data.Entity.IDbSet{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},``0[])">
            <summary>
                Adds or updates entities by a custom identification expression when SaveChanges is called.
                Equivalent to an "upsert" operation from database terminology.
                This method can useful when seeding data using Migrations.
            </summary>
            <param name = "identifierExpression">
                An expression specifying the properties that should be used when determining
                whether an Add or Update operation should be performed.
            </param>
            <param name = "entities">The entities to add or update.</param>
            <remarks>
                When the <param name="set"/> parameter is a custom or fake IDbSet implementation, this method will
                attempt to locate and invoke a public, instance method with the same signature as this extension method.
            </remarks>
        </member>
        <member name="T:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator">
            <summary>
                Generates C# code for a code-based migration.
            </summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Design.MigrationCodeGenerator">
            <summary>
                Base class for providers that generate code for code-based migrations.
            </summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.MigrationCodeGenerator.Generate(System.String,System.Collections.Generic.IEnumerable{System.Data.Entity.Migrations.Model.MigrationOperation},System.String,System.String,System.String,System.String)">
            <summary>
                Generates the code that should be added to the users project.
            </summary>
            <param name = "migrationId">Unique identifier of the migration.</param>
            <param name = "operations">Operations to be performed by the migration.</param>
            <param name = "sourceModel">Source model to be stored in the migration metadata.</param>
            <param name = "targetModel">Target model to be stored in the migration metadata.</param>
            <param name = "namespace">Namespace that code should be generated in.</param>
            <param name = "className">Name of the class that should be generated.</param>
            <returns>The generated code.</returns>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.MigrationCodeGenerator.GetNamespaces(System.Collections.Generic.IEnumerable{System.Data.Entity.Migrations.Model.MigrationOperation})">
            <summary>
            Gets the namespaces that must be output as "using" or "Imports" directives to handle
            the code generated by the given operations.
            </summary>
            <param name="operations">The operations for which code is going to be generated.</param>
            <returns>An ordered list of namespace names.</returns>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.MigrationCodeGenerator.GetDefaultNamespaces(System.Boolean)">
            <summary>
            Gets the default namespaces that must be output as "using" or "Imports" directives for
            any code generated.
            </summary>
            <param name = "designer">A value indicating if this class is being generated for a code-behind file.</param>
            <returns>An ordered list of namespace names.</returns>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.String,System.Collections.Generic.IEnumerable{System.Data.Entity.Migrations.Model.MigrationOperation},System.String,System.String,System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Collections.Generic.IEnumerable{System.Data.Entity.Migrations.Model.MigrationOperation},System.String,System.String)">
            <summary>
                Generates the primary code file that the user can view and edit.
            </summary>
            <param name = "operations">Operations to be performed by the migration.</param>
            <param name = "namespace">Namespace that code should be generated in.</param>
            <param name = "className">Name of the class that should be generated.</param>
            <returns>The generated code.</returns>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.String,System.String,System.String,System.String,System.String)">
            <summary>
                Generates the code behind file with migration metadata.
            </summary>
            <param name = "migrationId">Unique identifier of the migration.</param>
            <param name = "sourceModel">Source model to be stored in the migration metadata.</param>
            <param name = "targetModel">Target model to be stored in the migration metadata.</param>
            <param name = "namespace">Namespace that code should be generated in.</param>
            <param name = "className">Name of the class that should be generated.</param>
            <returns>The generated code.</returns>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.WriteProperty(System.String,System.String,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
            <summary>
                Generates a property to return the source or target model in the code behind file.
            </summary>
            <param name = "name">Name of the property.</param>
            <param name = "value">Value to be returned.</param>
            <param name = "writer">Text writer to add the generated code to.</param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.WriteClassStart(System.String,System.String,System.Data.Entity.Migrations.Utilities.IndentedTextWriter,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
                Generates a namespace, using statements and class definition.
            </summary>
            <param name = "namespace">Namespace that code should be generated in.</param>
            <param name = "className">Name of the class that should be generated.</param>
            <param name = "writer">Text writer to add the generated code to.</param>
            <param name = "base">Base class for the generated class.</param>
            <param name = "designer">A value indicating if this class is being generated for a code-behind file.</param>
            <param name="namespaces">Namespaces for which using directives will be added. If null, then the namespaces returned from GetDefaultNamespaces will be used.</param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.WriteClassEnd(System.String,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
            <summary>
                Generates the closing code for a class that was started with WriteClassStart.
            </summary>
            <param name = "writer">Text writer to add the generated code to.</param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.AddColumnOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
            <summary>
                Generates code to perform an <see cref="T:System.Data.Entity.Migrations.Model.AddColumnOperation"/>.
            </summary>
            <param name="addColumnOperation">The operation to generate code for.</param>
            <param name="writer">Text writer to add the generated code to.</param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.DropColumnOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
            <summary>
                Generates code to perform a <see cref="T:System.Data.Entity.Migrations.Model.DropColumnOperation"/>.
            </summary>
            <param name="dropColumnOperation">The operation to generate code for.</param>
            <param name="writer">Text writer to add the generated code to.</param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.AlterColumnOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
            <summary>
                Generates code to perform an <see cref="T:System.Data.Entity.Migrations.Model.AlterColumnOperation"/>.
            </summary>
            <param name="alterColumnOperation">The operation to generate code for.</param>
            <param name="writer">Text writer to add the generated code to.</param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.CreateTableOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
            <summary>
                Generates code to perform a <see cref="T:System.Data.Entity.Migrations.Model.CreateTableOperation"/>.
            </summary>
            <param name="createTableOperation">The operation to generate code for.</param>
            <param name="writer">Text writer to add the generated code to.</param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.GenerateInline(System.Data.Entity.Migrations.Model.AddPrimaryKeyOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
            <summary>
                Generates code to perform an <see cref="T:System.Data.Entity.Migrations.Model.AddPrimaryKeyOperation"/> as part of a <see cref="T:System.Data.Entity.Migrations.Model.CreateTableOperation"/>.
            </summary>
            <param name="addPrimaryKeyOperation">The operation to generate code for.</param>
            <param name="writer">Text writer to add the generated code to.</param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.GenerateInline(System.Data.Entity.Migrations.Model.AddForeignKeyOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
            <summary>
                Generates code to perform an <see cref="T:System.Data.Entity.Migrations.Model.AddForeignKeyOperation"/> as part of a <see cref="T:System.Data.Entity.Migrations.Model.CreateTableOperation"/>.
            </summary>
            <param name="addForeignKeyOperation">The operation to generate code for.</param>
            <param name="writer">Text writer to add the generated code to.</param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.GenerateInline(System.Data.Entity.Migrations.Model.CreateIndexOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
            <summary>
                Generates code to perform a <see cref="T:System.Data.Entity.Migrations.Model.CreateIndexOperation"/> as part of a <see cref="T:System.Data.Entity.Migrations.Model.CreateTableOperation"/>.
            </summary>
            <param name="createIndexOperation">The operation to generate code for.</param>
            <param name="writer">Text writer to add the generated code to.</param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Collections.Generic.IEnumerable{System.String},System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
            <summary>
                Generates code to specify a set of column names using a lambda expression.
            </summary>
            <param name = "columns">The columns to generate code for.</param>
            <param name = "writer">Text writer to add the generated code to.</param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.AddPrimaryKeyOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
            <summary>
                Generates code to perform an <see cref="T:System.Data.Entity.Migrations.Model.AddPrimaryKeyOperation"/>.
            </summary>
            <param name="addPrimaryKeyOperation">The operation to generate code for.</param>
            <param name="writer">Text writer to add the generated code to.</param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.DropPrimaryKeyOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
            <summary>
                Generates code to perform a <see cref="T:System.Data.Entity.Migrations.Model.DropPrimaryKeyOperation"/>.
            </summary>
            <param name="dropPrimaryKeyOperation">The operation to generate code for.</param>
            <param name="writer">Text writer to add the generated code to.</param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.AddForeignKeyOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
            <summary>
                Generates code to perform an <see cref="T:System.Data.Entity.Migrations.Model.AddForeignKeyOperation"/>.
            </summary>
            <param name="addForeignKeyOperation">The operation to generate code for.</param>
            <param name="writer">Text writer to add the generated code to.</param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.DropForeignKeyOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
            <summary>
                Generates code to perform a <see cref="T:System.Data.Entity.Migrations.Model.DropForeignKeyOperation"/>.
            </summary>
            <param name="dropForeignKeyOperation">The operation to generate code for.</param>
            <param name="writer">Text writer to add the generated code to.</param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.CreateIndexOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
            <summary>
                Generates code to perform a <see cref="T:System.Data.Entity.Migrations.Model.CreateIndexOperation"/>.
            </summary>
            <param name="createIndexOperation">The operation to generate code for.</param>
            <param name="writer">Text writer to add the generated code to.</param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.DropIndexOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
            <summary>
                Generates code to perform a <see cref="T:System.Data.Entity.Migrations.Model.DropIndexOperation"/>.
            </summary>
            <param name="dropIndexOperation">The operation to generate code for.</param>
            <param name="writer">Text writer to add the generated code to.</param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.ColumnModel,System.Data.Entity.Migrations.Utilities.IndentedTextWriter,System.Boolean)">
            <summary>
                Generates code to specify the definition for a <see cref="T:System.Data.Entity.Migrations.Model.ColumnModel"/>.
            </summary>
            <param name="column">The column definition to generate code for.</param>
            <param name="writer">Text writer to add the generated code to.</param>
            <param name="emitName">A value indicating whether to include the column name in the definition.</param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Byte[])">
            <summary>
                Generates code to specify the default value for a <see cref = "T:byte[]" /> column.
            </summary>
            <param name = "defaultValue">The value to be used as the default.</param>
            <returns>Code representing the default value.</returns>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.DateTime)">
            <summary>
                Generates code to specify the default value for a <see cref="T:System.DateTime"/> column.
            </summary>
            <param name="defaultValue">The value to be used as the default.</param>
            <returns>Code representing the default value.</returns>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.DateTimeOffset)">
            <summary>
                Generates code to specify the default value for a <see cref="T:System.DateTimeOffset"/> column.
            </summary>
            <param name="defaultValue">The value to be used as the default.</param>
            <returns>Code representing the default value.</returns>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Byte)">
            <summary>
                Generates code to specify the default value for a <see cref="T:System.Byte"/> column.
            </summary>
            <param name="defaultValue">The value to be used as the default.</param>
            <returns>Code representing the default value.</returns>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Decimal)">
            <summary>
                Generates code to specify the default value for a <see cref="T:System.Decimal"/> column.
            </summary>
            <param name="defaultValue">The value to be used as the default.</param>
            <returns>Code representing the default value.</returns>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Guid)">
            <summary>
                Generates code to specify the default value for a <see cref="T:System.Guid"/> column.
            </summary>
            <param name="defaultValue">The value to be used as the default.</param>
            <returns>Code representing the default value.</returns>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Int64)">
            <summary>
                Generates code to specify the default value for a <see cref="T:System.Int64"/> column.
            </summary>
            <param name="defaultValue">The value to be used as the default.</param>
            <returns>Code representing the default value.</returns>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Single)">
            <summary>
                Generates code to specify the default value for a <see cref="T:System.Single"/> column.
            </summary>
            <param name="defaultValue">The value to be used as the default.</param>
            <returns>Code representing the default value.</returns>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.String)">
            <summary>
                Generates code to specify the default value for a <see cref="T:System.String"/> column.
            </summary>
            <param name="defaultValue">The value to be used as the default.</param>
            <returns>Code representing the default value.</returns>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.TimeSpan)">
            <summary>
                Generates code to specify the default value for a <see cref="T:System.TimeSpan"/> column.
            </summary>
            <param name="defaultValue">The value to be used as the default.</param>
            <returns>Code representing the default value.</returns>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Data.Spatial.DbGeography)">
            <summary>
                Generates code to specify the default value for a <see cref="T:System.Data.Spatial.DbGeography"/> column.
            </summary>
            <param name="defaultValue">The value to be used as the default.</param>
            <returns>Code representing the default value.</returns>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Data.Spatial.DbGeometry)">
            <summary>
                Generates code to specify the default value for a <see cref="T:System.Data.Spatial.DbGeometry"/> column.
            </summary>
            <param name="defaultValue">The value to be used as the default.</param>
            <returns>Code representing the default value.</returns>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Object)">
            <summary>
                Generates code to specify the default value for a column of unknown data type.
            </summary>
            <param name = "defaultValue">The value to be used as the default.</param>
            <returns>Code representing the default value.</returns>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.DropTableOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
            <summary>
                Generates code to perform a <see cref="T:System.Data.Entity.Migrations.Model.DropTableOperation"/>.
            </summary>
            <param name="dropTableOperation">The operation to generate code for.</param>
            <param name="writer">Text writer to add the generated code to.</param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.MoveTableOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
            <summary>
                Generates code to perform a <see cref="T:System.Data.Entity.Migrations.Model.MoveTableOperation"/>.
            </summary>
            <param name="moveTableOperation">The operation to generate code for.</param>
            <param name="writer">Text writer to add the generated code to.</param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.RenameTableOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
            <summary>
                Generates code to perform a <see cref="T:System.Data.Entity.Migrations.Model.RenameTableOperation"/>.
            </summary>
            <param name="renameTableOperation">The operation to generate code for.</param>
            <param name="writer">Text writer to add the generated code to.</param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.RenameColumnOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
            <summary>
                Generates code to perform a <see cref="T:System.Data.Entity.Migrations.Model.RenameColumnOperation"/>.
            </summary>
            <param name="renameColumnOperation">The operation to generate code for.</param>
            <param name="writer">Text writer to add the generated code to.</param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.SqlOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
            <summary>
                Generates code to perform a <see cref="T:System.Data.Entity.Migrations.Model.SqlOperation"/>.
            </summary>
            <param name="sqlOperation">The operation to generate code for.</param>
            <param name="writer">Text writer to add the generated code to.</param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.ScrubName(System.String)">
            <summary>
                Removes any invalid characters from the name of an database artifact.
            </summary>
            <param name = "name">The name to be scrubbed.</param>
            <returns>The scrubbed name.</returns>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.TranslateColumnType(System.Data.Metadata.Edm.PrimitiveTypeKind)">
            <summary>
                Gets the type name to use for a column of the given data type.
            </summary>
            <param name = "primitiveTypeKind">The data type to translate.</param>
            <returns>The type name to use in the generated migration.</returns>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.CSharpMigrationCodeGenerator.Quote(System.String)">
            <summary>
                Quotes an identifier using appropriate escaping to allow it to be stored in a string.
            </summary>
            <param name = "identifier">The identifier to be quoted.</param>
            <returns>The quoted identifier.</returns>
        </member>
        <member name="T:System.Data.Entity.Migrations.Design.MigrationScaffolder">
            <summary>
                Scaffolds code-based migrations to apply pending model changes to the database.
            </summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.MigrationScaffolder.#ctor(System.Data.Entity.Migrations.DbMigrationsConfiguration)">
            <summary>
                Initializes a new instance of the MigrationScaffolder class.
            </summary>
            <param name = "migrationsConfiguration">Configuration to be used for scaffolding.</param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.MigrationScaffolder.Scaffold(System.String)">
            <summary>
                Scaffolds a code based migration to apply any pending model changes to the database.
            </summary>
            <param name = "migrationName">The name to use for the scaffolded migration.</param>
            <returns>The scaffolded migration.</returns>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.MigrationScaffolder.Scaffold(System.String,System.Boolean)">
            <summary>
                Scaffolds a code based migration to apply any pending model changes to the database.
            </summary>
            <param name="migrationName">The name to use for the scaffolded migration.</param>
            <param name="ignoreChanges">Whether or not to include model changes.</param>
            <returns>The scaffolded migration.</returns>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.MigrationScaffolder.ScaffoldInitialCreate">
            <summary>
            Scaffolds the initial code-based migration corresponding to a previously run database initializer.
            </summary>
            <returns>The scaffolded migration.</returns>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.MigrationScaffolder.Namespace">
            <summary>
            Gets or sets the namespace used in the migration's generated code.
            
            By default, this is the same as MigrationsNamespace on the migrations
            configuration object passed into the constructor. For VB.NET projects, this
            will need to be updated to take into account the project's root namespace.
            </summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Design.ScaffoldedMigration">
            <summary>
                Represents a code-based migration that has been scaffolded and is ready to be written to a file.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.ScaffoldedMigration.MigrationId">
            <summary>
                Gets or sets the unique identifier for this migration.
                Typically used for the file name of the generated code.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.ScaffoldedMigration.UserCode">
            <summary>
                Gets or sets the scaffolded migration code that the user can edit.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.ScaffoldedMigration.DesignerCode">
            <summary>
                Gets or sets the scaffolded migration code that should be stored in a code behind file.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.ScaffoldedMigration.Language">
            <summary>
                Gets or sets the programming language used for this migration.
                Typically used for the file extension of the generated code.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.ScaffoldedMigration.Directory">
            <summary>
                Gets or sets the subdirectory in the user's project that this migration should be saved in.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.ScaffoldedMigration.Resources">
            <summary>
            Gets a dictionary of string resources to add to the migration resource file.
            </summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Design.ToolingException">
            <summary>
                Represents an exception that occurred while running an operation in another AppDomain in the <see cref="T:System.Data.Entity.Migrations.Design.ToolingFacade"/>.
            </summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.ToolingException.#ctor(System.String,System.String,System.String)">
            <summary>
                Initializes a new instance of the ToolingException class.
            </summary>
            <param name = "message">Error that explains the reason for the exception.</param>
            <param name = "innerType">The type of the exception that was thrown.</param>
            <param name = "innerStackTrace">The stack trace of the exception that was thrown.</param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.ToolingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc />
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.ToolingException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <inheritdoc />
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.ToolingException.InnerType">
            <summary>
                Gets the type of the exception that was thrown.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.ToolingException.InnerStackTrace">
            <summary>
                Gets the stack trace of the exception that was thrown.
            </summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Design.ToolingFacade">
            <summary>
                Helper class that is used by design time tools to run migrations related  
                commands that need to interact with an application that is being edited
                in Visual Studio.
            
                Because the application is being edited the assemblies need to
                be loaded in a separate AppDomain to ensure the latest version
                is always loaded.
            
                The App/Web.config file from the startup project is also copied
                to ensure that any configuration is applied.
            </summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.ToolingFacade.#ctor(System.String,System.String,System.String,System.String,System.String,System.Data.Entity.Infrastructure.DbConnectionInfo)">
            <summary>
                Initializes a new instance of the ToolingFacade class.
            </summary>
            <param name = "assemblyName">
                The name of the assembly that contains the migrations configuration to be used.
            </param>
            <param name = "configurationTypeName">
                The namespace qualified name of migrations configuration to be used.
            </param>
            <param name = "workingDirectory">
                The working directory containing the compiled assemblies.
            </param>
            <param name = "configurationFilePath">
                The path of the config file from the startup project.
            </param>
            <param name = "dataDirectory">
                The path of the application data directory from the startup project.
                Typically the App_Data directory for web applications or the working directory for executables.
            </param>
            <param name = "connectionStringInfo">
                The connection to the database to be migrated.
                If null is supplied, the default connection for the context will be used.
            </param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.ToolingFacade.Finalize">
            <summary>
                Releases all unmanaged resources used by the facade.
            </summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.ToolingFacade.GetContextTypes">
            <summary>
                Gets the fully qualified name of all types deriving from <see cref="T:System.Data.Entity.DbContext"/>.
            </summary>
            <returns>All context types found.</returns>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.ToolingFacade.GetContextType(System.String)">
            <summary>
            Gets the fully qualified name of a type deriving from <see cref="T:System.Data.Entity.DbContext"/>.
            </summary>
            <param name="contextTypeName">The name of the context type. If null, the single context type found in the assembly will be returned.</param>
            <returns>The context type found.</returns>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.ToolingFacade.GetDatabaseMigrations">
            <summary>
                Gets a list of all migrations that have been applied to the database.
            </summary>
            <returns>Ids of applied migrations.</returns>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.ToolingFacade.GetPendingMigrations">
            <summary>
                Gets a list of all migrations that have not been applied to the database.
            </summary>
            <returns>Ids of pending migrations.</returns>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.ToolingFacade.Update(System.String,System.Boolean)">
            <summary>
                Updates the database to the specified migration.
            </summary>
            <param name = "targetMigration">
                The Id of the migration to migrate to.
                If null is supplied, the database will be updated to the latest migration.
            </param>
            <param name = "force">Value indicating if data loss during automatic migration is acceptable.</param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.ToolingFacade.ScriptUpdate(System.String,System.String,System.Boolean)">
            <summary>
                Generates a SQL script to migrate between two migrations.
            </summary>
            <param name = "sourceMigration">
                The migration to update from. 
                If null is supplied, a script to update the current database will be produced.
            </param>
            <param name = "targetMigration">
                The migration to update to.
                If null is supplied, a script to update to the latest migration will be produced.
            </param>
            <param name = "force">Value indicating if data loss during automatic migration is acceptable.</param>
            <returns>The generated SQL script.</returns>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.ToolingFacade.Scaffold(System.String,System.String,System.String,System.Boolean)">
            <summary>
                Scaffolds a code-based migration to apply any pending model changes.
            </summary>
            <param name = "migrationName">The name for the generated migration.</param>
            <param name = "language">The programming language of the generated migration.</param>
            <param name = "rootNamespace">The root namespace of the project the migration will be added to.</param>
            <param name = "ignoreChanges">Whether or not to include model changes.</param>
            <returns>The scaffolded migration.</returns>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.ToolingFacade.ScaffoldInitialCreate(System.String,System.String)">
            <summary>
                Scaffolds the initial code-based migration corresponding to a previously run database initializer.
            </summary>
            <param name = "language">The programming language of the generated migration.</param>
            <param name = "rootNamespace">The root namespace of the project the migration will be added to.</param>
            <returns>The scaffolded migration.</returns>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.ToolingFacade.Dispose">
            <inheritdoc />
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.ToolingFacade.Dispose(System.Boolean)">
            <summary>
                Releases all resources used by the facade.
            </summary>
            <param name = "disposing">
                <c>true</c> to release both managed and unmanaged resources; <c>false</c> to release only unmanaged resources.
            </param>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.ToolingFacade.LogInfoDelegate">
            <summary>
                Gets or sets an action to be run to log information.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.ToolingFacade.LogWarningDelegate">
            <summary>
                Gets or sets an action to be run to log warnings.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Design.ToolingFacade.LogVerboseDelegate">
            <summary>
                Gets or sets an action to be run to log verbose information.
            </summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Infrastructure.MigrationsLogger">
            <summary>
                Base class for loggers that can be used for the migrations process.
            </summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.MigrationsLogger.Info(System.String)">
            <summary>
                Logs an informational message.
            </summary>
            <param name = "message">The message to be logged.</param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.MigrationsLogger.Warning(System.String)">
            <summary>
                Logs a warning that the user should be made aware of.
            </summary>
            <param name = "message">The message to be logged.</param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.MigrationsLogger.Verbose(System.String)">
            <summary>
                Logs some additional information that should only be presented to the user if they request verbose output.
            </summary>
            <param name = "message">The message to be logged.</param>
        </member>
        <member name="T:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator">
            <summary>
                Generates VB.Net code for a code-based migration.
            </summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.String,System.Collections.Generic.IEnumerable{System.Data.Entity.Migrations.Model.MigrationOperation},System.String,System.String,System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Collections.Generic.IEnumerable{System.Data.Entity.Migrations.Model.MigrationOperation},System.String,System.String)">
            <summary>
                Generates the primary code file that the user can view and edit.
            </summary>
            <param name = "operations">Operations to be performed by the migration.</param>
            <param name = "namespace">Namespace that code should be generated in.</param>
            <param name = "className">Name of the class that should be generated.</param>
            <returns>The generated code.</returns>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.String,System.String,System.String,System.String,System.String)">
            <summary>
                Generates the code behind file with migration metadata.
            </summary>
            <param name = "migrationId">Unique identifier of the migration.</param>
            <param name = "sourceModel">Source model to be stored in the migration metadata.</param>
            <param name = "targetModel">Target model to be stored in the migration metadata.</param>
            <param name = "namespace">Namespace that code should be generated in.</param>
            <param name = "className">Name of the class that should be generated.</param>
            <returns>The generated code.</returns>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.WriteProperty(System.String,System.String,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
            <summary>
                Generates a property to return the source or target model in the code behind file.
            </summary>
            <param name = "name">Name of the property.</param>
            <param name = "value">Value to be returned.</param>
            <param name = "writer">Text writer to add the generated code to.</param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.WriteClassStart(System.String,System.String,System.Data.Entity.Migrations.Utilities.IndentedTextWriter,System.String,System.Boolean,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
                Generates a namespace, using statements and class definition.
            </summary>
            <param name = "namespace">Namespace that code should be generated in.</param>
            <param name = "className">Name of the class that should be generated.</param>
            <param name = "writer">Text writer to add the generated code to.</param>
            <param name = "base">Base class for the generated class.</param>
            <param name = "designer">A value indicating if this class is being generated for a code-behind file.</param>
            <param name="namespaces">Namespaces for which Imports directives will be added. If null, then the namespaces returned from GetDefaultNamespaces will be used.</param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.WriteClassEnd(System.String,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
            <summary>
                Generates the closing code for a class that was started with WriteClassStart.
            </summary>
            <param name = "writer">Text writer to add the generated code to.</param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.AddColumnOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
            <summary>
                Generates code to perform an <see cref="T:System.Data.Entity.Migrations.Model.AddColumnOperation"/>.
            </summary>
            <param name="addColumnOperation">The operation to generate code for.</param>
            <param name="writer">Text writer to add the generated code to.</param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.DropColumnOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
            <summary>
                Generates code to perform a <see cref="T:System.Data.Entity.Migrations.Model.DropColumnOperation"/>.
            </summary>
            <param name="dropColumnOperation">The operation to generate code for.</param>
            <param name="writer">Text writer to add the generated code to.</param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.AlterColumnOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
            <summary>
                Generates code to perform an <see cref="T:System.Data.Entity.Migrations.Model.AlterColumnOperation"/>.
            </summary>
            <param name="alterColumnOperation">The operation to generate code for.</param>
            <param name="writer">Text writer to add the generated code to.</param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.CreateTableOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
            <summary>
                Generates code to perform a <see cref="T:System.Data.Entity.Migrations.Model.CreateTableOperation"/>.
            </summary>
            <param name="createTableOperation">The operation to generate code for.</param>
            <param name="writer">Text writer to add the generated code to.</param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.GenerateInline(System.Data.Entity.Migrations.Model.AddPrimaryKeyOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
            <summary>
                Generates code to perform an <see cref="T:System.Data.Entity.Migrations.Model.AddPrimaryKeyOperation"/> as part of a <see cref="T:System.Data.Entity.Migrations.Model.CreateTableOperation"/>.
            </summary>
            <param name="addPrimaryKeyOperation">The operation to generate code for.</param>
            <param name="writer">Text writer to add the generated code to.</param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.GenerateInline(System.Data.Entity.Migrations.Model.AddForeignKeyOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
            <summary>
                Generates code to perform an <see cref="T:System.Data.Entity.Migrations.Model.AddForeignKeyOperation"/> as part of a <see cref="T:System.Data.Entity.Migrations.Model.CreateTableOperation"/>.
            </summary>
            <param name="addForeignKeyOperation">The operation to generate code for.</param>
            <param name="writer">Text writer to add the generated code to.</param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.GenerateInline(System.Data.Entity.Migrations.Model.CreateIndexOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
            <summary>
                Generates code to perform a <see cref="T:System.Data.Entity.Migrations.Model.CreateIndexOperation"/> as part of a <see cref="T:System.Data.Entity.Migrations.Model.CreateTableOperation"/>.
            </summary>
            <param name="createIndexOperation">The operation to generate code for.</param>
            <param name="writer">Text writer to add the generated code to.</param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Collections.Generic.IEnumerable{System.String},System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
            <summary>
                Generates code to specify a set of column names using a lambda expression.
            </summary>
            <param name = "columns">The columns to generate code for.</param>
            <param name = "writer">Text writer to add the generated code to.</param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.AddForeignKeyOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
            <summary>
                Generates code to perform an <see cref="T:System.Data.Entity.Migrations.Model.AddForeignKeyOperation"/>.
            </summary>
            <param name="addForeignKeyOperation">The operation to generate code for.</param>
            <param name="writer">Text writer to add the generated code to.</param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.DropForeignKeyOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
            <summary>
                Generates code to perform a <see cref="T:System.Data.Entity.Migrations.Model.DropForeignKeyOperation"/>.
            </summary>
            <param name="dropForeignKeyOperation">The operation to generate code for.</param>
            <param name="writer">Text writer to add the generated code to.</param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.AddPrimaryKeyOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
            <summary>
                Generates code to perform an <see cref="T:System.Data.Entity.Migrations.Model.AddPrimaryKeyOperation"/>.
            </summary>
            <param name="addPrimaryKeyOperation">The operation to generate code for.</param>
            <param name="writer">Text writer to add the generated code to.</param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.DropPrimaryKeyOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
            <summary>
                Generates code to perform a <see cref="T:System.Data.Entity.Migrations.Model.DropPrimaryKeyOperation"/>.
            </summary>
            <param name="dropPrimaryKeyOperation">The operation to generate code for.</param>
            <param name="writer">Text writer to add the generated code to.</param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.CreateIndexOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
            <summary>
                Generates code to perform a <see cref="T:System.Data.Entity.Migrations.Model.CreateIndexOperation"/>.
            </summary>
            <param name="createIndexOperation">The operation to generate code for.</param>
            <param name="writer">Text writer to add the generated code to.</param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.DropIndexOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
            <summary>
                Generates code to perform a <see cref="T:System.Data.Entity.Migrations.Model.DropIndexOperation"/>.
            </summary>
            <param name="dropIndexOperation">The operation to generate code for.</param>
            <param name="writer">Text writer to add the generated code to.</param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.ColumnModel,System.Data.Entity.Migrations.Utilities.IndentedTextWriter,System.Boolean)">
            <summary>
                Generates code to specify the definition for a <see cref="T:System.Data.Entity.Migrations.Model.ColumnModel"/>.
            </summary>
            <param name="column">The column definition to generate code for.</param>
            <param name="writer">Text writer to add the generated code to.</param>
            <param name="emitName">A value indicating whether to include the column name in the definition.</param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Byte[])">
            <summary>
                Generates code to specify the default value for a <see cref = "T:byte[]" /> column.
            </summary>
            <param name = "defaultValue">The value to be used as the default.</param>
            <returns>Code representing the default value.</returns>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.DateTime)">
            <summary>
                Generates code to specify the default value for a <see cref="T:System.DateTime"/> column.
            </summary>
            <param name="defaultValue">The value to be used as the default.</param>
            <returns>Code representing the default value.</returns>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.DateTimeOffset)">
            <summary>
                Generates code to specify the default value for a <see cref="T:System.DateTimeOffset"/> column.
            </summary>
            <param name="defaultValue">The value to be used as the default.</param>
            <returns>Code representing the default value.</returns>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Byte)">
            <summary>
                Generates code to specify the default value for a <see cref="T:System.Byte"/> column.
            </summary>
            <param name="defaultValue">The value to be used as the default.</param>
            <returns>Code representing the default value.</returns>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Decimal)">
            <summary>
                Generates code to specify the default value for a <see cref="T:System.Decimal"/> column.
            </summary>
            <param name="defaultValue">The value to be used as the default.</param>
            <returns>Code representing the default value.</returns>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Guid)">
            <summary>
                Generates code to specify the default value for a <see cref="T:System.Guid"/> column.
            </summary>
            <param name="defaultValue">The value to be used as the default.</param>
            <returns>Code representing the default value.</returns>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Int64)">
            <summary>
                Generates code to specify the default value for a <see cref="T:System.Int64"/> column.
            </summary>
            <param name="defaultValue">The value to be used as the default.</param>
            <returns>Code representing the default value.</returns>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Single)">
            <summary>
                Generates code to specify the default value for a <see cref="T:System.Single"/> column.
            </summary>
            <param name="defaultValue">The value to be used as the default.</param>
            <returns>Code representing the default value.</returns>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.String)">
            <summary>
                Generates code to specify the default value for a <see cref="T:System.String"/> column.
            </summary>
            <param name="defaultValue">The value to be used as the default.</param>
            <returns>Code representing the default value.</returns>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.TimeSpan)">
            <summary>
                Generates code to specify the default value for a <see cref="T:System.TimeSpan"/> column.
            </summary>
            <param name="defaultValue">The value to be used as the default.</param>
            <returns>Code representing the default value.</returns>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Data.Spatial.DbGeography)">
            <summary>
                Generates code to specify the default value for a <see cref="T:System.Data.Spatial.DbGeography"/> column.
            </summary>
            <param name="defaultValue">The value to be used as the default.</param>
            <returns>Code representing the default value.</returns>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Data.Spatial.DbGeometry)">
            <summary>
                Generates code to specify the default value for a <see cref="T:System.Data.Spatial.DbGeometry"/> column.
            </summary>
            <param name="defaultValue">The value to be used as the default.</param>
            <returns>Code representing the default value.</returns>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Object)">
            <summary>
                Generates code to specify the default value for a column of unknown data type.
            </summary>
            <param name = "defaultValue">The value to be used as the default.</param>
            <returns>Code representing the default value.</returns>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.DropTableOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
            <summary>
                Generates code to perform a <see cref="T:System.Data.Entity.Migrations.Model.DropTableOperation"/>.
            </summary>
            <param name="dropTableOperation">The operation to generate code for.</param>
            <param name="writer">Text writer to add the generated code to.</param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.MoveTableOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
            <summary>
                Generates code to perform a <see cref="T:System.Data.Entity.Migrations.Model.MoveTableOperation"/>.
            </summary>
            <param name="moveTableOperation">The operation to generate code for.</param>
            <param name="writer">Text writer to add the generated code to.</param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.RenameTableOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
            <summary>
                Generates code to perform a <see cref="T:System.Data.Entity.Migrations.Model.RenameTableOperation"/>.
            </summary>
            <param name="renameTableOperation">The operation to generate code for.</param>
            <param name="writer">Text writer to add the generated code to.</param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.RenameColumnOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
            <summary>
                Generates code to perform a <see cref="T:System.Data.Entity.Migrations.Model.RenameColumnOperation"/>.
            </summary>
            <param name="renameColumnOperation">The operation to generate code for.</param>
            <param name="writer">Text writer to add the generated code to.</param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Generate(System.Data.Entity.Migrations.Model.SqlOperation,System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
            <summary>
                Generates code to perform a <see cref="T:System.Data.Entity.Migrations.Model.SqlOperation"/>.
            </summary>
            <param name="sqlOperation">The operation to generate code for.</param>
            <param name="writer">Text writer to add the generated code to.</param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.ScrubName(System.String)">
            <summary>
                Removes any invalid characters from the name of an database artifact.
            </summary>
            <param name = "name">The name to be scrubbed.</param>
            <returns>The scrubbed name.</returns>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.TranslateColumnType(System.Data.Metadata.Edm.PrimitiveTypeKind)">
            <summary>
                Gets the type name to use for a column of the given data type.
            </summary>
            <param name = "primitiveTypeKind">The data type to translate.</param>
            <returns>The type name to use in the generated migration.</returns>
        </member>
        <member name="M:System.Data.Entity.Migrations.Design.VisualBasicMigrationCodeGenerator.Quote(System.String)">
            <summary>
                Quotes an identifier using appropriate escaping to allow it to be stored in a string.
            </summary>
            <param name = "identifier">The identifier to be quoted.</param>
            <returns>The quoted identifier.</returns>
        </member>
        <member name="T:System.Data.Entity.Migrations.History.HistoryRow">
            <summary>
                This class is used by Code First Migrations to read and write migration history
                from the database. It is not intended to be used by other code and is only public
                so that it can be accessed by EF when running under partial trust. It may be
                changed or removed in the future.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.History.HistoryRow.MigrationId">
            <summary>
                Gets or sets the Id of the migration this row represents.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.History.HistoryRow.CreatedOn">
            <summary>
                Gets or sets the date and time that this migrations history entry was created.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.History.HistoryRow.Model">
            <summary>
                Gets or sets the state of the model after this migration was applied.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.History.HistoryRow.ProductVersion">
            <summary>
                Gets or sets the version of Entity Framework that created this entry.
            </summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.History.LegacyHistoryContext">
            <summary>
            This is a version of the HistoryContext that still includes CreatedOn in its model.
            It is used when figuring out whether or not the CreatedOn column exists and so should
            be dropped.
            </summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Infrastructure.AutomaticDataLossException">
            <summary>
                Represents an error that occurs when an automatic migration would result in data loss.
            </summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Infrastructure.MigrationsException">
            <summary>
            Represents errors that occur inside the Code First Migrations pipeline.
            </summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.MigrationsException.#ctor">
            <summary>
            Initializes a new instance of the MigrationsException class.
            </summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.MigrationsException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the MigrationsException class.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.MigrationsException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the MigrationsException class.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="innerException">The exception that is the cause of the current exception, or a null reference (Nothing in Visual Basic) if no inner exception is specified. </param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.MigrationsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the MigrationsException class with serialized data.
            </summary>
            <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
            <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.AutomaticDataLossException.#ctor(System.String)">
            <summary>
                Initializes a new instance of the AutomaticDataLossException class.
            </summary>
            <param name = "message">The message that describes the error.</param>
        </member>
        <member name="T:System.Data.Entity.Migrations.Infrastructure.AutomaticMigrationsDisabledException">
            <summary>
                Represents an error that occurs when there are pending model changes after applying the last migration and automatic migration is disabled.
            </summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.AutomaticMigrationsDisabledException.#ctor(System.String)">
            <summary>
                Initializes a new instance of the AutomaticMigrationsDisabledException class.
            </summary>
            <param name = "message">The message that describes the error.</param>
        </member>
        <member name="T:System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata">
            <summary>
                Provides additional metadata about a code-based migration.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.Id">
            <summary>
                Gets the unique identifier for the migration.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.Source">
            <summary>
                Gets the state of the model before this migration is run.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Infrastructure.IMigrationMetadata.Target">
            <summary>
                Gets the state of the model after this migration is run.
            </summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Infrastructure.MigratorLoggingDecorator">
            <summary>
                Decorator to provide logging during migrations operations..
            </summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.MigratorLoggingDecorator.#ctor(System.Data.Entity.Migrations.Infrastructure.MigratorBase,System.Data.Entity.Migrations.Infrastructure.MigrationsLogger)">
            <summary>
                Initializes a new instance of the MigratorLoggingDecorator class.
            </summary>
            <param name = "innerMigrator">The migrator that this decorator is wrapping.</param>
            <param name = "logger">The logger to write messages to.</param>
        </member>
        <member name="T:System.Data.Entity.Migrations.Infrastructure.MigratorScriptingDecorator">
            <summary>
                Decorator to produce a SQL script instead of applying changes to the database.
                Using this decorator to wrap <see cref="T:System.Data.Entity.Migrations.DbMigrator"/> will prevent <see cref="T:System.Data.Entity.Migrations.DbMigrator"/> 
                from applying any changes to the target database.
            </summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Infrastructure.MigratorScriptingDecorator.#ctor(System.Data.Entity.Migrations.Infrastructure.MigratorBase)">
            <summary>
                Initializes a new instance of the  MigratorScriptingDecorator class.
            </summary>
            <param name = "innerMigrator">The migrator that this decorator is wrapping.</param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:System.Data.Entity.Migrations.Infrastructure.MigratorScriptingDecorator.ScriptUpdate(System.String,System.String)" -->
        <member name="T:System.Data.Entity.Migrations.Model.AddColumnOperation">
            <summary>
                Represents a column being added to a table.
            </summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.MigrationOperation">
            <summary>
                Represents an operation to modify a database schema.
            </summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.MigrationOperation.#ctor(System.Object)">
            <summary>
                Initializes a new instance of the MigrationOperation class.
            </summary>
            <param name = "anonymousArguments">
             
                Use anonymous type syntax to specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
            </param>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.MigrationOperation.AnonymousArguments">
            <summary>
                Gets additional arguments that may be processed by providers.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.MigrationOperation.Inverse">
            <summary>
                Gets an operation that will revert this operation.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.MigrationOperation.IsDestructiveChange">
            <summary>
                Gets a value indicating if this operation may result in data loss.
            </summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.AddColumnOperation.#ctor(System.String,System.Data.Entity.Migrations.Model.ColumnModel,System.Object)">
            <summary>
                Initializes a new instance of the AddColumnOperation class.
            </summary>
            <param name = "table">The name of the table the column should be added to.</param>
            <param name = "column">Details of the column being added.</param>
            <param name = "anonymousArguments">
                Additional arguments that may be processed by providers. 
                Use anonymous type syntax to specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
            </param>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.AddColumnOperation.Table">
            <summary>
                Gets the name of the table the column should be added to.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.AddColumnOperation.Column">
            <summary>
                Gets the details of the column being added.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.AddColumnOperation.Inverse">
            <summary>
                Gets an operation that represents dropping the added column.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.AddColumnOperation.IsDestructiveChange">
            <inheritdoc />
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.AddForeignKeyOperation">
            <summary>
                Represents a foreign key constraint being added to a table.
            </summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.ForeignKeyOperation">
            <summary>
                Base class for changes that affect foreign key constraints.
            </summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.ForeignKeyOperation.#ctor(System.Object)">
            <summary>
                Initializes a new instance of the ForeignKeyOperation class.
            </summary>
            <param name = "anonymousArguments">
                Additional arguments that may be processed by providers. 
                Use anonymous type syntax to specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
            </param>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.ForeignKeyOperation.PrincipalTable">
            <summary>
                Gets or sets the name of the table that the foreign key constraint targets.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.ForeignKeyOperation.DependentTable">
            <summary>
                Gets or sets the name of the table that the foreign key columns exist in.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.ForeignKeyOperation.DependentColumns">
            <summary>
                The names of the foreign key column(s).
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.ForeignKeyOperation.HasDefaultName">
            <summary>
                Gets a value indicating if a specific name has been supplied for this foreign key constraint.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.ForeignKeyOperation.Name">
            <summary>
                Gets or sets the name of this foreign key constraint.
                If no name is supplied, a default name will be calculated.
            </summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.AddForeignKeyOperation.#ctor(System.Object)">
            <summary>
                Initializes a new instance of the AddForeignKeyOperation class.
                The PrincipalTable, PrincipalColumns, DependentTable and DependentColumns properties should also be populated.
            </summary>
            <param name = "anonymousArguments">
                Additional arguments that may be processed by providers. 
                Use anonymous type syntax to specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
            </param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.AddForeignKeyOperation.CreateCreateIndexOperation">
            <summary>
                Gets an operation to create an index on the foreign key column(s).
            </summary>
            <returns>An operation to add the index.</returns>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.AddForeignKeyOperation.PrincipalColumns">
            <summary>
                The names of the column(s) that the foreign key constraint should target.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.AddForeignKeyOperation.CascadeDelete">
            <summary>
                Gets or sets a value indicating if cascade delete should be configured on the foreign key constraint.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.AddForeignKeyOperation.Inverse">
            <summary>
                Gets an operation to drop the foreign key constraint.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.AddForeignKeyOperation.IsDestructiveChange">
            <inheritdoc />
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.AddPrimaryKeyOperation">
            <summary>
                Represents adding a primary key to a table.
            </summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.PrimaryKeyOperation">
            <summary>
                Common base class to represent operations affecting primary keys.
            </summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.PrimaryKeyOperation.#ctor(System.Object)">
            <summary>
                Initializes a new instance of the PrimaryKeyOperation class.
            </summary>
            <param name = "anonymousArguments">
                Additional arguments that may be processed by providers. 
                Use anonymous type syntax to specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
            </param>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.PrimaryKeyOperation.Table">
            <summary>
                Gets or sets the name of the table that contains the primary key.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.PrimaryKeyOperation.Columns">
            <summary>
                Gets the column(s) that make up the primary key.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.PrimaryKeyOperation.HasDefaultName">
            <summary>
                Gets a value indicating if a specific name has been supplied for this primary key.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.PrimaryKeyOperation.Name">
            <summary>
                Gets or sets the name of this primary key.
                If no name is supplied, a default name will be calculated.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.PrimaryKeyOperation.IsDestructiveChange">
            <inheritdoc />
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.AddPrimaryKeyOperation.#ctor(System.Object)">
            <summary>
                Initializes a new instance of the AddPrimaryKeyOperation class.
                The Table and Columns properties should also be populated.
            </summary>
            <param name = "anonymousArguments">
                Additional arguments that may be processed by providers. 
                Use anonymous type syntax to specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
            </param>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.AddPrimaryKeyOperation.Inverse">
            <summary>
                Gets an operation to drop the primary key.
            </summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.AlterColumnOperation">
            <summary>
                Represents altering an existing column.
            </summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.AlterColumnOperation.#ctor(System.String,System.Data.Entity.Migrations.Model.ColumnModel,System.Boolean,System.Object)">
            <summary>
                Initializes a new instance of the AlterColumnOperation class.
            </summary>
            <param name = "table">The name of the table that the column belongs to.</param>
            <param name = "column">Details of what the column should be altered to.</param>
            <param name = "isDestructiveChange">Value indicating if this change will result in data loss.</param>
            <param name = "anonymousArguments">
                Additional arguments that may be processed by providers. 
                Use anonymous type syntax to specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
            </param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.AlterColumnOperation.#ctor(System.String,System.Data.Entity.Migrations.Model.ColumnModel,System.Boolean,System.Data.Entity.Migrations.Model.AlterColumnOperation,System.Object)">
            <summary>
                Initializes a new instance of the AlterColumnOperation class.
            </summary>
            <param name = "table">The name of the table that the column belongs to.</param>
            <param name = "column">Details of what the column should be altered to.</param>
            <param name = "isDestructiveChange">Value indicating if this change will result in data loss.</param>
            <param name = "inverse">An operation to revert this alteration of the column.</param>
            <param name = "anonymousArguments">
                Additional arguments that may be processed by providers. 
                Use anonymous type syntax to specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
            </param>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.AlterColumnOperation.Table">
            <summary>
                Gets the name of the table that the column belongs to.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.AlterColumnOperation.Column">
            <summary>
                Gets the new definition for the column.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.AlterColumnOperation.Inverse">
            <summary>
                Gets an operation that represents reverting the alteration.
                The inverse cannot be automatically calculated, 
                if it was not supplied to the constructor this property will return null.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.AlterColumnOperation.IsDestructiveChange">
            <inheritdoc />
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.ColumnModel">
            <summary>
                Represents information about a column.
            </summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.ColumnModel.#ctor(System.Data.Metadata.Edm.PrimitiveTypeKind)">
            <summary>
                Initializes a new instance of the  class.
            </summary>
            <param name = "type">The data type for this column.</param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.ColumnModel.#ctor(System.Data.Metadata.Edm.PrimitiveTypeKind,System.Data.Metadata.Edm.TypeUsage)">
            <summary>
                Initializes a new instance of the  class.
            </summary>
            <param name = "type">The data type for this column.</param>
            <param name = "typeUsage">
                Additional details about the data type.
                This includes details such as maximum length, nullability etc.
            </param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.ColumnModel.IsNarrowerThan(System.Data.Entity.Migrations.Model.ColumnModel,System.Data.Common.DbProviderManifest)">
            <summary>
                Determines if this column is a narrower data type than another column.
                Used to determine if altering the supplied column definition to this definition will result in data loss.
            </summary>
            <param name = "column">The column to compare to.</param>
            <param name = "providerManifest">Details of the database provider being used.</param>
            <returns>True if this column is of a narrower data type.</returns>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.ColumnModel.Type">
            <summary>
                Gets the data type for this column.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.ColumnModel.ClrType">
            <summary>
                Gets the CLR type corresponding to the database type of this column.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.ColumnModel.ClrDefaultValue">
            <summary>
                Gets the default value for the CLR type corresponding to the database type of this column.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.ColumnModel.TypeUsage">
            <summary>
                Gets additional details about the data type of this column.
                This includes details such as maximum length, nullability etc.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.ColumnModel.Name">
            <summary>
                Gets or sets the name of the column.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.ColumnModel.StoreType">
            <summary>
                Gets or sets a provider specific data type to use for this column.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.ColumnModel.IsNullable">
            <summary>
                Gets or sets a value indicating if this column can store null values.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.ColumnModel.IsIdentity">
            <summary>
                Gets or sets a value indicating if values for this column will be generated by the database using the identity pattern.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.ColumnModel.MaxLength">
            <summary>
                Gets or sets the maximum length for this column.
                Only valid for array data types.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.ColumnModel.Precision">
            <summary>
                Gets or sets the precision for this column.
                Only valid for decimal data types.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.ColumnModel.Scale">
            <summary>
                Gets or sets the scale for this column.
                Only valid for decimal data types.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.ColumnModel.DefaultValue">
            <summary>
                Gets or sets a constant value to use as the default value for this column.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.ColumnModel.DefaultValueSql">
            <summary>
                Gets or sets a SQL expression used as the default value for this column.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.ColumnModel.IsFixedLength">
            <summary>
                Gets or sets a value indicating if this column is fixed length.
                Only valid for array data types.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.ColumnModel.IsUnicode">
            <summary>
                Gets or sets a value indicating if this column supports Unicode characters.
                Only valid for textual data types.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.ColumnModel.IsTimestamp">
            <summary>
                Gets or sets a value indicating if this column should be configured as a timestamp.
            </summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.CreateIndexOperation">
            <summary>
                Represents creating a database index.
            </summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.IndexOperation">
            <summary>
                Common base class for operations affecting indexes.
            </summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.IndexOperation.#ctor(System.Object)">
            <summary>
                Initializes a new instance of the IndexOperation class.
            </summary>
            <param name = "anonymousArguments">
                Additional arguments that may be processed by providers. 
                Use anonymous type syntax to specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
            </param>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.IndexOperation.Table">
            <summary>
                Gets or sets the table the index belongs to.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.IndexOperation.Columns">
            <summary>
                Gets or sets the columns that are indexed.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.IndexOperation.HasDefaultName">
            <summary>
                Gets a value indicating if a specific name has been supplied for this index.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.IndexOperation.Name">
            <summary>
                Gets or sets the name of this index.
                If no name is supplied, a default name will be calculated.
            </summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.CreateIndexOperation.#ctor(System.Object)">
            <summary>
                Initializes a new instance of the CreateIndexOperation class.
                The Table and Columns properties should also be populated.
            </summary>
            <param name = "anonymousArguments">
                Additional arguments that may be processed by providers. 
                Use anonymous type syntax to specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
            </param>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.CreateIndexOperation.IsUnique">
            <summary>
                Gets or sets a value indicating if this is a unique index.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.CreateIndexOperation.Inverse">
            <summary>
                Gets an operation to drop this index.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.CreateIndexOperation.IsDestructiveChange">
            <inheritdoc />
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.CreateTableOperation">
            <summary>
                Represents creating a table.
            </summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.CreateTableOperation.#ctor(System.String,System.Object)">
            <summary>
                Initializes a new instance of the CreateTableOperation class.
            </summary>
            <param name = "name">Name of the table to be created.</param>
            <param name = "anonymousArguments">
                Additional arguments that may be processed by providers. 
                Use anonymous type syntax to specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
            </param>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.CreateTableOperation.Name">
            <summary>
                Gets the name of the table to be created.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.CreateTableOperation.Columns">
            <summary>
                Gets the columns to be included in the new table.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.CreateTableOperation.PrimaryKey">
            <summary>
                Gets or sets the primary key for the new table.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.CreateTableOperation.Inverse">
            <summary>
                Gets an operation to drop the table.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.CreateTableOperation.IsDestructiveChange">
            <inheritdoc />
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.DeleteHistoryOperation">
            <summary>
                Represents deleting a new record from the migrations history table.
                The migrations history table is used to store a log of the migrations that have been applied to the database.
            </summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.HistoryOperation">
            <summary>
                Common base class for operations that affect the migrations history table.
                The migrations history table is used to store a log of the migrations that have been applied to the database.
            </summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.HistoryOperation.#ctor(System.String,System.String,System.Object)">
            <summary>
                Initializes a new instance of the HistoryOperation class.
            </summary>
            <param name = "table">Name of the migrations history table.</param>
            <param name = "migrationId">Name of the migration being affected.</param>
            <param name = "anonymousArguments">
                Additional arguments that may be processed by providers. 
                Use anonymous type syntax to specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
            </param>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.HistoryOperation.Table">
            <summary>
                Gets the name of the migrations history table.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.HistoryOperation.MigrationId">
            <summary>
                Gets the name of the migration being affected.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.HistoryOperation.IsDestructiveChange">
            <inheritdoc />
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.DeleteHistoryOperation.#ctor(System.String,System.String,System.Object)">
            <summary>
                Initializes a new instance of the DeleteHistoryOperation class.
            </summary>
            <param name = "table">Name of the migrations history table.</param>
            <param name = "migrationId">Id of the migration record to be deleted.</param>
            <param name = "anonymousArguments">
                Additional arguments that may be processed by providers. 
                Use anonymous type syntax to specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
            </param>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.DropColumnOperation">
            <summary>
                Represents a column being dropped from a table.
            </summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.DropColumnOperation.#ctor(System.String,System.String,System.Object)">
            <summary>
                Initializes a new instance of the DropColumnOperation class.
            </summary>
            <param name = "table">The name of the table the column should be dropped from.</param>
            <param name = "name">The name of the column to be dropped.</param>
            <param name = "anonymousArguments">
                Additional arguments that may be processed by providers. 
                Use anonymous type syntax to specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
            </param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.DropColumnOperation.#ctor(System.String,System.String,System.Data.Entity.Migrations.Model.AddColumnOperation,System.Object)">
            <summary>
                Initializes a new instance of the DropColumnOperation class.
            </summary>
            <param name = "table">The name of the table the column should be dropped from.</param>
            <param name = "name">The name of the column to be dropped.</param>
            <param name = "inverse">The operation that represents reverting the drop operation.</param>
            <param name = "anonymousArguments">
                Additional arguments that may be processed by providers. 
                Use anonymous type syntax to specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
            </param>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.DropColumnOperation.Table">
            <summary>
                Gets the name of the table the column should be dropped from.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.DropColumnOperation.Name">
            <summary>
                Gets the name of the column to be dropped.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.DropColumnOperation.Inverse">
            <summary>
                Gets an operation that represents reverting dropping the column.
                The inverse cannot be automatically calculated, 
                if it was not supplied to the constructor this property will return null.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.DropColumnOperation.IsDestructiveChange">
            <inheritdoc />
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.DropForeignKeyOperation">
            <summary>
                Represents a foreign key constraint being dropped from a table.
            </summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.DropForeignKeyOperation.#ctor(System.Object)">
            <summary>
                Initializes a new instance of the DropForeignKeyOperation class.
                The PrincipalTable, DependentTable and DependentColumns properties should also be populated.
            </summary>
            <param name = "anonymousArguments">
                Additional arguments that may be processed by providers. 
                Use anonymous type syntax to specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
            </param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.DropForeignKeyOperation.#ctor(System.Data.Entity.Migrations.Model.AddForeignKeyOperation,System.Object)">
            <summary>
                Initializes a new instance of the DropForeignKeyOperation class.
            </summary>
            <param name = "inverse">The operation that represents reverting dropping the foreign key constraint.</param>
            <param name = "anonymousArguments">
                Additional arguments that may be processed by providers. 
                Use anonymous type syntax to specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
            </param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.DropForeignKeyOperation.CreateDropIndexOperation">
            <summary>
                Gets an operation to drop the associated index on the foreign key column(s).
            </summary>
            <returns>An operation to drop the index.</returns>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.DropForeignKeyOperation.Inverse">
            <summary>
                Gets an operation that represents reverting dropping the foreign key constraint.
                The inverse cannot be automatically calculated, 
                if it was not supplied to the constructor this property will return null.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.DropForeignKeyOperation.IsDestructiveChange">
            <inheritdoc />
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.DropIndexOperation">
            <summary>
                Represents dropping an existing index.
            </summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.DropIndexOperation.#ctor(System.Object)">
            <summary>
                Initializes a new instance of the DropIndexOperation class.
            </summary>
            <param name = "anonymousArguments">
                Additional arguments that may be processed by providers. 
                Use anonymous type syntax to specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
            </param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.DropIndexOperation.#ctor(System.Data.Entity.Migrations.Model.CreateIndexOperation,System.Object)">
            <summary>
                Initializes a new instance of the DropIndexOperation class.
            </summary>
            <param name = "inverse">The operation that represents reverting dropping the index.</param>
            <param name = "anonymousArguments">
                Additional arguments that may be processed by providers. 
                Use anonymous type syntax to specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
            </param>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.DropIndexOperation.Inverse">
            <summary>
                Gets an operation that represents reverting dropping the index.
                The inverse cannot be automatically calculated, 
                if it was not supplied to the constructor this property will return null.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.DropIndexOperation.IsDestructiveChange">
            <inheritdoc />
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.DropPrimaryKeyOperation">
            <summary>
                Represents dropping a primary key from a table.
            </summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.DropPrimaryKeyOperation.#ctor(System.Object)">
            <summary>
                Initializes a new instance of the DropPrimaryKeyOperation class.
                The Table and Columns properties should also be populated.
            </summary>
            <param name = "anonymousArguments">
                Additional arguments that may be processed by providers. 
                Use anonymous type syntax to specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
            </param>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.DropPrimaryKeyOperation.Inverse">
            <summary>
                Gets an operation to add the primary key.
            </summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.DropTableOperation">
            <summary>
                Represents dropping an existing table.
            </summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.DropTableOperation.#ctor(System.String,System.Object)">
            <summary>
                Initializes a new instance of the DropTableOperation class.
            </summary>
            <param name = "name">The name of the table to be dropped.</param>
            <param name = "anonymousArguments">
                Additional arguments that may be processed by providers. 
                Use anonymous type syntax to specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
            </param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.DropTableOperation.#ctor(System.String,System.Data.Entity.Migrations.Model.CreateTableOperation,System.Object)">
            <summary>
                Initializes a new instance of the DropTableOperation class.
            </summary>
            <param name = "name">The name of the table to be dropped.</param>
            <param name = "inverse">An operation that represents reverting dropping the table.</param>
            <param name = "anonymousArguments">
                Additional arguments that may be processed by providers. 
                Use anonymous type syntax to specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
            </param>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.DropTableOperation.Name">
            <summary>
                Gets the name of the table to be dropped.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.DropTableOperation.Inverse">
            <summary>
                Gets an operation that represents reverting dropping the table.
                The inverse cannot be automatically calculated, 
                if it was not supplied to the constructor this property will return null.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.DropTableOperation.IsDestructiveChange">
            <inheritdoc />
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.InsertHistoryOperation">
            <summary>
                Represents inserting a new record into the migrations history table.
                The migrations history table is used to store a log of the migrations that have been applied to the database.
            </summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.InsertHistoryOperation.#ctor(System.String,System.String,System.Byte[],System.Object)">
            <summary>
                Initializes a new instance of the InsertHistoryOperation class.
            </summary>
            <param name = "table">Name of the migrations history table.</param>
            <param name = "migrationId">Id of the migration record to be inserted.</param>
            <param name = "model">Value to be stored in the model column.</param>
            <param name = "anonymousArguments">
                Additional arguments that may be processed by providers. 
                Use anonymous type syntax to specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
            </param>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.InsertHistoryOperation.Model">
            <summary>
                Gets the value to store in the history table representing the target model of the migration.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.InsertHistoryOperation.ProductVersion">
            <summary>
                Gets the value to store in the history table indicating the version of Entity Framework used to produce this migration.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.InsertHistoryOperation.IsDestructiveChange">
            <inheritdoc />
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.MoveTableOperation">
            <summary>
                Represents moving a table from one schema to another.
            </summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.MoveTableOperation.#ctor(System.String,System.String,System.Object)">
            <summary>
                Initializes a new instance of the MoveTableOperation class.
            </summary>
            <param name = "name">Name of the table to be moved.</param>
            <param name = "newSchema">Name of the schema to move the table to.</param>
            <param name = "anonymousArguments">
                Additional arguments that may be processed by providers. 
                Use anonymous type syntax to specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
            </param>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.MoveTableOperation.Name">
            <summary>
                Gets the name of the table to be moved.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.MoveTableOperation.NewSchema">
            <summary>
                Gets the name of the schema to move the table to.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.MoveTableOperation.Inverse">
            <summary>
                Gets an operation that moves the table back to its original schema.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.MoveTableOperation.IsDestructiveChange">
            <inheritdoc />
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.RenameColumnOperation">
            <summary>
                Represents renaming an existing column.
            </summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.RenameColumnOperation.#ctor(System.String,System.String,System.String,System.Object)">
            <summary>
                Initializes a new instance of the RenameColumnOperation class.
            </summary>
            <param name = "table">Name of the table the column belongs to.</param>
            <param name = "name">Name of the column to be renamed.</param>
            <param name = "newName">New name for the column.</param>
            <param name = "anonymousArguments">
                Additional arguments that may be processed by providers. 
                Use anonymous type syntax to specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
            </param>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.RenameColumnOperation.Table">
            <summary>
                Gets the name of the table the column belongs to.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.RenameColumnOperation.Name">
            <summary>
                Gets the name of the column to be renamed.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.RenameColumnOperation.NewName">
            <summary>
                Gets the new name for the column.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.RenameColumnOperation.Inverse">
            <summary>
                Gets an operation that reverts the rename.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.RenameColumnOperation.IsDestructiveChange">
            <inheritdoc />
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.RenameTableOperation">
            <summary>
                Represents renaming an existing table.
            </summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.RenameTableOperation.#ctor(System.String,System.String,System.Object)">
            <summary>
                Initializes a new instance of the RenameTableOperation class.
            </summary>
            <param name = "name">Name of the table to be renamed.</param>
            <param name = "newName">New name for the table.</param>
            <param name = "anonymousArguments">
                Additional arguments that may be processed by providers. 
                Use anonymous type syntax to specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
            </param>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.RenameTableOperation.Name">
            <summary>
                Gets the name of the table to be renamed.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.RenameTableOperation.NewName">
            <summary>
                Gets the new name for the table.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.RenameTableOperation.Inverse">
            <summary>
                Gets an operation that reverts the rename.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.RenameTableOperation.IsDestructiveChange">
            <inheritdoc />
        </member>
        <member name="T:System.Data.Entity.Migrations.Model.SqlOperation">
            <summary>
                Represents a provider specific SQL statement to be executed directly against the target database.
            </summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Model.SqlOperation.#ctor(System.String,System.Object)">
            <summary>
                Initializes a new instance of the SqlOperation class.
            </summary>
            <param name = "sql">The SQL to be executed.</param>
            <param name = "anonymousArguments">
                Additional arguments that may be processed by providers. 
                Use anonymous type syntax to specify arguments e.g. 'new { SampleArgument = "MyValue" }'.
            </param>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.SqlOperation.Sql">
            <summary>
                Gets the SQL to be executed.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.SqlOperation.SuppressTransaction">
            <summary>
                Gets or sets a value indicating whether this statement should be performed outside of
                the transaction scope that is used to make the migration process transactional.
                If set to true, this operation will not be rolled back if the migration process fails.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Model.SqlOperation.IsDestructiveChange">
            <inheritdoc />
        </member>
        <member name="T:System.Data.Entity.Migrations.Sql.MigrationSqlGenerator">
            <summary>
                Common base class for providers that convert provider agnostic migration 
                operations into database provider specific SQL commands.
            </summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Sql.MigrationSqlGenerator.Generate(System.Collections.Generic.IEnumerable{System.Data.Entity.Migrations.Model.MigrationOperation},System.String)">
            <summary>
                Converts a set of migration operations into database provider specific SQL.
            </summary>
            <param name = "migrationOperations">The operations to be converted.</param>
            <param name = "providerManifestToken">Token representing the version of the database being targeted.</param>
            <returns>A list of SQL statements to be executed to perform the migration operations.</returns>
        </member>
        <member name="T:System.Data.Entity.Migrations.Sql.MigrationStatement">
            <summary>
                Represents a migration operation that has been translated into a SQL statement.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Sql.MigrationStatement.Sql">
            <summary>
                Gets or sets the SQL to be executed to perform this migration operation.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Migrations.Sql.MigrationStatement.SuppressTransaction">
            <summary>
                Gets or sets a value indicating whether this statement should be performed outside of
                the transaction scope that is used to make the migration process transactional.
                If set to true, this operation will not be rolled back if the migration process fails.
            </summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Sql.SqlCeMigrationSqlGenerator">
            <summary>
                Provider to convert provider agnostic migration operations into SQL commands 
                that can be run against Microsoft SQL Server Compact Edition.
            </summary>
        </member>
        <member name="T:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator">
            <summary>
                Provider to convert provider agnostic migration operations into SQL commands 
                that can be run against a Microsoft SQL Server database.
            </summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.Collections.Generic.IEnumerable{System.Data.Entity.Migrations.Model.MigrationOperation},System.String)">
            <summary>
                Converts a set of migration operations into Microsoft SQL Server specific SQL.
            </summary>
            <param name = "migrationOperations">The operations to be converted.</param>
            <param name = "providerManifestToken">Token representing the version of SQL Server being targeted (i.e. "2005", "2008").</param>
            <returns>A list of SQL statements to be executed to perform the migration operations.</returns>
        </member>
        <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.CreateConnection">
            <summary>
                Creates an empty connection for the current provider.
                Allows derived providers to use connection other than <see cref="T:System.Data.SqlClient.SqlConnection"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.CreateTableOperation)">
            <summary>
                Generates SQL for a <see cref="T:System.Data.Entity.Migrations.Model.CreateTableOperation"/>.
                Generated SQL should be added using the Statement method.
            </summary>
            <param name="createTableOperation">The operation to produce SQL for.</param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.GenerateMakeSystemTable(System.Data.Entity.Migrations.Model.CreateTableOperation)">
            <summary>
                Generates SQL to mark a table as a system table.
                Generated SQL should be added using the Statement method.
            </summary>
            <param name = "createTableOperation">The table to mark as a system table.</param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.GenerateCreateSchema(System.String)">
            <summary>
                Generates SQL to create a database schema.
                Generated SQL should be added using the Statement method.
            </summary>
            <param name = "createTableOperation">The name of the schema to create.</param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.AddForeignKeyOperation)">
            <summary>
                Generates SQL for a <see cref="T:System.Data.Entity.Migrations.Model.AddForeignKeyOperation"/>.
                Generated SQL should be added using the Statement method.
            </summary>
            <param name="addForeignKeyOperation">The operation to produce SQL for.</param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.DropForeignKeyOperation)">
            <summary>
                Generates SQL for a <see cref="T:System.Data.Entity.Migrations.Model.DropForeignKeyOperation"/>.
                Generated SQL should be added using the Statement method.
            </summary>
            <param name="dropForeignKeyOperation">The operation to produce SQL for.</param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.CreateIndexOperation)">
            <summary>
                Generates SQL for a <see cref="T:System.Data.Entity.Migrations.Model.CreateIndexOperation"/>.
                Generated SQL should be added using the Statement method.
            </summary>
            <param name="createIndexOperation">The operation to produce SQL for.</param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.DropIndexOperation)">
            <summary>
                Generates SQL for a <see cref="T:System.Data.Entity.Migrations.Model.DropIndexOperation"/>.
                Generated SQL should be added using the Statement method.
            </summary>
            <param name="dropIndexOperation">The operation to produce SQL for.</param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.AddPrimaryKeyOperation)">
            <summary>
                Generates SQL for a <see cref="T:System.Data.Entity.Migrations.Model.AddPrimaryKeyOperation"/>.
                Generated SQL should be added using the Statement method.
            </summary>
            <param name="addPrimaryKeyOperation">The operation to produce SQL for.</param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.DropPrimaryKeyOperation)">
            <summary>
                Generates SQL for a <see cref="T:System.Data.Entity.Migrations.Model.DropPrimaryKeyOperation"/>.
                Generated SQL should be added using the Statement method.
            </summary>
            <param name="dropPrimaryKeyOperation">The operation to produce SQL for.</param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.AddColumnOperation)">
            <summary>
                Generates SQL for a <see cref="T:System.Data.Entity.Migrations.Model.AddColumnOperation"/>.
                Generated SQL should be added using the Statement method.
            </summary>
            <param name="addColumnOperation">The operation to produce SQL for.</param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.DropColumnOperation)">
            <summary>
                Generates SQL for a <see cref="T:System.Data.Entity.Migrations.Model.DropColumnOperation"/>.
                Generated SQL should be added using the Statement method.
            </summary>
            <param name="dropColumnOperation">The operation to produce SQL for.</param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.AlterColumnOperation)">
            <summary>
                Generates SQL for a <see cref="T:System.Data.Entity.Migrations.Model.AlterColumnOperation"/>.
                Generated SQL should be added using the Statement method.
            </summary>
            <param name="alterColumnOperation">The operation to produce SQL for.</param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.DropTableOperation)">
            <summary>
                Generates SQL for a <see cref="T:System.Data.Entity.Migrations.Model.DropTableOperation"/>.
                Generated SQL should be added using the Statement method.
            </summary>
            <param name="dropTableOperation">The operation to produce SQL for.</param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.SqlOperation)">
            <summary>
                Generates SQL for a <see cref="T:System.Data.Entity.Migrations.Model.SqlOperation"/>.
                Generated SQL should be added using the Statement method.
            </summary>
            <param name="sqlOperation">The operation to produce SQL for.</param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.RenameColumnOperation)">
            <summary>
                Generates SQL for a <see cref="T:System.Data.Entity.Migrations.Model.RenameColumnOperation"/>.
                Generated SQL should be added using the Statement method.
            </summary>
            <param name="renameColumnOperation">The operation to produce SQL for.</param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.RenameTableOperation)">
            <summary>
                Generates SQL for a <see cref="T:System.Data.Entity.Migrations.Model.RenameTableOperation"/>.
                Generated SQL should be added using the Statement method.
            </summary>
            <param name="renameTableOperation">The operation to produce SQL for.</param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.MoveTableOperation)">
            <summary>
                Generates SQL for a <see cref="T:System.Data.Entity.Migrations.Model.MoveTableOperation"/>.
                Generated SQL should be added using the Statement method.
            </summary>
            <param name="moveTableOperation">The operation to produce SQL for.</param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.InsertHistoryOperation)">
            <summary>
                Generates SQL for a <see cref="T:System.Data.Entity.Migrations.Model.InsertHistoryOperation"/>.
                Generated SQL should be added using the Statement method.
            </summary>
            <param name="insertHistoryOperation">The operation to produce SQL for.</param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.DeleteHistoryOperation)">
            <summary>
                Generates SQL for a <see cref="T:System.Data.Entity.Migrations.Model.DeleteHistoryOperation"/>.
                Generated SQL should be added using the Statement method.
            </summary>
            <param name="deleteHistoryOperation">The operation to produce SQL for.</param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.Byte[])">
            <summary>
                Generates SQL to specify a constant byte[] default value being set on a column.
                This method just generates the actual value, not the SQL to set the default value.
            </summary>
            <param name = "defaultValue">The value to be set.</param>
            <returns>SQL representing the default value.</returns>
        </member>
        <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.Boolean)">
            <summary>
                Generates SQL to specify a constant bool default value being set on a column.
                This method just generates the actual value, not the SQL to set the default value.
            </summary>
            <param name = "defaultValue">The value to be set.</param>
            <returns>SQL representing the default value.</returns>
        </member>
        <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.DateTime)">
            <summary>
                Generates SQL to specify a constant DateTime default value being set on a column.
                This method just generates the actual value, not the SQL to set the default value.
            </summary>
            <param name = "defaultValue">The value to be set.</param>
            <returns>SQL representing the default value.</returns>
        </member>
        <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.DateTimeOffset)">
            <summary>
                Generates SQL to specify a constant DateTimeOffset default value being set on a column.
                This method just generates the actual value, not the SQL to set the default value.
            </summary>
            <param name = "defaultValue">The value to be set.</param>
            <returns>SQL representing the default value.</returns>
        </member>
        <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.Guid)">
            <summary>
                Generates SQL to specify a constant Guid default value being set on a column.
                This method just generates the actual value, not the SQL to set the default value.
            </summary>
            <param name = "defaultValue">The value to be set.</param>
            <returns>SQL representing the default value.</returns>
        </member>
        <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.String)">
            <summary>
                Generates SQL to specify a constant string default value being set on a column.
                This method just generates the actual value, not the SQL to set the default value.
            </summary>
            <param name = "defaultValue">The value to be set.</param>
            <returns>SQL representing the default value.</returns>
        </member>
        <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.TimeSpan)">
            <summary>
                Generates SQL to specify a constant TimeSpan default value being set on a column.
                This method just generates the actual value, not the SQL to set the default value.
            </summary>
            <param name = "defaultValue">The value to be set.</param>
            <returns>SQL representing the default value.</returns>
        </member>
        <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.Data.Spatial.DbGeography)">
            <summary>
                Generates SQL to specify a constant geogrpahy default value being set on a column.
                This method just generates the actual value, not the SQL to set the default value.
            </summary>
            <param name = "defaultValue">The value to be set.</param>
            <returns>SQL representing the default value.</returns>
        </member>
        <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.Data.Spatial.DbGeometry)">
            <summary>
                Generates SQL to specify a constant geometry default value being set on a column.
                This method just generates the actual value, not the SQL to set the default value.
            </summary>
            <param name = "defaultValue">The value to be set.</param>
            <returns>SQL representing the default value.</returns>
        </member>
        <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Generate(System.Object)">
            <summary>
                Generates SQL to specify a constant default value being set on a column.
                This method just generates the actual value, not the SQL to set the default value.
            </summary>
            <param name = "defaultValue">The value to be set.</param>
            <returns>SQL representing the default value.</returns>
        </member>
        <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.BuildColumnType(System.Data.Entity.Migrations.Model.ColumnModel)">
            <summary>
                Generates SQL to specify the data type of a column.
                This method just generates the actual type, not the SQL to create the column.
            </summary>
            <param name = "defaultValue">The definition of the column.</param>
            <returns>SQL representing the data type.</returns>
        </member>
        <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Name(System.String)">
            <summary>
                Generates a quoted name. The supplied name may or may not contain the schema.
            </summary>
            <param name = "name">The name to be quoted.</param>
            <returns>The quoted name.</returns>
        </member>
        <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Quote(System.String)">
            <summary>
                Quotes an identifier for SQL Server.
            </summary>
            <param name = "identifier">The identifier to be quoted.</param>
            <returns>The quoted identifier.</returns>
        </member>
        <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Statement(System.String,System.Boolean)">
            <summary>
                Adds a new Statement to be executed against the database.
            </summary>
            <param name = "sql">The statement to be executed.</param>
            <param name = "suppressTransaction">
                Gets or sets a value indicating whether this statement should be performed outside of
                the transaction scope that is used to make the migration process transactional.
                If set to true, this operation will not be rolled back if the migration process fails.
            </param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Writer">
            <summary>
                Gets a new <see cref="T:System.Data.Entity.Migrations.Utilities.IndentedTextWriter"/> that can be used to build SQL.
            
                This is just a helper method to create a writer. Writing to the writer will
                not cause SQL to be registered for execution. You must pass the generated
                SQL to the Statement method.
            </summary>
            <returns>An empty text writer to use for SQL generation.</returns>
        </member>
        <member name="M:System.Data.Entity.Migrations.Sql.SqlServerMigrationSqlGenerator.Statement(System.Data.Entity.Migrations.Utilities.IndentedTextWriter)">
            <summary>
                Adds a new Statement to be executed against the database.
            </summary>
            <param name = "writer">The writer containing the SQL to be executed.</param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Sql.SqlCeMigrationSqlGenerator.CreateConnection">
            <inheritdoc />
        </member>
        <member name="M:System.Data.Entity.Migrations.Sql.SqlCeMigrationSqlGenerator.GenerateCreateSchema(System.String)">
            <inheritdoc />
        </member>
        <member name="M:System.Data.Entity.Migrations.Sql.SqlCeMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.RenameColumnOperation)">
            <inheritdoc />
        </member>
        <member name="M:System.Data.Entity.Migrations.Sql.SqlCeMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.RenameTableOperation)">
            <inheritdoc />
        </member>
        <member name="M:System.Data.Entity.Migrations.Sql.SqlCeMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.MoveTableOperation)">
            <inheritdoc />
        </member>
        <member name="M:System.Data.Entity.Migrations.Sql.SqlCeMigrationSqlGenerator.GenerateMakeSystemTable(System.Data.Entity.Migrations.Model.CreateTableOperation)">
            <inheritdoc />
        </member>
        <member name="M:System.Data.Entity.Migrations.Sql.SqlCeMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.DropColumnOperation)">
            <inheritdoc />
        </member>
        <member name="M:System.Data.Entity.Migrations.Sql.SqlCeMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.DropIndexOperation)">
            <inheritdoc />
        </member>
        <member name="M:System.Data.Entity.Migrations.Sql.SqlCeMigrationSqlGenerator.Generate(System.Data.Entity.Migrations.Model.AlterColumnOperation)">
            <inheritdoc />
        </member>
        <member name="M:System.Data.Entity.Migrations.Sql.SqlCeMigrationSqlGenerator.Generate(System.DateTime)">
            <inheritdoc />
        </member>
        <member name="M:System.Data.Entity.Migrations.Sql.SqlCeMigrationSqlGenerator.Name(System.String)">
            <inheritdoc />
        </member>
        <member name="T:System.Data.Entity.Migrations.Utilities.ConfigurationFileUpdater">
            <summary>
                Utility class to prep the user's config file to run in an AppDomain
            </summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Utilities.ConfigurationFileUpdater.Update(System.String)">
            <summary>
                Updates a config file by adding binding redirects for EntityFramework.dll.
                This ensures that the user's code can be ran in an AppDomain and the exact
                same version of the assembly will be used for both domains.
            </summary>
            <param name = "configurationFile">That path of the user's config file. Can also be null or a path to an non-existent file.</param>
            <returns>The path of the updated config file. It is the caller's responsibility to delete this.</returns>
        </member>
        <member name="T:System.Data.Entity.Migrations.Utilities.IndentedTextWriter">
            <summary>
                The same as <see cref="T:System.CodeDom.Compiler.IndentedTextWriter"/> but works in partial trust.
            </summary>
        </member>
        <member name="F:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.DefaultTabString">
            <summary>
                Specifies the default tab string. This field is constant.
            </summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.#ctor(System.IO.TextWriter)">
            <summary>
                Initializes a new instance of the IndentedTextWriter class using the specified text writer and default tab string.
            </summary>
            <param name = "writer">The <see cref = "T:System.IO.TextWriter" /> to use for output. </param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.#ctor(System.IO.TextWriter,System.String)">
            <summary>
                Initializes a new instance of the IndentedTextWriter class using the specified text writer and tab string.
            </summary>
            <param name = "writer">The <see cref = "T:System.IO.TextWriter" /> to use for output. </param>
            <param name = "tabString">The tab string to use for indentation. </param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.Close">
            <summary>
                Closes the document being written to.
            </summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.Flush">
            <summary>
                Flushes the stream.
            </summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.OutputTabs">
            <summary>
                Outputs the tab string once for each level of indentation according to the <see cref = "P:System.CodeDom.Compiler.IndentedTextWriter.Indent" /> property.
            </summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.Write(System.String)">
            <summary>
                Writes the specified string to the text stream.
            </summary>
            <param name = "s">The string to write. </param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.Write(System.Boolean)">
            <summary>
                Writes the text representation of a Boolean value to the text stream.
            </summary>
            <param name = "value">The Boolean value to write. </param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.Write(System.Char)">
            <summary>
                Writes a character to the text stream.
            </summary>
            <param name = "value">The character to write. </param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.Write(System.Char[])">
            <summary>
                Writes a character array to the text stream.
            </summary>
            <param name = "buffer">The character array to write. </param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.Write(System.Char[],System.Int32,System.Int32)">
            <summary>
                Writes a subarray of characters to the text stream.
            </summary>
            <param name = "buffer">The character array to write data from. </param>
            <param name = "index">Starting index in the buffer. </param>
            <param name = "count">The number of characters to write. </param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.Write(System.Double)">
            <summary>
                Writes the text representation of a Double to the text stream.
            </summary>
            <param name = "value">The double to write. </param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.Write(System.Single)">
            <summary>
                Writes the text representation of a Single to the text stream.
            </summary>
            <param name = "value">The single to write. </param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.Write(System.Int32)">
            <summary>
                Writes the text representation of an integer to the text stream.
            </summary>
            <param name = "value">The integer to write. </param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.Write(System.Int64)">
            <summary>
                Writes the text representation of an 8-byte integer to the text stream.
            </summary>
            <param name = "value">The 8-byte integer to write. </param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.Write(System.Object)">
            <summary>
                Writes the text representation of an object to the text stream.
            </summary>
            <param name = "value">The object to write. </param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.Write(System.String,System.Object)">
            <summary>
                Writes out a formatted string, using the same semantics as specified.
            </summary>
            <param name = "format">The formatting string. </param>
            <param name = "arg0">The object to write into the formatted string. </param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.Write(System.String,System.Object,System.Object)">
            <summary>
                Writes out a formatted string, using the same semantics as specified.
            </summary>
            <param name = "format">The formatting string to use. </param>
            <param name = "arg0">The first object to write into the formatted string. </param>
            <param name = "arg1">The second object to write into the formatted string. </param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.Write(System.String,System.Object[])">
            <summary>
                Writes out a formatted string, using the same semantics as specified.
            </summary>
            <param name = "format">The formatting string to use. </param>
            <param name = "arg">The argument array to output. </param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.WriteLineNoTabs(System.String)">
            <summary>
                Writes the specified string to a line without tabs.
            </summary>
            <param name = "s">The string to write. </param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.WriteLine(System.String)">
            <summary>
                Writes the specified string, followed by a line terminator, to the text stream.
            </summary>
            <param name = "s">The string to write. </param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.WriteLine">
            <summary>
                Writes a line terminator.
            </summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.WriteLine(System.Boolean)">
            <summary>
                Writes the text representation of a Boolean, followed by a line terminator, to the text stream.
            </summary>
            <param name = "value">The Boolean to write. </param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.WriteLine(System.Char)">
            <summary>
                Writes a character, followed by a line terminator, to the text stream.
            </summary>
            <param name = "value">The character to write. </param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.WriteLine(System.Char[])">
            <summary>
                Writes a character array, followed by a line terminator, to the text stream.
            </summary>
            <param name = "buffer">The character array to write. </param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
            <summary>
                Writes a subarray of characters, followed by a line terminator, to the text stream.
            </summary>
            <param name = "buffer">The character array to write data from. </param>
            <param name = "index">Starting index in the buffer. </param>
            <param name = "count">The number of characters to write. </param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.WriteLine(System.Double)">
            <summary>
                Writes the text representation of a Double, followed by a line terminator, to the text stream.
            </summary>
            <param name = "value">The double to write. </param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.WriteLine(System.Single)">
            <summary>
                Writes the text representation of a Single, followed by a line terminator, to the text stream.
            </summary>
            <param name = "value">The single to write. </param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.WriteLine(System.Int32)">
            <summary>
                Writes the text representation of an integer, followed by a line terminator, to the text stream.
            </summary>
            <param name = "value">The integer to write. </param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.WriteLine(System.Int64)">
            <summary>
                Writes the text representation of an 8-byte integer, followed by a line terminator, to the text stream.
            </summary>
            <param name = "value">The 8-byte integer to write. </param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.WriteLine(System.Object)">
            <summary>
                Writes the text representation of an object, followed by a line terminator, to the text stream.
            </summary>
            <param name = "value">The object to write. </param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.WriteLine(System.String,System.Object)">
            <summary>
                Writes out a formatted string, followed by a line terminator, using the same semantics as specified.
            </summary>
            <param name = "format">The formatting string. </param>
            <param name = "arg0">The object to write into the formatted string. </param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.WriteLine(System.String,System.Object,System.Object)">
            <summary>
                Writes out a formatted string, followed by a line terminator, using the same semantics as specified.
            </summary>
            <param name = "format">The formatting string to use. </param>
            <param name = "arg0">The first object to write into the formatted string. </param>
            <param name = "arg1">The second object to write into the formatted string. </param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.WriteLine(System.String,System.Object[])">
            <summary>
                Writes out a formatted string, followed by a line terminator, using the same semantics as specified.
            </summary>
            <param name = "format">The formatting string to use. </param>
            <param name = "arg">The argument array to output. </param>
        </member>
        <member name="M:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.WriteLine(System.UInt32)">
            <summary>
                Writes the text representation of a UInt32, followed by a line terminator, to the text stream.
            </summary>
            <param name = "value">A UInt32 to output. </param>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.Encoding">
            <summary>
                Gets the encoding for the text writer to use.
            </summary>
            <returns>
                An <see cref = "T:System.Text.Encoding" /> that indicates the encoding for the text writer to use.
            </returns>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.NewLine">
            <summary>
                Gets or sets the new line character to use.
            </summary>
            <returns>
                The new line character to use.
            </returns>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.Indent">
            <summary>
                Gets or sets the number of spaces to indent.
            </summary>
            <returns>
                The number of spaces to indent.
            </returns>
        </member>
        <member name="P:System.Data.Entity.Migrations.Utilities.IndentedTextWriter.InnerWriter">
            <summary>
                Gets the <see cref = "T:System.IO.TextWriter" /> to use.
            </summary>
            <returns>
                The <see cref = "T:System.IO.TextWriter" /> to use.
            </returns>
        </member>
        <member name="T:System.Data.Entity.Migrations.Utilities.UtcNowGenerator">
            <summary>
            Used for generating <see cref="P:System.DateTime.UtcNow"/> values that are always in sequential
            order for the calling thread.
            </summary>
        </member>
        <member name="M:System.Data.Entity.Migrations.Utilities.UtcNowGenerator.UtcNow">
            <summary>
            Returns the value of <see cref="P:System.DateTime.UtcNow"/> unless this value would be the same as the
            last value returned by this thread calling this method, in which case the thread pushes the value
            a little bit into the future. The comparison is in terms of the form used to store migration ID
            in the database--i.e. to the 1/10 second.
            </summary>
            <remarks>
            There should never be any pushing to the future involved for normal use of migrations, but when
            this method is called in rapid succession while testing or otherwise calling the DbMigrator APIs
            there may be occasional sleeping.
            </remarks>
        </member>
        <member name="M:System.Data.Entity.Migrations.Utilities.UtcNowGenerator.UtcNowAsMigrationIdTimestamp">
            <summary>
            Same as UtcNow method bur returns the time in the timestamp format used in migration IDs.
            </summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.ColumnOrderingConventionStrict">
            <summary>
                Convention to apply column ordering specified via <see cref="T:System.ComponentModel.DataAnnotations.ColumnAttribute"/> 
                or the <see cref="T:System.Data.Entity.DbModelBuilder"/> API. This convention throws if a duplicate configured column order
                is detected.
            </summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.ColumnOrderingConvention">
            <summary>
                Convention to apply column ordering specified via <see cref="T:System.ComponentModel.DataAnnotations.ColumnAttribute"/> 
                or the <see cref="T:System.Data.Entity.DbModelBuilder"/> API.
            </summary>
        </member>
        <member name="T:System.Data.Entity.ModelConfiguration.Conventions.IConvention">
            <summary>
                Identifies conventions that can be removed from a <see cref="T:System.Data.Entity.DbModelBuilder"/> instance.
            </summary>
            /// <remarks>
            Note that implementations of this interface must be immutable.
            </remarks>
        </member>
        <member name="T:System.Data.Entity.Resources.Strings">
            <summary>
               Strongly-typed and parameterized string resources.
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.LoggingAutoMigrate(System.Object)">
            <summary>
            A string like "Applying automatic migration: {0}."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.LoggingRevertAutoMigrate(System.Object)">
            <summary>
            A string like "Reverting automatic migration: {0}."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.LoggingApplyMigration(System.Object)">
            <summary>
            A string like "Applying code-based migration: {0}."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.LoggingRevertMigration(System.Object)">
            <summary>
            A string like "Reverting code-based migration: {0}."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.LoggingPendingMigrations(System.Object,System.Object)">
            <summary>
            A string like "Applying code-based migrations: [{1}]."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.LoggingPendingMigrationsDown(System.Object,System.Object)">
            <summary>
            A string like "Reverting migrations: [{1}]."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.LoggingAlreadyAtTarget(System.Object)">
            <summary>
            A string like "Target database is already at version {0}."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.LoggingTargetDatabase(System.Object)">
            <summary>
            A string like "Target database is: {0}."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.LoggingTargetDatabaseFormat(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            A string like "'{1}' (DataSource: {0}, Provider: {2}, Origin: {3})"
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.MigrationNotFound(System.Object)">
            <summary>
            A string like "The specified target migration '{0}' does not exist. Ensure that target migration refers to an existing migration id."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.PartialFkOperation(System.Object,System.Object)">
            <summary>
            A string like "The Foreign Key on table '{0}' with columns '{1}' could not be created because the principal key columns could not be determined. Use the AddForeignKey fluent API to fully specify the Foreign Key."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.AutoNotValidTarget(System.Object)">
            <summary>
            A string like "'{0}' is not a valid target migration. When targeting a previously applied automatic migration, use the full migration id including timestamp."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.AutoNotValidForScriptWindows(System.Object)">
            <summary>
            A string like "'{0}' is not a valid migration. Code-based migrations must be used for both source and target when scripting the upgrade between them."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.ContextNotConstructible(System.Object)">
            <summary>
            A string like "The target context '{0}' is not constructible. Add a default constructor or provide an implementation of IDbContextFactory."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.AmbiguousMigrationName(System.Object)">
            <summary>
            A string like "The specified migration name '{0}' is ambiguous. Specify the full migration id including timestamp instead."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.AssemblyMigrator_NoConfigurationWithName(System.Object,System.Object)">
            <summary>
            A string like "The migrations configuration type '{0}' was not be found in the assembly '{1}'."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.AssemblyMigrator_MultipleConfigurationsWithName(System.Object,System.Object)">
            <summary>
            A string like "More than one migrations configuration type '{0}' was found in the assembly '{1}'. Specify the fully qualified name of the one to use."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.AssemblyMigrator_NoConfiguration(System.Object)">
            <summary>
            A string like "No migrations configuration type was found in the assembly '{0}'. (In Visual Studio you can use the Enable-Migrations command from Package Manager Console to add a migrations configuration)."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.AssemblyMigrator_MultipleConfigurations(System.Object)">
            <summary>
            A string like "More than one migrations configuration type was found in the assembly '{0}'. Specify the name of the one to use."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.AssemblyMigrator_NonConfigurationType(System.Object)">
            <summary>
            A string like "The type '{0}' is not a migrations configuration type."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.AssemblyMigrator_NoDefaultConstructor(System.Object)">
            <summary>
            A string like "The migrations configuration type '{0}' must have a public default constructor."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.AssemblyMigrator_AbstractConfigurationType(System.Object)">
            <summary>
            A string like "The migrations configuration type '{0}' must not be abstract."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.AssemblyMigrator_GenericConfigurationType(System.Object)">
            <summary>
            A string like "The migrations configuration type '{0}' must not be generic."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.MigrationsNamespaceNotUnderRootNamespace(System.Object,System.Object)">
            <summary>
            A string like "In VB.NET projects, the migrations namespace '{0}' must be under the root namespace '{1}'. Update the migrations project's root namespace to allow classes under the migrations namespace to be added."
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:System.Data.Entity.Resources.Strings.UnableToDispatchAddOrUpdate(System.Object)" -->
        <member name="M:System.Data.Entity.Resources.Strings.NoSqlGeneratorForProvider(System.Object)">
            <summary>
            A string like "No MigrationSqlGenerator found for provider '{0}'. Use the SetSqlGenerator method in the target migrations configuration class to register additional SQL generators."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.ToolingFacade_AssemblyNotFound(System.Object)">
            <summary>
            A string like "Could not load assembly '{0}'. (If you are using Code First Migrations inside Visual Studio this can happen if the startUp project for your solution does not reference the project that contains your migrations. You can either change the startUp project for your solution or use the -StartUpProjectName parameter.)"
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.EnableMigrations_NoContext(System.Object)">
            <summary>
            A string like "No context type was found in the assembly '{0}'."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.EnableMigrations_MultipleContexts(System.Object)">
            <summary>
            A string like "More than one context type was found in the assembly '{0}'."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.EnableMigrationsForContext(System.Object)">
            <summary>
            A string like "To enable migrations for {0}, use Enable-Migrations -ContextTypeName {0}."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.EnableMigrations_NoContextWithName(System.Object,System.Object)">
            <summary>
            A string like "The context type '{0}' was not found in the assembly '{1}'."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.EnableMigrations_MultipleContextsWithName(System.Object,System.Object)">
            <summary>
            A string like "More than one context type '{0}' was found in the assembly '{1}'. Specify the fully qualified name of the context."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.ArgumentIsNullOrWhitespace(System.Object)">
            <summary>
            A string like "The argument '{0}' cannot be null, empty or contain only white space."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.ArgumentPropertyIsNull(System.Object)">
            <summary>
            A string like "The argument property '{0}' cannot be null."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.PreconditionFailed(System.Object,System.Object)">
            <summary>
            A string like "The precondition '{0}' failed. {1}"
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.EntityTypeConfigurationMismatch(System.Object)">
            <summary>
            A string like "The type '{0}' has already been configured as a complex type. It cannot be reconfigured as an entity type."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.ComplexTypeConfigurationMismatch(System.Object)">
            <summary>
            A string like "The type '{0}' has already been configured as an entity type. It cannot be reconfigured as a complex type."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.KeyPropertyNotFound(System.Object,System.Object)">
            <summary>
            A string like "The key component '{0}' is not a declared property on type '{1}'. Verify that it has not been explicitly excluded from the model and that it is a valid primitive property."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.ForeignKeyPropertyNotFound(System.Object,System.Object)">
            <summary>
            A string like "The foreign key component '{0}' is not a declared property on type '{1}'. Verify that it has not been explicitly excluded from the model and that it is a valid primitive property."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.PropertyNotFound(System.Object,System.Object)">
            <summary>
            A string like "The property '{0}' is not a declared property on type '{1}'. Verify that the property has not been explicitly excluded from the model by using the Ignore method or NotMappedAttribute data annotation. Make sure that it is a valid primitive property."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.NavigationPropertyNotFound(System.Object,System.Object)">
            <summary>
            A string like "The navigation property '{0}' is not a declared property on type '{1}'. Verify that it has not been explicitly excluded from the model and that it is a valid navigation property."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.InvalidPropertyExpression(System.Object)">
            <summary>
            A string like "The expression '{0}' is not a valid property expression. The expression should represent a property: C#: 't => t.MyProperty'  VB.Net: 'Function(t) t.MyProperty'."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.InvalidComplexPropertyExpression(System.Object)">
            <summary>
            A string like "The expression '{0}' is not a valid property expression. The expression should represent a property: C#: 't => t.MyProperty'  VB.Net: 'Function(t) t.MyProperty'. Use dotted paths for nested properties: C#: 't => t.MyProperty.MyProperty'  VB.Net: 'Function(t) t.MyProperty.MyProperty'."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.InvalidPropertiesExpression(System.Object)">
            <summary>
            A string like "The properties expression '{0}' is not valid. The expression should represent a property: C#: 't => t.MyProperty'  VB.Net: 'Function(t) t.MyProperty'. When specifying multiple properties use an anonymous type: C#: 't => new {{ t.MyProperty1, t.MyProperty2 }}'  VB.Net: 'Function(t) New With {{ t.MyProperty1, t.MyProperty2 }}'."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.InvalidComplexPropertiesExpression(System.Object)">
            <summary>
            A string like "The properties expression '{0}' is not valid. The expression should represent a property: C#: 't => t.MyProperty'  VB.Net: 'Function(t) t.MyProperty'. When specifying multiple properties use an anonymous type: C#: 't => new {{ t.MyProperty1, t.MyProperty2 }}'  VB.Net: 'Function(t) New With {{ t.MyProperty1, t.MyProperty2 }}'."
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:System.Data.Entity.Resources.Strings.DuplicateStructuralTypeConfiguration(System.Object)" -->
        <member name="M:System.Data.Entity.Resources.Strings.ConflictingPropertyConfiguration(System.Object,System.Object,System.Object)">
            <summary>
            A string like "Conflicting configuration settings were specified for property '{0}' on type '{1}': {2}"
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.ConflictingColumnConfiguration(System.Object,System.Object,System.Object)">
            <summary>
            A string like "Conflicting configuration settings were specified for column '{0}' on table '{1}': {2}"
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.ConflictingConfigurationValue(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            A string like "{0} = {1} conflicts with {2} = {3}"
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.InvalidComplexType(System.Object)">
            <summary>
            A string like "The type '{0}' was not mapped. Check that the type has not been explicitly excluded by using the Ignore method or NotMappedAttribute data annotation. Verify that the type was defined as a class, is not primitive, nested or generic, and does not inherit from ComplexObject."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.InvalidEntityType(System.Object)">
            <summary>
            A string like "The type '{0}' was not mapped. Check that the type has not been explicitly excluded by using the Ignore method or NotMappedAttribute data annotation. Verify that the type was defined as a class, is not primitive, nested or generic, and does not inherit from EntityObject."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.NavigationInverseItself(System.Object,System.Object)">
            <summary>
            A string like "The navigation property '{0}' declared on type '{1}' cannot be the inverse of itself."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.ConflictingConstraint(System.Object,System.Object)">
            <summary>
            A string like "The navigation property '{0}' declared on type '{1}' has been configured with conflicting foreign keys."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.ConflictingInferredColumnType(System.Object,System.Object,System.Object)">
            <summary>
            A string like "Values of incompatible types ('{1}' and '{2}') were assigned to the '{0}' discriminator column. Values of the same type must be specified. To explicitly specify the type of the discriminator column use the HasColumnType method."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.ConflictingMapping(System.Object,System.Object)">
            <summary>
            A string like "The navigation property '{0}' declared on type '{1}' has been configured with conflicting mapping information."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.ConflictingCascadeDeleteOperation(System.Object,System.Object)">
            <summary>
            A string like "The navigation property '{0}' declared on type '{1}' has been configured with conflicting cascade delete operations using 'WillCascadeOnDelete'."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.ConflictingMultiplicities(System.Object,System.Object)">
            <summary>
            A string like "The navigation property '{0}' declared on type '{1}' has been configured with conflicting multiplicities."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.MaxLengthAttributeConvention_InvalidMaxLength(System.Object,System.Object)">
            <summary>
            A string like "The MaxLengthAttribute on property '{0}' on type '{1} is not valid. The Length value must be greater than zero. Use MaxLength() without parameters to indicate that the string or array can have the maximum allowable length."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.StringLengthAttributeConvention_InvalidMaximumLength(System.Object,System.Object)">
            <summary>
            A string like "The StringLengthAttribute on property '{0}' on type '{1}' is not valid. The maximum length must be greater than zero. Use MaxLength() without parameters to indicate that the string or array can have the maximum allowable length."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.ModelGeneration_UnableToDetermineKeyOrder(System.Object)">
            <summary>
            A string like "Unable to determine composite primary key ordering for type '{0}'. Use the ColumnAttribute or the HasKey method to specify an order for composite primary keys."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.ForeignKeyAttributeConvention_EmptyKey(System.Object,System.Object)">
            <summary>
            A string like "The ForeignKeyAttribute on property '{0}' on type '{1}' is not valid. Name must not be empty."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.ForeignKeyAttributeConvention_InvalidKey(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            A string like "The ForeignKeyAttribute on property '{0}' on type '{1}' is not valid. The foreign key name '{2}' was not found on the dependent type '{3}'. The Name value should be a comma separated list of foreign key property names."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.ForeignKeyAttributeConvention_InvalidNavigationProperty(System.Object,System.Object,System.Object)">
            <summary>
            A string like "The ForeignKeyAttribute on property '{0}' on type '{1}' is not valid. The navigation property '{2}' was not found on the dependent type '{1}'. The Name value should be a valid navigation property name."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.ForeignKeyAttributeConvention_OrderRequired(System.Object)">
            <summary>
            A string like "Unable to determine a composite foreign key ordering for foreign key on type {0}. When using the ForeignKey data annotation on composite foreign key properties ensure order is specified by using the Column data annotation or the fluent API."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.InversePropertyAttributeConvention_PropertyNotFound(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            A string like "The InversePropertyAttribute on property '{2}' on type '{3}' is not valid. The property '{0}' is not a valid navigation property on the related type '{1}'. Ensure that the property exists and is a valid reference or collection navigation property."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.InversePropertyAttributeConvention_SelfInverseDetected(System.Object,System.Object)">
            <summary>
            A string like "A relationship cannot be established from property '{0}' on type '{1}' to property '{0}' on type '{1}'. Check the values in the InversePropertyAttribute to ensure relationship definitions are unique and reference from one navigation property to its corresponding inverse navigation property."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.ValidationItemFormat(System.Object,System.Object,System.Object)">
            <summary>
            A string like "\t{0}: {1}: {2}"
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.KeyRegisteredOnDerivedType(System.Object,System.Object)">
            <summary>
            A string like "A key is registered for the derived type '{0}'. Keys can only be registered for the root type '{1}'."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.DuplicateEntryInUserDictionary(System.Object,System.Object)">
            <summary>
            A string like "The {0} value '{1}' already exists in the user-defined dictionary."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.InvalidTableMapping(System.Object,System.Object)">
            <summary>
            A string like "The type '{0}' has already been mapped to table '{1}'. Specify all mapping aspects of a table in a single Map call."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.InvalidTableMapping_NoTableName(System.Object)">
            <summary>
            A string like "Map was called more than once for type '{0}' and at least one of the calls didn't specify the target table name."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.InvalidChainedMappingSyntax(System.Object)">
            <summary>
            A string like "The derived type '{0}' has already been mapped using the chaining syntax. A derived type can only be mapped once using the chaining syntax."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.InvalidNotNullCondition(System.Object,System.Object)">
            <summary>
            A string like "An "is not null" condition cannot be specified on property '{0}' on type '{1}' because this property is not included in the model. Check that the property has not been explicitly excluded from the model by using the Ignore method or NotMappedAttribute data annotation."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.InvalidDiscriminatorType(System.Object)">
            <summary>
            A string like "Values of type '{0}' cannot be used as type discriminator values. Supported types include byte, signed byte, bool, int16, int32, int64, and string."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.ConventionNotFound(System.Object,System.Object)">
            <summary>
            A string like "Unable to add the convention '{0}'. Could not find an existing convention of type '{1}' in the current convention set."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.InvalidEntitySplittingProperties(System.Object)">
            <summary>
            A string like "Not all properties for type '{0}' have been mapped. Either map those properties or explicitly excluded them from the model."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.ModelBuilder_ProviderNameNotFound(System.Object)">
            <summary>
            A string like "Unable to determine the provider name for connection of type '{0}'."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.ToTable_InvalidSchemaName(System.Object)">
            <summary>
            A string like "The qualified table name '{0}' contains an invalid schema name. Schema names must have a non-zero length."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.ToTable_InvalidTableName(System.Object)">
            <summary>
            A string like "The qualified table name '{0}' contains an invalid table name. Table names must have a non-zero length."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.EntityMappingConfiguration_DuplicateMapInheritedProperties(System.Object)">
            <summary>
            A string like "Properties for type '{0}' can only be mapped once. Ensure the MapInheritedProperties method is only used during one call to the Map method."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.EntityMappingConfiguration_DuplicateMappedProperties(System.Object)">
            <summary>
            A string like "Properties for type '{0}' can only be mapped once. Ensure the Properties method is used and that repeated calls specify each non-key property only once."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.EntityMappingConfiguration_DuplicateMappedProperty(System.Object,System.Object)">
            <summary>
            A string like "Properties for type '{0}' can only be mapped once. The non-key property '{1}' is mapped more than once. Ensure the Properties method specifies each non-key property only once."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.EntityMappingConfiguration_CannotMapIgnoredProperty(System.Object,System.Object)">
            <summary>
            A string like "The property '{1}' on type '{0}' cannot be mapped because it has been explicitly excluded from the model or it is of a type not supported by the DbModelBuilderVersion being used."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.EntityMappingConfiguration_InvalidTableSharing(System.Object,System.Object,System.Object)">
            <summary>
            A string like "The entity types '{0}' and '{1}' cannot share table '{2}' because they are not in the same type hierarchy or do not have a valid one to one foreign key relationship with matching primary keys between them."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.CannotIgnoreMappedBaseProperty(System.Object,System.Object,System.Object)">
            <summary>
            A string like "You cannot use Ignore method on the property '{0}' on type '{1}' because this type inherits from the type '{2}' where this property is mapped. To exclude this property from your model, use NotMappedAttribute or Ignore method on the base type."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.ModelBuilder_KeyPropertiesMustBePrimitive(System.Object,System.Object)">
            <summary>
            A string like "The property '{0}' cannot be used as a key property on the entity '{1}' because the property type is not a valid key type. Only scalar types, string and byte[] are supported key types."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.TableNotFound(System.Object)">
            <summary>
            A string like "The specified table '{0}' was not found in the model. Ensure that the table name has been correctly specified."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.IncorrectColumnCount(System.Object)">
            <summary>
            A string like "The specified association foreign key columns '{0}' are invalid. The number of columns specified must match the number of primary key columns."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.UnableToDeterminePrincipal(System.Object,System.Object)">
            <summary>
            A string like "Unable to determine the principal end of an association between the types '{0}' and '{1}'. The principal end of this association must be explicitly configured using either the relationship fluent API or data annotations."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.UnmappedAbstractType(System.Object)">
            <summary>
            A string like "The abstract type '{0}' has no mapped descendents and so cannot be mapped. Either remove '{0}' from the model or add one or more types deriving from '{0}' to the model. "
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.UnsupportedHybridInheritanceMapping(System.Object)">
            <summary>
            A string like "The type '{0}' cannot be mapped as defined because it maps inherited properties from types that use entity splitting or another form of inheritance. Either choose a different inheritance mapping strategy so as to not map inherited properties, or change all types in the hierarchy to map inherited properties and to not use splitting. "
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.OrphanedConfiguredTableDetected(System.Object)">
            <summary>
            A string like "The table '{0}' was configured but is not used in any mappings. Verify the mapping configuration for '{0}' is correct."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.DuplicateConfiguredColumnOrder(System.Object)">
            <summary>
            A string like "The configured column orders for the table '{0}' contains duplicates. Ensure the specified column order values are distinct."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.UnsupportedUseOfV3Type(System.Object,System.Object)">
            <summary>
            A string like "The enum or spatial property '{1}' on type '{0}' cannot be mapped. Use DbModelBuilderVersion 'V5_0' or later to map enum or spatial properties."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.MultiplePropertiesMatchedAsKeys(System.Object,System.Object)">
            <summary>
            A string like "Multiple potential primary key properties named '{0}' but differing only by case were found on entity type '{1}'. Configure the primary key explicitly using the HasKey fluent API or the KeyAttribute data annotation."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.DbPropertyEntry_CannotGetCurrentValue(System.Object,System.Object)">
            <summary>
            A string like "Cannot get value for property '{0}' from entity of type '{1}' because the property has no get accessor."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.DbPropertyEntry_CannotSetCurrentValue(System.Object,System.Object)">
            <summary>
            A string like "Cannot set value for property '{0}' on entity of type '{1}' because the property has no set accessor."
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:System.Data.Entity.Resources.Strings.DbPropertyEntry_NotSupportedForDetached(System.Object,System.Object,System.Object)" -->
        <member name="M:System.Data.Entity.Resources.Strings.DbPropertyEntry_SettingEntityRefNotSupported(System.Object,System.Object,System.Object)">
            <summary>
            A string like "Cannot set value for property '{0}' on entity of type '{1}' because the property has no set accessor and is in the '{2}' state."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.DbPropertyEntry_NotSupportedForPropertiesNotInTheModel(System.Object,System.Object,System.Object)">
            <summary>
            A string like "Member '{0}' cannot be called for property '{1}' on entity of type '{2}' because the property is not part of the Entity Data Model."
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:System.Data.Entity.Resources.Strings.DbEntityEntry_NotSupportedForDetached(System.Object,System.Object)" -->
        <member name="M:System.Data.Entity.Resources.Strings.DbSet_BadTypeForAddAttachRemove(System.Object,System.Object,System.Object)">
            <summary>
            A string like "Cannot call the {0} method for an entity of type '{1}' on a DbSet for entities of type '{2}'. Only entities of type '{2}' or derived from type '{2}' can be added, attached, or removed."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.DbSet_BadTypeForCreate(System.Object,System.Object)">
            <summary>
            A string like "Cannot call the Create method for the type '{0}' on a DbSet for entities of type '{1}'. Only entities of type '{1}' or derived from type '{1}' can be created."
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:System.Data.Entity.Resources.Strings.DbEntity_BadTypeForCast(System.Object,System.Object,System.Object)" -->
        <!-- Badly formed XML comment ignored for member "M:System.Data.Entity.Resources.Strings.DbMember_BadTypeForCast(System.Object,System.Object,System.Object,System.Object,System.Object)" -->
        <member name="M:System.Data.Entity.Resources.Strings.DbEntityEntry_UsedReferenceForCollectionProp(System.Object,System.Object)">
            <summary>
            A string like "The property '{0}' on type '{1}' is a collection navigation property. The Collection method should be used instead of the Reference method."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.DbEntityEntry_UsedCollectionForReferenceProp(System.Object,System.Object)">
            <summary>
            A string like "The property '{0}' on type '{1}' is a reference navigation property. The Reference method should be used instead of the Collection method."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.DbEntityEntry_NotANavigationProperty(System.Object,System.Object)">
            <summary>
            A string like "The property '{0}' on type '{1}' is not a navigation property. The Reference and Collection methods can only be used with navigation properties. Use the Property or ComplexProperty method."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.DbEntityEntry_NotAScalarProperty(System.Object,System.Object)">
            <summary>
            A string like "The property '{0}' on type '{1}' is not a primitive or complex property. The Property method can only be used with primitive or complex properties. Use the Reference or Collection method."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.DbEntityEntry_NotAComplexProperty(System.Object,System.Object)">
            <summary>
            A string like "The property '{0}' on type '{1}' is not a complex property. The ComplexProperty method can only be used with complex properties. Use the Property, Reference or Collection method."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.DbEntityEntry_NotAProperty(System.Object,System.Object)">
            <summary>
            A string like "The property '{0}' on type '{1}' is not a primitive property, complex property, collection navigation property, or reference navigation property."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.DbEntityEntry_DottedPartNotComplex(System.Object,System.Object,System.Object)">
            <summary>
            A string like ""The property '{0}' from the property path '{1}' is not a complex property on type '{2}'. Property paths must be composed of complex properties for all except the final property.""
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.DbEntityEntry_DottedPathMustBeProperty(System.Object)">
            <summary>
            A string like ""The property path '{0}' cannot be used for navigation properties. Property paths can only be used to access primitive or complex properties.""
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.DbEntityEntry_WrongGenericForNavProp(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            A string like "The navigation property '{0}' on entity type '{1}' cannot be used for entities of type '{2}' because it refers to entities of type '{3}'."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.DbEntityEntry_WrongGenericForCollectionNavProp(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            A string like "The generic type argument '{0}' cannot be used with the Member method when accessing the collection navigation property '{1}' on entity type '{2}'. The generic type argument '{3}' must be used instead."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.DbEntityEntry_WrongGenericForProp(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            A string like "The property '{0}' on entity type '{1}' cannot be used for objects of type '{2}' because it is a property for objects of type '{3}'."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.DbEntityEntry_BadPropertyExpression(System.Object,System.Object)">
            <summary>
            A string like "The expression passed to method {0} must represent a property defined on the type '{1}'."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.DbPropertyValues_CannotGetValuesForState(System.Object,System.Object)">
            <summary>
            A string like "{0} cannot be used for entities in the {1} state."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.DbPropertyValues_CannotSetNullValue(System.Object,System.Object,System.Object)">
            <summary>
            A string like "Cannot set non-nullable property '{0}' of type '{1}' to null on object of type '{2}'."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.DbPropertyValues_CannotGetStoreValuesWhenComplexPropertyIsNull(System.Object,System.Object)">
            <summary>
            A string like "The property '{0}' in the entity of type '{1}' is null. Store values cannot be obtained for an entity with a null complex property."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.DbPropertyValues_WrongTypeForAssignment(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            A string like "Cannot assign value of type '{0}' to property '{1}' of type '{2}' in property values for type '{3}'."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.DbPropertyValues_PropertyDoesNotExist(System.Object,System.Object)">
            <summary>
            A string like "The '{0}' property does not exist or is not mapped for the type '{1}'."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.DbPropertyValues_AttemptToSetValuesFromWrongObject(System.Object,System.Object)">
            <summary>
            A string like "Cannot copy values from DbPropertyValues for type '{0}' into DbPropertyValues for type '{1}'."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.DbPropertyValues_AttemptToSetValuesFromWrongType(System.Object,System.Object)">
            <summary>
            A string like "Cannot copy from property values for object of type '{0}' into property values for object of type '{1}'."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.DbPropertyValues_ComplexObjectCannotBeNull(System.Object,System.Object)">
            <summary>
            A string like "The value of the complex property '{0}' on entity of type '{1}' is null. Complex properties cannot be set to null and values cannot be set for null complex properties."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.DbPropertyValues_NestedPropertyValuesNull(System.Object,System.Object)">
            <summary>
            A string like "The value of the nested property values property '{0}' on the values for entity of type '{1}' is null. Nested property values cannot be set to null and values cannot be set for null complex properties."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.DbPropertyValues_CannotSetPropertyOnNullCurrentValue(System.Object,System.Object)">
            <summary>
            A string like "Cannot set the value of the nested property '{0}' because value of the complex property '{1}' to which it belongs is null."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.DbPropertyValues_CannotSetPropertyOnNullOriginalValue(System.Object,System.Object)">
            <summary>
            A string like "Cannot set the original value of the nested property '{0}' because the original value of the complex property '{1}' to which it belongs is null."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.DatabaseInitializationStrategy_ModelMismatch(System.Object)">
            <summary>
            A string like "The model backing the '{0}' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269)."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.Database_DatabaseAlreadyExists(System.Object)">
            <summary>
            A string like "Database '{0}' cannot be created because it already exists."
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:System.Data.Entity.Resources.Strings.Database_BadLegacyInitializerEntry(System.Object,System.Object)" -->
        <!-- Badly formed XML comment ignored for member "M:System.Data.Entity.Resources.Strings.Database_InitializeFromLegacyConfigFailed(System.Object,System.Object)" -->
        <member name="M:System.Data.Entity.Resources.Strings.Database_InitializeFromConfigFailed(System.Object,System.Object)">
            <summary>
            A string like "Failed to set database initializer of type '{0}' for DbContext type '{1}' specified in the application configuration. See inner exception for details."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.ContextConfiguredMultipleTimes(System.Object)">
            <summary>
            A string like "Configuration for DbContext type '{0}' is specified multiple times in the application configuration. Each context can only be configured once."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.SetConnectionFactoryFromConfigFailed(System.Object)">
            <summary>
            A string like "Failed to set Database.DefaultConnectionFactory to an instance of the '{0}' type as specified in the application configuration. See inner exception for details."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.Database_FailedToResolveType(System.Object)">
            <summary>
            A string like "The type '{0}' could not be found. The type name must be an assembly-qualified name."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.DbContext_ProviderNameMissing(System.Object)">
            <summary>
            A string like "The connection string '{0}' in the application's configuration file does not contain the required providerName attribute.""
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.DbSet_WrongEntityTypeFound(System.Object,System.Object)">
            <summary>
            A string like "The entity found was of type {0} when an entity of type {1} was requested."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.DbSet_DbSetUsedWithComplexType(System.Object)">
            <summary>
            A string like "The type '{0}' is mapped as a complex type. The Set method, DbSet objects, and DbEntityEntry objects can only be used with entity types, not complex types."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.DbSet_PocoAndNonPocoMixedInSameAssembly(System.Object)">
            <summary>
            A string like "The type '{0}' is not attributed with EdmEntityTypeAttribute but is contained in an assembly attributed with EdmSchemaAttribute. POCO entities that do not use EdmEntityTypeAttribute cannot be contained in the same assembly as non-POCO entities that use EdmEntityTypeAttribute."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.DbSet_EntityTypeNotInModel(System.Object)">
            <summary>
            A string like "The entity type {0} is not part of the model for the current context."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.DbContext_ConnectionStringNotFound(System.Object)">
            <summary>
            A string like "No connection string named '{0}' could be found in the application config file."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.DbCollectionEntry_CannotSetCollectionProp(System.Object,System.Object)">
            <summary>
            A string like "The collection navigation property '{0}' on the entity of type '{1}' cannot be set because the entity type does not define a navigation property with a set accessor."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.Mapping_MESTNotSupported(System.Object,System.Object,System.Object)">
            <summary>
            A string like "Multiple object sets per type are not supported. The object sets '{0}' and '{1}' can both contain instances of type '{2}'."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.DbModelBuilder_MissingRequiredCtor(System.Object)">
            <summary>
            A string like "The context type '{0}' must have a public constructor taking an EntityConnection."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.DbUnexpectedValidationException_ValidationAttribute(System.Object,System.Object)">
            <summary>
            A string like "An unexpected exception was thrown during validation of '{0}' when invoking {1}.IsValid. See the inner exception for details."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.DbUnexpectedValidationException_IValidatableObject(System.Object,System.Object)">
            <summary>
            A string like "An unexpected exception was thrown during validation of '{0}' when invoking {1}.Validate. See the inner exception for details."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.SqlConnectionFactory_MdfNotSupported(System.Object)">
            <summary>
            A string like "The database name '{0}' is not supported because it is an MDF file name. A full connection string must be provided to attach an MDF file."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.DbContextServices_MissingDefaultCtor(System.Object)">
            <summary>
            A string like "The context factory type '{0}' must have a public default constructor."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.EdmPrimitiveType_SetPropertyNotSupported(System.Object)">
            <summary>
            A string like "The '{0}' property of EdmPrimitiveType is fixed and cannot be set."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.EdmModel_Validator_Semantic_SystemNamespaceEncountered(System.Object)">
            <summary>
            A string like "The namespace '{0}' is a system namespace and cannot be used by other schemas. Choose another namespace name."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.EdmModel_Validator_Semantic_SimilarRelationshipEnd(System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            A string like "Role '{0}' in AssociationSets '{1}' and '{2}' refers to the same EntitySet '{3}' in EntityContainer '{4}'. Make sure that if two or more AssociationSets refer to the same AssociationType, the ends do not refer to the same EntitySet."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.EdmModel_Validator_Semantic_InvalidEntitySetNameReference(System.Object,System.Object)">
            <summary>
            A string like "The referenced EntitySet '{0}' for End '{1}' could not be found in the containing EntityContainer."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.EdmModel_Validator_Semantic_ConcurrencyRedefinedOnSubTypeOfEntitySetType(System.Object,System.Object,System.Object)">
            <summary>
            A string like "Type '{0}' is derived from type '{1}' that is the type for EntitySet '{2}'. Type '{0}' defines new concurrency requirements that are not allowed for subtypes of base EntitySet types."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.EdmModel_Validator_Semantic_EntitySetTypeHasNoKeys(System.Object,System.Object)">
            <summary>
            A string like "EntitySet '{0}' is based on type '{1}' that has no keys defined."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.EdmModel_Validator_Semantic_DuplicateEndName(System.Object)">
            <summary>
            A string like "The end name  '{0}' is already defined."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.EdmModel_Validator_Semantic_DuplicatePropertyNameSpecifiedInEntityKey(System.Object,System.Object)">
            <summary>
            A string like "The key specified in EntityType '{0}' is not valid. Property '{1}' is referenced more than once in the Key element."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.EdmModel_Validator_Semantic_InvalidCollectionKindNotCollection(System.Object)">
            <summary>
            A string like "Property '{0}' has a CollectionKind specified but is not a collection property."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.EdmModel_Validator_Semantic_InvalidCollectionKindNotV1_1(System.Object)">
            <summary>
            A string like "Property '{0}' has a CollectionKind specified. CollectionKind is only supported in version 1.1 EDM models."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.EdmModel_Validator_Semantic_InvalidComplexTypeAbstract(System.Object)">
            <summary>
            A string like "ComplexType '{0}' is marked as abstract. Abstract ComplexTypes are only supported in version 1.1 EDM models."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.EdmModel_Validator_Semantic_InvalidComplexTypePolymorphic(System.Object)">
            <summary>
            A string like "ComplexType '{0}' has a BaseType specified. ComplexType inheritance is only supported in version 1.1 EDM models."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.EdmModel_Validator_Semantic_InvalidKeyNullablePart(System.Object,System.Object)">
            <summary>
            A string like "Key part '{0}' for type '{1}' is not valid. All parts of the key must be non-nullable."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.EdmModel_Validator_Semantic_EntityKeyMustBeScalar(System.Object,System.Object)">
            <summary>
            A string like "The property '{0}' in EntityType '{1}' is not valid. All properties that are part of the EntityKey must be of PrimitiveType."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.EdmModel_Validator_Semantic_InvalidKeyKeyDefinedInBaseClass(System.Object,System.Object)">
            <summary>
            A string like "Key usage is not valid. The {0} class  cannot define keys because one of its base classes ('{1}') defines keys."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.EdmModel_Validator_Semantic_KeyMissingOnEntityType(System.Object)">
            <summary>
            A string like "EntityType '{0}' has no key defined. Define the key for this EntityType."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.EdmModel_Validator_Semantic_BadNavigationPropertyUndefinedRole(System.Object,System.Object,System.Object)">
            <summary>
            A string like "NavigationProperty is not valid. Role '{0}' or Role '{1}' is not defined in Relationship '{2}'."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.EdmModel_Validator_Semantic_EndWithManyMultiplicityCannotHaveOperationsSpecified(System.Object,System.Object)">
            <summary>
            A string like "End '{0}' on relationship '{1}' cannot have an operation specified because its multiplicity is '*'. Operations cannot be specified on ends with multiplicity '*'."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.EdmModel_Validator_Semantic_EndNameAlreadyDefinedDuplicate(System.Object)">
            <summary>
            A string like "Each Name and PluralName in a relationship must be unique. '{0}' is already defined."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.EdmModel_Validator_Semantic_SameRoleReferredInReferentialConstraint(System.Object)">
            <summary>
            A string like "In relationship '{0}', the Principal and Dependent Role of the referential constraint refer to the same Role in the relationship type."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.EdmModel_Validator_Semantic_InvalidMultiplicityFromRoleUpperBoundMustBeOne(System.Object,System.Object)">
            <summary>
            A string like "Multiplicity is not valid in Role '{0}' in relationship '{1}'. Valid values for multiplicity for the Principal Role are '0..1' or '1'."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.EdmModel_Validator_Semantic_InvalidMultiplicityFromRoleToPropertyNullableV1(System.Object,System.Object)">
            <summary>
            A string like "Multiplicity is not valid in Role '{0}' in relationship '{1}'. Because all the properties in the Dependent Role are nullable, multiplicity of the Principal Role must be '0..1'."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.EdmModel_Validator_Semantic_InvalidMultiplicityFromRoleToPropertyNonNullableV1(System.Object,System.Object)">
            <summary>
            A string like "Multiplicity conflicts with the referential constraint in Role '{0}' in relationship '{1}'. Because at least one  of the properties in the Dependent Role is non-nullable, multiplicity of the Principal Role must be '1'."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.EdmModel_Validator_Semantic_InvalidMultiplicityFromRoleToPropertyNonNullableV2(System.Object,System.Object)">
            <summary>
            A string like "Multiplicity conflicts with the referential constraint in Role '{0}' in relationship '{1}'. Because all of the properties in the Dependent Role are non-nullable, multiplicity of the Principal Role must be '1'."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.EdmModel_Validator_Semantic_InvalidToPropertyInRelationshipConstraint(System.Object,System.Object,System.Object)">
            <summary>
            A string like "Properties referred by the Dependent Role '{0}' must be a subset of the key of the EntityType '{1}' referred to by the Dependent Role in the referential constraint for relationship '{2}'."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.EdmModel_Validator_Semantic_InvalidMultiplicityToRoleUpperBoundMustBeOne(System.Object,System.Object)">
            <summary>
            A string like "Multiplicity is not valid in Role '{0}' in relationship '{1}'. Because the Dependent Role refers to the key properties, the upper bound of the multiplicity of the Dependent Role must be '1'."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.EdmModel_Validator_Semantic_InvalidMultiplicityToRoleUpperBoundMustBeMany(System.Object,System.Object)">
            <summary>
            A string like "Multiplicity is not valid in Role '{0}' in relationship '{1}'. Because the Dependent Role properties are not the key properties, the upper bound of the multiplicity of the Dependent Role must be '*'."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.EdmModel_Validator_Semantic_TypeMismatchRelationshipConstraint(System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            A string like "The types of all properties in the Dependent Role of a referential constraint must be the same as the corresponding property types in the Principal Role. The type of property '{0}' on entity '{1}' does not match the type of property '{2}' on entity '{3}' in the referential constraint '{4}'."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.EdmModel_Validator_Semantic_InvalidPropertyInRelationshipConstraint(System.Object,System.Object)">
            <summary>
            A string like "There is no property with name '{0}' defined in the type referred to by Role '{1}'."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.EdmModel_Validator_Semantic_NullableComplexType(System.Object)">
            <summary>
            A string like "A nullable ComplexType is not supported. Property '{0}' must not allow nulls."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.EdmModel_Validator_Semantic_InvalidPropertyType(System.Object)">
            <summary>
            A string like "A property cannot be of type '{0}'. The property type must be a ComplexType or a PrimitiveType."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.EdmModel_Validator_Semantic_DuplicateEntityContainerMemberName(System.Object)">
            <summary>
            A string like "Each member name in an EntityContainer must be unique. A member with name '{0}' is already defined."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.EdmModel_Validator_Semantic_TypeNameAlreadyDefinedDuplicate(System.Object)">
            <summary>
            A string like "Each type name in a schema must be unique. Type name '{0}' is already defined."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.EdmModel_Validator_Semantic_InvalidMemberNameMatchesTypeName(System.Object,System.Object)">
            <summary>
            A string like "Name '{0}' cannot be used in type '{1}'. Member names cannot be the same as their enclosing type."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.EdmModel_Validator_Semantic_PropertyNameAlreadyDefinedDuplicate(System.Object)">
            <summary>
            A string like "Each property name in a type must be unique. Property name '{0}' is already defined."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.EdmModel_Validator_Semantic_CycleInTypeHierarchy(System.Object)">
            <summary>
            A string like "A cycle was detected in the type hierarchy of '{0}'."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.EdmModel_Validator_Semantic_InvalidPropertyType_V1_1(System.Object)">
            <summary>
            A string like "A property cannot be of type '{0}'. The property type must be a ComplexType, a PrimitiveType, or a CollectionType."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.EdmModel_Validator_Semantic_InvalidPropertyType_V3(System.Object)">
            <summary>
            A string like "A property cannot be of type {0}. The property type must be a ComplexType, a PrimitiveType or an EnumType."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.EdmModel_Validator_Syntactic_EdmModel_NameIsTooLong(System.Object)">
            <summary>
            A string like "The specified name must not be longer than 480 characters: '{0}'."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.EdmModel_Validator_Syntactic_EdmModel_NameIsNotAllowed(System.Object)">
            <summary>
            A string like "The specified name is not allowed: '{0}'."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.MaxLengthAttribute_ValidationError(System.Object,System.Object)">
            <summary>
            A string like "The field {0} must be a string or array type with a maximum length of '{1}'."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.MinLengthAttribute_ValidationError(System.Object,System.Object)">
            <summary>
            A string like "The field {0} must be a string or array type with a minimum length of '{1}'."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Strings.DbConnectionInfo_ConnectionStringNotFound(System.Object)">
            <summary>
            A string like "No connection string named '{0}' could be found in the application config file."
            </summary>
        </member>
        <member name="P:System.Data.Entity.Resources.Strings.AutomaticMigration">
            <summary>
            A string like "AutomaticMigration"
            </summary>
        </member>
        <member name="P:System.Data.Entity.Resources.Strings.BootstrapMigration">
            <summary>
            A string like "BootstrapMigration"
            </summary>
        </member>
        <member name="P:System.Data.Entity.Resources.Strings.InitialCreate">
            <summary>
            A string like "InitialCreate"
            </summary>
        </member>
        <member name="P:System.Data.Entity.Resources.Strings.AutomaticDataLoss">
            <summary>
            A string like "Automatic migration was not applied because it would result in data loss."
            </summary>
        </member>
        <member name="P:System.Data.Entity.Resources.Strings.LoggingHistoryInsert">
            <summary>
            A string like "[Inserting migration history record]"
            </summary>
        </member>
        <member name="P:System.Data.Entity.Resources.Strings.LoggingHistoryDelete">
            <summary>
            A string like "[Deleting migration history record]"
            </summary>
        </member>
        <member name="P:System.Data.Entity.Resources.Strings.LoggingMetadataUpdate">
            <summary>
            A string like "[Updating EdmMetadata model hash]"
            </summary>
        </member>
        <member name="P:System.Data.Entity.Resources.Strings.LoggingSeedingDatabase">
            <summary>
            A string like "Running Seed method."
            </summary>
        </member>
        <member name="P:System.Data.Entity.Resources.Strings.LoggingNoExplicitMigrations">
            <summary>
            A string like "No pending code-based migrations."
            </summary>
        </member>
        <member name="P:System.Data.Entity.Resources.Strings.LoggingExplicit">
            <summary>
            A string like "Explicit"
            </summary>
        </member>
        <member name="P:System.Data.Entity.Resources.Strings.UpgradingHistoryTable">
            <summary>
            A string like "Upgrading history table."
            </summary>
        </member>
        <member name="P:System.Data.Entity.Resources.Strings.MetadataOutOfDate">
            <summary>
            A string like "Cannot scaffold the next migration because the target database was created with a version of Code First earlier than EF 4.3 and does not contain the migrations history table. To start using migrations against this database, ensure the current model is compatible with the target database and execute the migrations Update process. (In Visual Studio you can use the Update-Database command from Package Manager Console to execute the migrations Update process)."
            </summary>
        </member>
        <member name="P:System.Data.Entity.Resources.Strings.AutomaticDisabledException">
            <summary>
            A string like "Unable to update database to match the current model because there are pending changes and automatic migration is disabled. Either write the pending model changes to a code-based migration or enable automatic migration. Set DbMigrationsConfiguration.AutomaticMigrationsEnabled to true to enable automatic migration."
            </summary>
        </member>
        <member name="P:System.Data.Entity.Resources.Strings.DownScriptWindowsNotSupported">
            <summary>
            A string like "Scripting the downgrade between two specified migrations is not supported."
            </summary>
        </member>
        <member name="P:System.Data.Entity.Resources.Strings.SqlCeColumnRenameNotSupported">
            <summary>
            A string like "Direct column renaming is not supported by SQL Server Compact. To rename a column in SQL Server Compact, you will need to recreate it."
            </summary>
        </member>
        <member name="P:System.Data.Entity.Resources.Strings.ValidationHeader">
            <summary>
            A string like "One or more validation errors were detected during model generation:"
            </summary>
        </member>
        <member name="P:System.Data.Entity.Resources.Strings.CircularComplexTypeHierarchy">
            <summary>
            A string like "A circular ComplexType hierarchy was detected. Self-referencing ComplexTypes are not supported."
            </summary>
        </member>
        <member name="P:System.Data.Entity.Resources.Strings.BadLocalDBDatabaseName">
            <summary>
            A string like "Connection to the database failed. The connection string is configured with an invalid LocalDB server name. This may have been set in 'global.asax' by a pre-release version of MVC4. The default connection factory is now set in web.config so the line in 'global.asax' starting with 'Database.DefaultConnectionFactory = ' should be removed. See http://go.microsoft.com/fwlink/?LinkId=243166 for details."
            </summary>
        </member>
        <member name="P:System.Data.Entity.Resources.Strings.FailedToGetProviderInformation">
            <summary>
            A string like "An error occurred while getting provider information from the database. This can be caused by Entity Framework using an incorrect connection string. Check the inner exceptions for details and ensure that the connection string is correct."
            </summary>
        </member>
        <member name="P:System.Data.Entity.Resources.Strings.DbPropertyEntry_CannotMarkPropertyUnmodified">
            <summary>
            A string like "Setting IsModified to false for a modified property is not supported."
            </summary>
        </member>
        <member name="P:System.Data.Entity.Resources.Strings.DbContext_IndependentAssociationUpdateException">
            <summary>
            A string like "An error occurred while saving entities that do not expose foreign key properties for their relationships. The EntityEntries property will return null because a single entity cannot be identified as the source of the exception. Handling of exceptions while saving can be made easier by exposing foreign key properties in your entity types. See the InnerException for details."
            </summary>
        </member>
        <member name="P:System.Data.Entity.Resources.Strings.DbPropertyValues_PropertyValueNamesAreReadonly">
            <summary>
            A string like "The set of property value names is read-only."
            </summary>
        </member>
        <member name="P:System.Data.Entity.Resources.Strings.DbPropertyValues_AttemptToSetNonValuesOnComplexProperty">
            <summary>
            A string like "A property of a complex type must be set to an instance of the generic or non-generic DbPropertyValues class for that type."
            </summary>
        </member>
        <member name="P:System.Data.Entity.Resources.Strings.Database_NonCodeFirstCompatibilityCheck">
            <summary>
            A string like "Model compatibility cannot be checked because the DbContext instance was not created using Code First patterns. DbContext instances created from an ObjectContext or using an EDMX file cannot be checked for compatibility."
            </summary>
        </member>
        <member name="P:System.Data.Entity.Resources.Strings.Database_MetadataNotMapped">
            <summary>
            A string like "Model compatibility cannot be checked because the EdmMetadata type was not included in the model. Ensure that IncludeMetadataConvention has been added to the DbModelBuilder conventions."
            </summary>
        </member>
        <member name="P:System.Data.Entity.Resources.Strings.Database_NoDatabaseMetadata">
            <summary>
            A string like "Model compatibility cannot be checked because the database does not contain model metadata. Model compatibility can only be checked for databases created using Code First or Code First Migrations."
            </summary>
        </member>
        <member name="P:System.Data.Entity.Resources.Strings.DbContext_ContextUsedInModelCreating">
            <summary>
            A string like "The context cannot be used while the model is being created."
            </summary>
        </member>
        <member name="P:System.Data.Entity.Resources.Strings.DbContext_MESTNotSupported">
            <summary>
            A string like "The DbContext class cannot be used with models that have multiple entity sets per type (MEST)."
            </summary>
        </member>
        <member name="P:System.Data.Entity.Resources.Strings.DbContext_Disposed">
            <summary>
            A string like "The operation cannot be completed because the DbContext has been disposed."
            </summary>
        </member>
        <member name="P:System.Data.Entity.Resources.Strings.DbContext_ProviderReturnedNullConnection">
            <summary>
            A string like "The provider factory returned a null connection."
            </summary>
        </member>
        <member name="P:System.Data.Entity.Resources.Strings.DbContext_ConnectionFactoryReturnedNullConnection">
            <summary>
            A string like "The DbConnectionFactory instance returned a null connection."
            </summary>
        </member>
        <member name="P:System.Data.Entity.Resources.Strings.DbSet_WrongNumberOfKeyValuesPassed">
            <summary>
            A string like "The number of primary key values passed must match number of primary key values defined on the entity."
            </summary>
        </member>
        <member name="P:System.Data.Entity.Resources.Strings.DbSet_WrongKeyValueType">
            <summary>
            A string like "The type of one of the primary key values did not match the type defined in the entity. See inner exception for details."
            </summary>
        </member>
        <member name="P:System.Data.Entity.Resources.Strings.DbSet_MultipleAddedEntitiesFound">
            <summary>
            A string like "Multiple entities were found in the Added state that match the given primary key values."
            </summary>
        </member>
        <member name="P:System.Data.Entity.Resources.Strings.DbQuery_BindingToDbQueryNotSupported">
            <summary>
            A string like "Data binding directly to a store query (DbSet, DbQuery, DbSqlQuery) is not supported. Instead populate a DbSet with data, for example by calling Load on the DbSet, and then bind to local data. For WPF bind to DbSet.Local. For WinForms bind to DbSet.Local.ToBindingList()."
            </summary>
        </member>
        <member name="P:System.Data.Entity.Resources.Strings.DbExtensions_InvalidIncludePathExpression">
            <summary>
            A string like "The Include path expression must refer to a navigation property defined on the type. Use dotted paths for reference navigation properties and the Select operator for collection navigation properties."
            </summary>
        </member>
        <member name="P:System.Data.Entity.Resources.Strings.DbContext_ConnectionHasModel">
            <summary>
            A string like "Cannot initialize a DbContext from an entity connection string or an EntityConnection instance together with a DbCompiledModel. If an entity connection string or EntityConnection instance is used, then the model will be created from the metadata in the connection. If a DbCompiledModel is used, then the connection supplied should be a standard database connection (for example, a SqlConnection instance) rather than an entity connection."
            </summary>
        </member>
        <member name="P:System.Data.Entity.Resources.Strings.CodeFirstCachedMetadataWorkspace_SameModelDifferentProvidersNotSupported">
            <summary>
            A string like "Using the same DbCompiledModel to create contexts against different types of database servers is not supported. Instead, create a separate DbCompiledModel for each type of server being used."
            </summary>
        </member>
        <member name="P:System.Data.Entity.Resources.Strings.DbEntityValidationException_ValidationFailed">
            <summary>
            A string like "Validation failed for one or more entities. See 'EntityValidationErrors' property for more details."
            </summary>
        </member>
        <member name="P:System.Data.Entity.Resources.Strings.Database_InitializationException">
            <summary>
            A string like "An exception occurred while initializing the database. See the InnerException for details."
            </summary>
        </member>
        <member name="P:System.Data.Entity.Resources.Strings.EdmxWriter_EdmxFromObjectContextNotSupported">
            <summary>
            A string like "Creating a DbModelBuilder or writing the EDMX from a DbContext created using an existing ObjectContext is not supported. EDMX can only be obtained from a Code First DbContext created without using an existing DbCompiledModel."
            </summary>
        </member>
        <member name="P:System.Data.Entity.Resources.Strings.EdmxWriter_EdmxFromDbCompiledModelNotSupported">
            <summary>
            A string like "Creating a DbModelBuilder or writing the EDMX from a DbContext created using an existing DbCompiledModel is not supported. EDMX can only be obtained from a Code First DbContext created without using an existing DbCompiledModel."
            </summary>
        </member>
        <member name="P:System.Data.Entity.Resources.Strings.EdmxWriter_EdmxFromModelFirstNotSupported">
            <summary>
            A string like "Creating a DbModelBuilder or writing the EDMX from a DbContext created using Database First or Model First is not supported. EDMX can only be obtained from a Code First DbContext created without using an existing DbCompiledModel."
            </summary>
        </member>
        <member name="P:System.Data.Entity.Resources.Strings.UnintentionalCodeFirstException_Message">
            <summary>
            A string like "Code generated using the T4 templates for Database First and Model First development may not work correctly if used in Code First mode. To continue using Database First or Model First ensure that the Entity Framework connection string is specified in the config file of executing application. To use these classes, that were generated from Database First or Model First, with Code First add any additional configuration using attributes or the DbModelBuilder API and then remove the code that throws this exception."
            </summary>
        </member>
        <member name="P:System.Data.Entity.Resources.Strings.CannotCallGenericSetWithProxyType">
            <summary>
            A string like "The generic 'Set' method cannot be called with a proxy type. Either use the actual entity type or call the non-generic 'Set' method."
            </summary>
        </member>
        <member name="P:System.Data.Entity.Resources.Strings.EdmModel_Validator_Semantic_BadNavigationPropertyRolesCannotBeTheSame">
            <summary>
            A string like "NavigationProperty is not valid. The FromRole and ToRole are the same."
            </summary>
        </member>
        <member name="P:System.Data.Entity.Resources.Strings.EdmModel_Validator_Semantic_InvalidOperationMultipleEndsInAssociation">
            <summary>
            A string like "OnDelete can be specified on only one End of an EdmAssociation."
            </summary>
        </member>
        <member name="P:System.Data.Entity.Resources.Strings.EdmModel_Validator_Semantic_MismatchNumberOfPropertiesinRelationshipConstraint">
            <summary>
            A string like "The number of properties in the Dependent and Principal Roles in a relationship constraint must be identical."
            </summary>
        </member>
        <member name="P:System.Data.Entity.Resources.Strings.EdmModel_Validator_Syntactic_MissingName">
            <summary>
            A string like "The name is missing or not valid."
            </summary>
        </member>
        <member name="P:System.Data.Entity.Resources.Strings.EdmModel_Validator_Syntactic_EdmAssociationType_AssocationEndMustNotBeNull">
            <summary>
            A string like "AssociationEnd must not be null."
            </summary>
        </member>
        <member name="P:System.Data.Entity.Resources.Strings.EdmModel_Validator_Syntactic_EdmAssociationConstraint_DependentEndMustNotBeNull">
            <summary>
            A string like "DependentEnd must not be null."
            </summary>
        </member>
        <member name="P:System.Data.Entity.Resources.Strings.EdmModel_Validator_Syntactic_EdmAssociationConstraint_DependentPropertiesMustNotBeEmpty">
            <summary>
            A string like "DependentProperties must not be empty."
            </summary>
        </member>
        <member name="P:System.Data.Entity.Resources.Strings.EdmModel_Validator_Syntactic_EdmNavigationProperty_AssocationMustNotBeNull">
            <summary>
            A string like "Association must not be null."
            </summary>
        </member>
        <member name="P:System.Data.Entity.Resources.Strings.EdmModel_Validator_Syntactic_EdmNavigationProperty_ResultEndMustNotBeNull">
            <summary>
            A string like "ResultEnd must not be null."
            </summary>
        </member>
        <member name="P:System.Data.Entity.Resources.Strings.EdmModel_Validator_Syntactic_EdmAssociationEnd_EntityTypeMustNotBeNull">
            <summary>
            A string like "EntityType must not be null."
            </summary>
        </member>
        <member name="P:System.Data.Entity.Resources.Strings.EdmModel_Validator_Syntactic_EdmEntitySet_ElementTypeMustNotBeNull">
            <summary>
            A string like "ElementType must not be null."
            </summary>
        </member>
        <member name="P:System.Data.Entity.Resources.Strings.EdmModel_Validator_Syntactic_EdmAssociationSet_ElementTypeMustNotBeNull">
            <summary>
            A string like "ElementType must not be null."
            </summary>
        </member>
        <member name="P:System.Data.Entity.Resources.Strings.EdmModel_Validator_Syntactic_EdmAssociationSet_SourceSetMustNotBeNull">
            <summary>
            A string like "SourceSet must not be null."
            </summary>
        </member>
        <member name="P:System.Data.Entity.Resources.Strings.EdmModel_Validator_Syntactic_EdmAssociationSet_TargetSetMustNotBeNull">
            <summary>
            A string like "TargetSet must not be null."
            </summary>
        </member>
        <member name="P:System.Data.Entity.Resources.Strings.EdmModel_Validator_Syntactic_EdmTypeReferenceNotValid">
            <summary>
            A string like "The type is not a valid EdmTypeReference."
            </summary>
        </member>
        <member name="P:System.Data.Entity.Resources.Strings.Serializer_OneNamespaceAndOneContainer">
            <summary>
            A string like "Serializer can only serialize an EdmModel that has one EdmNamespace and one EdmEntityContainer."
            </summary>
        </member>
        <member name="P:System.Data.Entity.Resources.Strings.MaxLengthAttribute_InvalidMaxLength">
            <summary>
            A string like "MaxLengthAttribute must have a Length value that is greater than zero. Use MaxLength() without parameters to  indicate that the string or array can have the maximum allowable length."
            </summary>
        </member>
        <member name="P:System.Data.Entity.Resources.Strings.MinLengthAttribute_InvalidMinLength">
            <summary>
            A string like "MinLengthAttribute must have a Length value that is zero or greater."
            </summary>
        </member>
        <member name="P:System.Data.Entity.Resources.Strings.EagerInternalContext_CannotSetConnectionInfo">
            <summary>
            A string like "The connection can not be overridden because this context was created from an existing ObjectContext."
            </summary>
        </member>
        <member name="P:System.Data.Entity.Resources.Strings.LazyInternalContext_CannotReplaceEfConnectionWithDbConnection">
            <summary>
            A string like "Can not override the connection for this context with a standard DbConnection because the original connection was an EntityConnection."
            </summary>
        </member>
        <member name="P:System.Data.Entity.Resources.Strings.LazyInternalContext_CannotReplaceDbConnectionWithEfConnection">
            <summary>
            A string like "Can not override the connection for this context with an EntityConnection because the original connection was a standard DbConnection."
            </summary>
        </member>
        <member name="T:System.Data.Entity.Resources.Error">
            <summary>
               Strongly-typed and parameterized exception factory.
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.AutomaticDataLoss">
            <summary>
            Migrations.Infrastructure.AutomaticDataLossException with message like "Automatic migration was not applied because it would result in data loss."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.MetadataOutOfDate">
            <summary>
            Migrations.Infrastructure.MigrationsException with message like "Cannot scaffold the next migration because the target database was created with a version of Code First earlier than EF 4.3 and does not contain the migrations history table. To start using migrations against this database, ensure the current model is compatible with the target database and execute the migrations Update process. (In Visual Studio you can use the Update-Database command from Package Manager Console to execute the migrations Update process)."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.MigrationNotFound(System.Object)">
            <summary>
            Migrations.Infrastructure.MigrationsException with message like "The specified target migration '{0}' does not exist. Ensure that target migration refers to an existing migration id."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.PartialFkOperation(System.Object,System.Object)">
            <summary>
            Migrations.Infrastructure.MigrationsException with message like "The Foreign Key on table '{0}' with columns '{1}' could not be created because the principal key columns could not be determined. Use the AddForeignKey fluent API to fully specify the Foreign Key."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.AutoNotValidTarget(System.Object)">
            <summary>
            Migrations.Infrastructure.MigrationsException with message like "'{0}' is not a valid target migration. When targeting a previously applied automatic migration, use the full migration id including timestamp."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.AutoNotValidForScriptWindows(System.Object)">
            <summary>
            Migrations.Infrastructure.MigrationsException with message like "'{0}' is not a valid migration. Code-based migrations must be used for both source and target when scripting the upgrade between them."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.ContextNotConstructible(System.Object)">
            <summary>
            Migrations.Infrastructure.MigrationsException with message like "The target context '{0}' is not constructible. Add a default constructor or provide an implementation of IDbContextFactory."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.AmbiguousMigrationName(System.Object)">
            <summary>
            Migrations.Infrastructure.MigrationsException with message like "The specified migration name '{0}' is ambiguous. Specify the full migration id including timestamp instead."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.AutomaticDisabledException">
            <summary>
            Migrations.Infrastructure.AutomaticMigrationsDisabledException with message like "Unable to update database to match the current model because there are pending changes and automatic migration is disabled. Either write the pending model changes to a code-based migration or enable automatic migration. Set DbMigrationsConfiguration.AutomaticMigrationsEnabled to true to enable automatic migration."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.DownScriptWindowsNotSupported">
            <summary>
            Migrations.Infrastructure.MigrationsException with message like "Scripting the downgrade between two specified migrations is not supported."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.AssemblyMigrator_NoConfigurationWithName(System.Object,System.Object)">
            <summary>
            Migrations.Infrastructure.MigrationsException with message like "The migrations configuration type '{0}' was not be found in the assembly '{1}'."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.AssemblyMigrator_MultipleConfigurationsWithName(System.Object,System.Object)">
            <summary>
            Migrations.Infrastructure.MigrationsException with message like "More than one migrations configuration type '{0}' was found in the assembly '{1}'. Specify the fully qualified name of the one to use."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.AssemblyMigrator_NoConfiguration(System.Object)">
            <summary>
            Migrations.Infrastructure.MigrationsException with message like "No migrations configuration type was found in the assembly '{0}'. (In Visual Studio you can use the Enable-Migrations command from Package Manager Console to add a migrations configuration)."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.AssemblyMigrator_MultipleConfigurations(System.Object)">
            <summary>
            Migrations.Infrastructure.MigrationsException with message like "More than one migrations configuration type was found in the assembly '{0}'. Specify the name of the one to use."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.AssemblyMigrator_NonConfigurationType(System.Object)">
            <summary>
            Migrations.Infrastructure.MigrationsException with message like "The type '{0}' is not a migrations configuration type."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.AssemblyMigrator_NoDefaultConstructor(System.Object)">
            <summary>
            Migrations.Infrastructure.MigrationsException with message like "The migrations configuration type '{0}' must have a public default constructor."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.AssemblyMigrator_AbstractConfigurationType(System.Object)">
            <summary>
            Migrations.Infrastructure.MigrationsException with message like "The migrations configuration type '{0}' must not be abstract."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.AssemblyMigrator_GenericConfigurationType(System.Object)">
            <summary>
            Migrations.Infrastructure.MigrationsException with message like "The migrations configuration type '{0}' must not be generic."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.SqlCeColumnRenameNotSupported">
            <summary>
            Migrations.Infrastructure.MigrationsException with message like "Direct column renaming is not supported by SQL Server Compact. To rename a column in SQL Server Compact, you will need to recreate it."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.MigrationsNamespaceNotUnderRootNamespace(System.Object,System.Object)">
            <summary>
            Migrations.Infrastructure.MigrationsException with message like "In VB.NET projects, the migrations namespace '{0}' must be under the root namespace '{1}'. Update the migrations project's root namespace to allow classes under the migrations namespace to be added."
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:System.Data.Entity.Resources.Error.UnableToDispatchAddOrUpdate(System.Object)" -->
        <member name="M:System.Data.Entity.Resources.Error.NoSqlGeneratorForProvider(System.Object)">
            <summary>
            Migrations.Infrastructure.MigrationsException with message like "No MigrationSqlGenerator found for provider '{0}'. Use the SetSqlGenerator method in the target migrations configuration class to register additional SQL generators."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.EnableMigrations_NoContext(System.Object)">
            <summary>
            Migrations.Infrastructure.MigrationsException with message like "No context type was found in the assembly '{0}'."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.EnableMigrations_NoContextWithName(System.Object,System.Object)">
            <summary>
            Migrations.Infrastructure.MigrationsException with message like "The context type '{0}' was not found in the assembly '{1}'."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.EnableMigrations_MultipleContextsWithName(System.Object,System.Object)">
            <summary>
            Migrations.Infrastructure.MigrationsException with message like "More than one context type '{0}' was found in the assembly '{1}'. Specify the fully qualified name of the context."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.ArgumentIsNullOrWhitespace(System.Object)">
            <summary>
            ArgumentException with message like "The argument '{0}' cannot be null, empty or contain only white space."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.ArgumentPropertyIsNull(System.Object)">
            <summary>
            ArgumentException with message like "The argument property '{0}' cannot be null."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.PreconditionFailed(System.Object,System.Object)">
            <summary>
            ArgumentException with message like "The precondition '{0}' failed. {1}"
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.EntityTypeConfigurationMismatch(System.Object)">
            <summary>
            InvalidOperationException with message like "The type '{0}' has already been configured as a complex type. It cannot be reconfigured as an entity type."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.ComplexTypeConfigurationMismatch(System.Object)">
            <summary>
            InvalidOperationException with message like "The type '{0}' has already been configured as an entity type. It cannot be reconfigured as a complex type."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.KeyPropertyNotFound(System.Object,System.Object)">
            <summary>
            InvalidOperationException with message like "The key component '{0}' is not a declared property on type '{1}'. Verify that it has not been explicitly excluded from the model and that it is a valid primitive property."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.ForeignKeyPropertyNotFound(System.Object,System.Object)">
            <summary>
            InvalidOperationException with message like "The foreign key component '{0}' is not a declared property on type '{1}'. Verify that it has not been explicitly excluded from the model and that it is a valid primitive property."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.PropertyNotFound(System.Object,System.Object)">
            <summary>
            InvalidOperationException with message like "The property '{0}' is not a declared property on type '{1}'. Verify that the property has not been explicitly excluded from the model by using the Ignore method or NotMappedAttribute data annotation. Make sure that it is a valid primitive property."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.NavigationPropertyNotFound(System.Object,System.Object)">
            <summary>
            InvalidOperationException with message like "The navigation property '{0}' is not a declared property on type '{1}'. Verify that it has not been explicitly excluded from the model and that it is a valid navigation property."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.InvalidPropertyExpression(System.Object)">
            <summary>
            InvalidOperationException with message like "The expression '{0}' is not a valid property expression. The expression should represent a property: C#: 't => t.MyProperty'  VB.Net: 'Function(t) t.MyProperty'."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.InvalidComplexPropertyExpression(System.Object)">
            <summary>
            InvalidOperationException with message like "The expression '{0}' is not a valid property expression. The expression should represent a property: C#: 't => t.MyProperty'  VB.Net: 'Function(t) t.MyProperty'. Use dotted paths for nested properties: C#: 't => t.MyProperty.MyProperty'  VB.Net: 'Function(t) t.MyProperty.MyProperty'."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.InvalidPropertiesExpression(System.Object)">
            <summary>
            InvalidOperationException with message like "The properties expression '{0}' is not valid. The expression should represent a property: C#: 't => t.MyProperty'  VB.Net: 'Function(t) t.MyProperty'. When specifying multiple properties use an anonymous type: C#: 't => new {{ t.MyProperty1, t.MyProperty2 }}'  VB.Net: 'Function(t) New With {{ t.MyProperty1, t.MyProperty2 }}'."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.InvalidComplexPropertiesExpression(System.Object)">
            <summary>
            InvalidOperationException with message like "The properties expression '{0}' is not valid. The expression should represent a property: C#: 't => t.MyProperty'  VB.Net: 'Function(t) t.MyProperty'. When specifying multiple properties use an anonymous type: C#: 't => new {{ t.MyProperty1, t.MyProperty2 }}'  VB.Net: 'Function(t) New With {{ t.MyProperty1, t.MyProperty2 }}'."
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:System.Data.Entity.Resources.Error.DuplicateStructuralTypeConfiguration(System.Object)" -->
        <member name="M:System.Data.Entity.Resources.Error.ConflictingPropertyConfiguration(System.Object,System.Object,System.Object)">
            <summary>
            InvalidOperationException with message like "Conflicting configuration settings were specified for property '{0}' on type '{1}': {2}"
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.ConflictingColumnConfiguration(System.Object,System.Object,System.Object)">
            <summary>
            InvalidOperationException with message like "Conflicting configuration settings were specified for column '{0}' on table '{1}': {2}"
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.InvalidComplexType(System.Object)">
            <summary>
            InvalidOperationException with message like "The type '{0}' was not mapped. Check that the type has not been explicitly excluded by using the Ignore method or NotMappedAttribute data annotation. Verify that the type was defined as a class, is not primitive, nested or generic, and does not inherit from ComplexObject."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.InvalidEntityType(System.Object)">
            <summary>
            InvalidOperationException with message like "The type '{0}' was not mapped. Check that the type has not been explicitly excluded by using the Ignore method or NotMappedAttribute data annotation. Verify that the type was defined as a class, is not primitive, nested or generic, and does not inherit from EntityObject."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.NavigationInverseItself(System.Object,System.Object)">
            <summary>
            InvalidOperationException with message like "The navigation property '{0}' declared on type '{1}' cannot be the inverse of itself."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.ConflictingConstraint(System.Object,System.Object)">
            <summary>
            InvalidOperationException with message like "The navigation property '{0}' declared on type '{1}' has been configured with conflicting foreign keys."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.ConflictingInferredColumnType(System.Object,System.Object,System.Object)">
            <summary>
            MappingException with message like "Values of incompatible types ('{1}' and '{2}') were assigned to the '{0}' discriminator column. Values of the same type must be specified. To explicitly specify the type of the discriminator column use the HasColumnType method."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.ConflictingMapping(System.Object,System.Object)">
            <summary>
            InvalidOperationException with message like "The navigation property '{0}' declared on type '{1}' has been configured with conflicting mapping information."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.ConflictingCascadeDeleteOperation(System.Object,System.Object)">
            <summary>
            InvalidOperationException with message like "The navigation property '{0}' declared on type '{1}' has been configured with conflicting cascade delete operations using 'WillCascadeOnDelete'."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.ConflictingMultiplicities(System.Object,System.Object)">
            <summary>
            InvalidOperationException with message like "The navigation property '{0}' declared on type '{1}' has been configured with conflicting multiplicities."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.MaxLengthAttributeConvention_InvalidMaxLength(System.Object,System.Object)">
            <summary>
            InvalidOperationException with message like "The MaxLengthAttribute on property '{0}' on type '{1} is not valid. The Length value must be greater than zero. Use MaxLength() without parameters to indicate that the string or array can have the maximum allowable length."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.StringLengthAttributeConvention_InvalidMaximumLength(System.Object,System.Object)">
            <summary>
            InvalidOperationException with message like "The StringLengthAttribute on property '{0}' on type '{1}' is not valid. The maximum length must be greater than zero. Use MaxLength() without parameters to indicate that the string or array can have the maximum allowable length."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.ModelGeneration_UnableToDetermineKeyOrder(System.Object)">
            <summary>
            InvalidOperationException with message like "Unable to determine composite primary key ordering for type '{0}'. Use the ColumnAttribute or the HasKey method to specify an order for composite primary keys."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.ForeignKeyAttributeConvention_EmptyKey(System.Object,System.Object)">
            <summary>
            InvalidOperationException with message like "The ForeignKeyAttribute on property '{0}' on type '{1}' is not valid. Name must not be empty."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.ForeignKeyAttributeConvention_InvalidKey(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            InvalidOperationException with message like "The ForeignKeyAttribute on property '{0}' on type '{1}' is not valid. The foreign key name '{2}' was not found on the dependent type '{3}'. The Name value should be a comma separated list of foreign key property names."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.ForeignKeyAttributeConvention_InvalidNavigationProperty(System.Object,System.Object,System.Object)">
            <summary>
            InvalidOperationException with message like "The ForeignKeyAttribute on property '{0}' on type '{1}' is not valid. The navigation property '{2}' was not found on the dependent type '{1}'. The Name value should be a valid navigation property name."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.ForeignKeyAttributeConvention_OrderRequired(System.Object)">
            <summary>
            InvalidOperationException with message like "Unable to determine a composite foreign key ordering for foreign key on type {0}. When using the ForeignKey data annotation on composite foreign key properties ensure order is specified by using the Column data annotation or the fluent API."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.InversePropertyAttributeConvention_PropertyNotFound(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            InvalidOperationException with message like "The InversePropertyAttribute on property '{2}' on type '{3}' is not valid. The property '{0}' is not a valid navigation property on the related type '{1}'. Ensure that the property exists and is a valid reference or collection navigation property."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.InversePropertyAttributeConvention_SelfInverseDetected(System.Object,System.Object)">
            <summary>
            InvalidOperationException with message like "A relationship cannot be established from property '{0}' on type '{1}' to property '{0}' on type '{1}'. Check the values in the InversePropertyAttribute to ensure relationship definitions are unique and reference from one navigation property to its corresponding inverse navigation property."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.KeyRegisteredOnDerivedType(System.Object,System.Object)">
            <summary>
            InvalidOperationException with message like "A key is registered for the derived type '{0}'. Keys can only be registered for the root type '{1}'."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.InvalidTableMapping(System.Object,System.Object)">
            <summary>
            InvalidOperationException with message like "The type '{0}' has already been mapped to table '{1}'. Specify all mapping aspects of a table in a single Map call."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.InvalidTableMapping_NoTableName(System.Object)">
            <summary>
            InvalidOperationException with message like "Map was called more than once for type '{0}' and at least one of the calls didn't specify the target table name."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.InvalidChainedMappingSyntax(System.Object)">
            <summary>
            InvalidOperationException with message like "The derived type '{0}' has already been mapped using the chaining syntax. A derived type can only be mapped once using the chaining syntax."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.InvalidNotNullCondition(System.Object,System.Object)">
            <summary>
            InvalidOperationException with message like "An "is not null" condition cannot be specified on property '{0}' on type '{1}' because this property is not included in the model. Check that the property has not been explicitly excluded from the model by using the Ignore method or NotMappedAttribute data annotation."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.InvalidDiscriminatorType(System.Object)">
            <summary>
            ArgumentException with message like "Values of type '{0}' cannot be used as type discriminator values. Supported types include byte, signed byte, bool, int16, int32, int64, and string."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.ConventionNotFound(System.Object,System.Object)">
            <summary>
            InvalidOperationException with message like "Unable to add the convention '{0}'. Could not find an existing convention of type '{1}' in the current convention set."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.InvalidEntitySplittingProperties(System.Object)">
            <summary>
            InvalidOperationException with message like "Not all properties for type '{0}' have been mapped. Either map those properties or explicitly excluded them from the model."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.ModelBuilder_ProviderNameNotFound(System.Object)">
            <summary>
            NotSupportedException with message like "Unable to determine the provider name for connection of type '{0}'."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.ToTable_InvalidSchemaName(System.Object)">
            <summary>
            ArgumentException with message like "The qualified table name '{0}' contains an invalid schema name. Schema names must have a non-zero length."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.ToTable_InvalidTableName(System.Object)">
            <summary>
            ArgumentException with message like "The qualified table name '{0}' contains an invalid table name. Table names must have a non-zero length."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.EntityMappingConfiguration_DuplicateMapInheritedProperties(System.Object)">
            <summary>
            InvalidOperationException with message like "Properties for type '{0}' can only be mapped once. Ensure the MapInheritedProperties method is only used during one call to the Map method."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.EntityMappingConfiguration_DuplicateMappedProperties(System.Object)">
            <summary>
            InvalidOperationException with message like "Properties for type '{0}' can only be mapped once. Ensure the Properties method is used and that repeated calls specify each non-key property only once."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.EntityMappingConfiguration_DuplicateMappedProperty(System.Object,System.Object)">
            <summary>
            InvalidOperationException with message like "Properties for type '{0}' can only be mapped once. The non-key property '{1}' is mapped more than once. Ensure the Properties method specifies each non-key property only once."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.EntityMappingConfiguration_CannotMapIgnoredProperty(System.Object,System.Object)">
            <summary>
            InvalidOperationException with message like "The property '{1}' on type '{0}' cannot be mapped because it has been explicitly excluded from the model or it is of a type not supported by the DbModelBuilderVersion being used."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.EntityMappingConfiguration_InvalidTableSharing(System.Object,System.Object,System.Object)">
            <summary>
            InvalidOperationException with message like "The entity types '{0}' and '{1}' cannot share table '{2}' because they are not in the same type hierarchy or do not have a valid one to one foreign key relationship with matching primary keys between them."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.CannotIgnoreMappedBaseProperty(System.Object,System.Object,System.Object)">
            <summary>
            InvalidOperationException with message like "You cannot use Ignore method on the property '{0}' on type '{1}' because this type inherits from the type '{2}' where this property is mapped. To exclude this property from your model, use NotMappedAttribute or Ignore method on the base type."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.ModelBuilder_KeyPropertiesMustBePrimitive(System.Object,System.Object)">
            <summary>
            InvalidOperationException with message like "The property '{0}' cannot be used as a key property on the entity '{1}' because the property type is not a valid key type. Only scalar types, string and byte[] are supported key types."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.TableNotFound(System.Object)">
            <summary>
            InvalidOperationException with message like "The specified table '{0}' was not found in the model. Ensure that the table name has been correctly specified."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.IncorrectColumnCount(System.Object)">
            <summary>
            InvalidOperationException with message like "The specified association foreign key columns '{0}' are invalid. The number of columns specified must match the number of primary key columns."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.CircularComplexTypeHierarchy">
            <summary>
            InvalidOperationException with message like "A circular ComplexType hierarchy was detected. Self-referencing ComplexTypes are not supported."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.UnableToDeterminePrincipal(System.Object,System.Object)">
            <summary>
            InvalidOperationException with message like "Unable to determine the principal end of an association between the types '{0}' and '{1}'. The principal end of this association must be explicitly configured using either the relationship fluent API or data annotations."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.UnmappedAbstractType(System.Object)">
            <summary>
            InvalidOperationException with message like "The abstract type '{0}' has no mapped descendents and so cannot be mapped. Either remove '{0}' from the model or add one or more types deriving from '{0}' to the model. "
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.UnsupportedHybridInheritanceMapping(System.Object)">
            <summary>
            NotSupportedException with message like "The type '{0}' cannot be mapped as defined because it maps inherited properties from types that use entity splitting or another form of inheritance. Either choose a different inheritance mapping strategy so as to not map inherited properties, or change all types in the hierarchy to map inherited properties and to not use splitting. "
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.OrphanedConfiguredTableDetected(System.Object)">
            <summary>
            InvalidOperationException with message like "The table '{0}' was configured but is not used in any mappings. Verify the mapping configuration for '{0}' is correct."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.DuplicateConfiguredColumnOrder(System.Object)">
            <summary>
            InvalidOperationException with message like "The configured column orders for the table '{0}' contains duplicates. Ensure the specified column order values are distinct."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.UnsupportedUseOfV3Type(System.Object,System.Object)">
            <summary>
            NotSupportedException with message like "The enum or spatial property '{1}' on type '{0}' cannot be mapped. Use DbModelBuilderVersion 'V5_0' or later to map enum or spatial properties."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.MultiplePropertiesMatchedAsKeys(System.Object,System.Object)">
            <summary>
            InvalidOperationException with message like "Multiple potential primary key properties named '{0}' but differing only by case were found on entity type '{1}'. Configure the primary key explicitly using the HasKey fluent API or the KeyAttribute data annotation."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.DbPropertyEntry_CannotGetCurrentValue(System.Object,System.Object)">
            <summary>
            InvalidOperationException with message like "Cannot get value for property '{0}' from entity of type '{1}' because the property has no get accessor."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.DbPropertyEntry_CannotSetCurrentValue(System.Object,System.Object)">
            <summary>
            InvalidOperationException with message like "Cannot set value for property '{0}' on entity of type '{1}' because the property has no set accessor."
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:System.Data.Entity.Resources.Error.DbPropertyEntry_NotSupportedForDetached(System.Object,System.Object,System.Object)" -->
        <member name="M:System.Data.Entity.Resources.Error.DbPropertyEntry_SettingEntityRefNotSupported(System.Object,System.Object,System.Object)">
            <summary>
            NotSupportedException with message like "Cannot set value for property '{0}' on entity of type '{1}' because the property has no set accessor and is in the '{2}' state."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.DbPropertyEntry_NotSupportedForPropertiesNotInTheModel(System.Object,System.Object,System.Object)">
            <summary>
            InvalidOperationException with message like "Member '{0}' cannot be called for property '{1}' on entity of type '{2}' because the property is not part of the Entity Data Model."
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:System.Data.Entity.Resources.Error.DbEntityEntry_NotSupportedForDetached(System.Object,System.Object)" -->
        <member name="M:System.Data.Entity.Resources.Error.DbSet_BadTypeForAddAttachRemove(System.Object,System.Object,System.Object)">
            <summary>
            ArgumentException with message like "Cannot call the {0} method for an entity of type '{1}' on a DbSet for entities of type '{2}'. Only entities of type '{2}' or derived from type '{2}' can be added, attached, or removed."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.DbSet_BadTypeForCreate(System.Object,System.Object)">
            <summary>
            ArgumentException with message like "Cannot call the Create method for the type '{0}' on a DbSet for entities of type '{1}'. Only entities of type '{1}' or derived from type '{1}' can be created."
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:System.Data.Entity.Resources.Error.DbEntity_BadTypeForCast(System.Object,System.Object,System.Object)" -->
        <!-- Badly formed XML comment ignored for member "M:System.Data.Entity.Resources.Error.DbMember_BadTypeForCast(System.Object,System.Object,System.Object,System.Object,System.Object)" -->
        <member name="M:System.Data.Entity.Resources.Error.DbEntityEntry_UsedReferenceForCollectionProp(System.Object,System.Object)">
            <summary>
            ArgumentException with message like "The property '{0}' on type '{1}' is a collection navigation property. The Collection method should be used instead of the Reference method."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.DbEntityEntry_UsedCollectionForReferenceProp(System.Object,System.Object)">
            <summary>
            ArgumentException with message like "The property '{0}' on type '{1}' is a reference navigation property. The Reference method should be used instead of the Collection method."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.DbEntityEntry_NotANavigationProperty(System.Object,System.Object)">
            <summary>
            ArgumentException with message like "The property '{0}' on type '{1}' is not a navigation property. The Reference and Collection methods can only be used with navigation properties. Use the Property or ComplexProperty method."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.DbEntityEntry_NotAScalarProperty(System.Object,System.Object)">
            <summary>
            ArgumentException with message like "The property '{0}' on type '{1}' is not a primitive or complex property. The Property method can only be used with primitive or complex properties. Use the Reference or Collection method."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.DbEntityEntry_NotAComplexProperty(System.Object,System.Object)">
            <summary>
            ArgumentException with message like "The property '{0}' on type '{1}' is not a complex property. The ComplexProperty method can only be used with complex properties. Use the Property, Reference or Collection method."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.DbEntityEntry_NotAProperty(System.Object,System.Object)">
            <summary>
            ArgumentException with message like "The property '{0}' on type '{1}' is not a primitive property, complex property, collection navigation property, or reference navigation property."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.DbEntityEntry_DottedPartNotComplex(System.Object,System.Object,System.Object)">
            <summary>
            ArgumentException with message like ""The property '{0}' from the property path '{1}' is not a complex property on type '{2}'. Property paths must be composed of complex properties for all except the final property.""
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.DbPropertyEntry_CannotMarkPropertyUnmodified">
            <summary>
            NotSupportedException with message like "Setting IsModified to false for a modified property is not supported."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.DbEntityEntry_DottedPathMustBeProperty(System.Object)">
            <summary>
            ArgumentException with message like ""The property path '{0}' cannot be used for navigation properties. Property paths can only be used to access primitive or complex properties.""
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.DbEntityEntry_WrongGenericForNavProp(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            ArgumentException with message like "The navigation property '{0}' on entity type '{1}' cannot be used for entities of type '{2}' because it refers to entities of type '{3}'."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.DbEntityEntry_WrongGenericForCollectionNavProp(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            ArgumentException with message like "The generic type argument '{0}' cannot be used with the Member method when accessing the collection navigation property '{1}' on entity type '{2}'. The generic type argument '{3}' must be used instead."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.DbEntityEntry_WrongGenericForProp(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            ArgumentException with message like "The property '{0}' on entity type '{1}' cannot be used for objects of type '{2}' because it is a property for objects of type '{3}'."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.DbEntityEntry_BadPropertyExpression(System.Object,System.Object)">
            <summary>
            ArgumentException with message like "The expression passed to method {0} must represent a property defined on the type '{1}'."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.DbPropertyValues_CannotGetValuesForState(System.Object,System.Object)">
            <summary>
            InvalidOperationException with message like "{0} cannot be used for entities in the {1} state."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.DbPropertyValues_CannotSetNullValue(System.Object,System.Object,System.Object)">
            <summary>
            InvalidOperationException with message like "Cannot set non-nullable property '{0}' of type '{1}' to null on object of type '{2}'."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.DbPropertyValues_CannotGetStoreValuesWhenComplexPropertyIsNull(System.Object,System.Object)">
            <summary>
            InvalidOperationException with message like "The property '{0}' in the entity of type '{1}' is null. Store values cannot be obtained for an entity with a null complex property."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.DbPropertyValues_WrongTypeForAssignment(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            InvalidOperationException with message like "Cannot assign value of type '{0}' to property '{1}' of type '{2}' in property values for type '{3}'."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.DbPropertyValues_PropertyValueNamesAreReadonly">
            <summary>
            NotSupportedException with message like "The set of property value names is read-only."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.DbPropertyValues_PropertyDoesNotExist(System.Object,System.Object)">
            <summary>
            ArgumentException with message like "The '{0}' property does not exist or is not mapped for the type '{1}'."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.DbPropertyValues_AttemptToSetValuesFromWrongObject(System.Object,System.Object)">
            <summary>
            ArgumentException with message like "Cannot copy values from DbPropertyValues for type '{0}' into DbPropertyValues for type '{1}'."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.DbPropertyValues_AttemptToSetValuesFromWrongType(System.Object,System.Object)">
            <summary>
            ArgumentException with message like "Cannot copy from property values for object of type '{0}' into property values for object of type '{1}'."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.DbPropertyValues_AttemptToSetNonValuesOnComplexProperty">
            <summary>
            ArgumentException with message like "A property of a complex type must be set to an instance of the generic or non-generic DbPropertyValues class for that type."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.DbPropertyValues_ComplexObjectCannotBeNull(System.Object,System.Object)">
            <summary>
            InvalidOperationException with message like "The value of the complex property '{0}' on entity of type '{1}' is null. Complex properties cannot be set to null and values cannot be set for null complex properties."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.DbPropertyValues_NestedPropertyValuesNull(System.Object,System.Object)">
            <summary>
            InvalidOperationException with message like "The value of the nested property values property '{0}' on the values for entity of type '{1}' is null. Nested property values cannot be set to null and values cannot be set for null complex properties."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.DbPropertyValues_CannotSetPropertyOnNullCurrentValue(System.Object,System.Object)">
            <summary>
            InvalidOperationException with message like "Cannot set the value of the nested property '{0}' because value of the complex property '{1}' to which it belongs is null."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.DbPropertyValues_CannotSetPropertyOnNullOriginalValue(System.Object,System.Object)">
            <summary>
            InvalidOperationException with message like "Cannot set the original value of the nested property '{0}' because the original value of the complex property '{1}' to which it belongs is null."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.DatabaseInitializationStrategy_ModelMismatch(System.Object)">
            <summary>
            InvalidOperationException with message like "The model backing the '{0}' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269)."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.Database_DatabaseAlreadyExists(System.Object)">
            <summary>
            InvalidOperationException with message like "Database '{0}' cannot be created because it already exists."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.Database_NonCodeFirstCompatibilityCheck">
            <summary>
            NotSupportedException with message like "Model compatibility cannot be checked because the DbContext instance was not created using Code First patterns. DbContext instances created from an ObjectContext or using an EDMX file cannot be checked for compatibility."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.Database_MetadataNotMapped">
            <summary>
            NotSupportedException with message like "Model compatibility cannot be checked because the EdmMetadata type was not included in the model. Ensure that IncludeMetadataConvention has been added to the DbModelBuilder conventions."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.Database_NoDatabaseMetadata">
            <summary>
            NotSupportedException with message like "Model compatibility cannot be checked because the database does not contain model metadata. Model compatibility can only be checked for databases created using Code First or Code First Migrations."
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:System.Data.Entity.Resources.Error.Database_BadLegacyInitializerEntry(System.Object,System.Object)" -->
        <!-- Badly formed XML comment ignored for member "M:System.Data.Entity.Resources.Error.Database_InitializeFromLegacyConfigFailed(System.Object,System.Object)" -->
        <member name="M:System.Data.Entity.Resources.Error.Database_InitializeFromConfigFailed(System.Object,System.Object)">
            <summary>
            InvalidOperationException with message like "Failed to set database initializer of type '{0}' for DbContext type '{1}' specified in the application configuration. See inner exception for details."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.ContextConfiguredMultipleTimes(System.Object)">
            <summary>
            InvalidOperationException with message like "Configuration for DbContext type '{0}' is specified multiple times in the application configuration. Each context can only be configured once."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.SetConnectionFactoryFromConfigFailed(System.Object)">
            <summary>
            InvalidOperationException with message like "Failed to set Database.DefaultConnectionFactory to an instance of the '{0}' type as specified in the application configuration. See inner exception for details."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.Database_FailedToResolveType(System.Object)">
            <summary>
            InvalidOperationException with message like "The type '{0}' could not be found. The type name must be an assembly-qualified name."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.DbContext_ContextUsedInModelCreating">
            <summary>
            InvalidOperationException with message like "The context cannot be used while the model is being created."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.DbContext_MESTNotSupported">
            <summary>
            InvalidOperationException with message like "The DbContext class cannot be used with models that have multiple entity sets per type (MEST)."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.DbContext_Disposed">
            <summary>
            InvalidOperationException with message like "The operation cannot be completed because the DbContext has been disposed."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.DbContext_ProviderReturnedNullConnection">
            <summary>
            InvalidOperationException with message like "The provider factory returned a null connection."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.DbContext_ProviderNameMissing(System.Object)">
            <summary>
            InvalidOperationException with message like "The connection string '{0}' in the application's configuration file does not contain the required providerName attribute.""
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.DbContext_ConnectionFactoryReturnedNullConnection">
            <summary>
            InvalidOperationException with message like "The DbConnectionFactory instance returned a null connection."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.DbSet_WrongNumberOfKeyValuesPassed">
            <summary>
            ArgumentException with message like "The number of primary key values passed must match number of primary key values defined on the entity."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.DbSet_WrongKeyValueType">
            <summary>
            ArgumentException with message like "The type of one of the primary key values did not match the type defined in the entity. See inner exception for details."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.DbSet_WrongEntityTypeFound(System.Object,System.Object)">
            <summary>
            InvalidOperationException with message like "The entity found was of type {0} when an entity of type {1} was requested."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.DbSet_MultipleAddedEntitiesFound">
            <summary>
            InvalidOperationException with message like "Multiple entities were found in the Added state that match the given primary key values."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.DbSet_DbSetUsedWithComplexType(System.Object)">
            <summary>
            InvalidOperationException with message like "The type '{0}' is mapped as a complex type. The Set method, DbSet objects, and DbEntityEntry objects can only be used with entity types, not complex types."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.DbSet_PocoAndNonPocoMixedInSameAssembly(System.Object)">
            <summary>
            InvalidOperationException with message like "The type '{0}' is not attributed with EdmEntityTypeAttribute but is contained in an assembly attributed with EdmSchemaAttribute. POCO entities that do not use EdmEntityTypeAttribute cannot be contained in the same assembly as non-POCO entities that use EdmEntityTypeAttribute."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.DbSet_EntityTypeNotInModel(System.Object)">
            <summary>
            InvalidOperationException with message like "The entity type {0} is not part of the model for the current context."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.DbQuery_BindingToDbQueryNotSupported">
            <summary>
            NotSupportedException with message like "Data binding directly to a store query (DbSet, DbQuery, DbSqlQuery) is not supported. Instead populate a DbSet with data, for example by calling Load on the DbSet, and then bind to local data. For WPF bind to DbSet.Local. For WinForms bind to DbSet.Local.ToBindingList()."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.DbExtensions_InvalidIncludePathExpression">
            <summary>
            ArgumentException with message like "The Include path expression must refer to a navigation property defined on the type. Use dotted paths for reference navigation properties and the Select operator for collection navigation properties."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.DbContext_ConnectionStringNotFound(System.Object)">
            <summary>
            InvalidOperationException with message like "No connection string named '{0}' could be found in the application config file."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.DbContext_ConnectionHasModel">
            <summary>
            InvalidOperationException with message like "Cannot initialize a DbContext from an entity connection string or an EntityConnection instance together with a DbCompiledModel. If an entity connection string or EntityConnection instance is used, then the model will be created from the metadata in the connection. If a DbCompiledModel is used, then the connection supplied should be a standard database connection (for example, a SqlConnection instance) rather than an entity connection."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.DbCollectionEntry_CannotSetCollectionProp(System.Object,System.Object)">
            <summary>
            NotSupportedException with message like "The collection navigation property '{0}' on the entity of type '{1}' cannot be set because the entity type does not define a navigation property with a set accessor."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.CodeFirstCachedMetadataWorkspace_SameModelDifferentProvidersNotSupported">
            <summary>
            NotSupportedException with message like "Using the same DbCompiledModel to create contexts against different types of database servers is not supported. Instead, create a separate DbCompiledModel for each type of server being used."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.Mapping_MESTNotSupported(System.Object,System.Object,System.Object)">
            <summary>
            InvalidOperationException with message like "Multiple object sets per type are not supported. The object sets '{0}' and '{1}' can both contain instances of type '{2}'."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.DbModelBuilder_MissingRequiredCtor(System.Object)">
            <summary>
            InvalidOperationException with message like "The context type '{0}' must have a public constructor taking an EntityConnection."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.SqlConnectionFactory_MdfNotSupported(System.Object)">
            <summary>
            NotSupportedException with message like "The database name '{0}' is not supported because it is an MDF file name. A full connection string must be provided to attach an MDF file."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.Database_InitializationException">
            <summary>
            DataException with message like "An exception occurred while initializing the database. See the InnerException for details."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.EdmxWriter_EdmxFromObjectContextNotSupported">
            <summary>
            NotSupportedException with message like "Creating a DbModelBuilder or writing the EDMX from a DbContext created using an existing ObjectContext is not supported. EDMX can only be obtained from a Code First DbContext created without using an existing DbCompiledModel."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.EdmxWriter_EdmxFromDbCompiledModelNotSupported">
            <summary>
            NotSupportedException with message like "Creating a DbModelBuilder or writing the EDMX from a DbContext created using an existing DbCompiledModel is not supported. EDMX can only be obtained from a Code First DbContext created without using an existing DbCompiledModel."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.EdmxWriter_EdmxFromModelFirstNotSupported">
            <summary>
            NotSupportedException with message like "Creating a DbModelBuilder or writing the EDMX from a DbContext created using Database First or Model First is not supported. EDMX can only be obtained from a Code First DbContext created without using an existing DbCompiledModel."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.DbContextServices_MissingDefaultCtor(System.Object)">
            <summary>
            InvalidOperationException with message like "The context factory type '{0}' must have a public default constructor."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.CannotCallGenericSetWithProxyType">
            <summary>
            InvalidOperationException with message like "The generic 'Set' method cannot be called with a proxy type. Either use the actual entity type or call the non-generic 'Set' method."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.MaxLengthAttribute_InvalidMaxLength">
            <summary>
            InvalidOperationException with message like "MaxLengthAttribute must have a Length value that is greater than zero. Use MaxLength() without parameters to  indicate that the string or array can have the maximum allowable length."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.MinLengthAttribute_InvalidMinLength">
            <summary>
            InvalidOperationException with message like "MinLengthAttribute must have a Length value that is zero or greater."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.DbConnectionInfo_ConnectionStringNotFound(System.Object)">
            <summary>
            InvalidOperationException with message like "No connection string named '{0}' could be found in the application config file."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.EagerInternalContext_CannotSetConnectionInfo">
            <summary>
            InvalidOperationException with message like "The connection can not be overridden because this context was created from an existing ObjectContext."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.LazyInternalContext_CannotReplaceEfConnectionWithDbConnection">
            <summary>
            InvalidOperationException with message like "Can not override the connection for this context with a standard DbConnection because the original connection was an EntityConnection."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.LazyInternalContext_CannotReplaceDbConnectionWithEfConnection">
            <summary>
            InvalidOperationException with message like "Can not override the connection for this context with an EntityConnection because the original connection was a standard DbConnection."
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.ArgumentNull(System.String)">
            <summary>
            The exception that is thrown when a null reference (Nothing in Visual Basic) is passed to a method that does not accept it as a valid argument.
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.ArgumentOutOfRange(System.String)">
            <summary>
            The exception that is thrown when the value of an argument is outside the allowable range of values as defined by the invoked method.
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.NotImplemented">
            <summary>
            The exception that is thrown when the author has yet to implement the logic at this point in the program. This can act as an exception based TODO tag.
            </summary>
        </member>
        <member name="M:System.Data.Entity.Resources.Error.NotSupported">
            <summary>
            The exception that is thrown when an invoked method is not supported, or when there is an attempt to read, seek, or write to a stream that does not support the invoked functionality. 
            </summary>
        </member>
        <member name="T:System.Data.Entity.Resources.EntityRes">
             <summary>
                AutoGenerated resource class. Usage:
            
                    string s = EntityRes.GetString(EntityRes.MyIdenfitier);
             </summary>
        </member>
        <member name="T:System.Data.Entity.Edm.Common.DataModelAnnotation">
            <summary>
                Allows the construction and modification of a user-specified annotation (name-value pair) on a <see cref="T:System.Data.Entity.Edm.Common.DataModelItem"/> instance.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.Common.DataModelAnnotation.Namespace">
            <summary>
                Gets or sets an optional namespace that can be used to distinguish the annotation from others with the same <see cref="P:System.Data.Entity.Edm.Common.DataModelAnnotation.Name"/> value.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.Common.DataModelAnnotation.Name">
            <summary>
                Gets or sets the name of the annotation.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.Common.DataModelAnnotation.Value">
            <summary>
                Gets or sets the value of the annotation.
            </summary>
        </member>
        <member name="T:System.Data.Entity.Edm.Common.DataModelErrorEventArgs">
            <summary>
            </summary>
        </member>
        <member name="T:System.Data.Entity.Edm.Common.DataModelEventArgs">
            <summary>
                DataModelEventArgs is the base argument type for all events raised by consumers of Entity Data Model (EDM) models.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.Common.DataModelEventArgs.Item">
            <summary>
                Gets a value indicating the <see cref="T:System.Data.Entity.Edm.Common.DataModelItem"/> that caused the event to be raised.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.Common.DataModelErrorEventArgs.PropertyName">
            <summary>
                Gets an optional value indicating which property of the source item caused the event to be raised.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.Common.DataModelErrorEventArgs.ErrorCode">
            <summary>
                Gets a value that identifies the specific error that is being raised.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.Common.DataModelErrorEventArgs.ErrorMessage">
            <summary>
                Gets an optional descriptive message the describes the error that is being raised.
            </summary>
        </member>
        <member name="T:System.Data.Entity.Edm.Db.DbAliasedMetadataItem">
            <summary>
                DbAliasedMetadataItem provides the base type for all Database Metadata types that can have an optional <see cref="P:System.Data.Entity.Edm.Db.DbAliasedMetadataItem.DatabaseIdentifier"/> that should be used instead of the item's <see cref="P:System.Data.Entity.Edm.Db.DbNamedMetadataItem.Name"/> when referring to the item in the database.
            </summary>
        </member>
        <member name="T:System.Data.Entity.Edm.Db.DbNamedMetadataItem">
            <summary>
                NamedDbItem is the base for all types in the Database Metadata construction and modification API with a <see cref="P:System.Data.Entity.Edm.Db.DbNamedMetadataItem.Name"/> property.
            </summary>
        </member>
        <member name="T:System.Data.Entity.Edm.Db.DbMetadataItem">
            <summary>
                The base for all all Database Metadata types that support annotation using <see cref="T:System.Data.Entity.Edm.Common.DataModelAnnotation"/> .
            </summary>
        </member>
        <member name="T:System.Data.Entity.Edm.Db.DbDataModelItem">
            <summary>
                DbDataModelItem is the base for all types in the Database Metadata construction and modification API.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.Db.DbMetadataItem.Annotations">
            <summary>
                Gets or sets the currently assigned annotations.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.Db.DbNamedMetadataItem.Name">
            <summary>
                Gets or sets the currently assigned name.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.Db.DbAliasedMetadataItem.DatabaseIdentifier">
            <summary>
                Gets an optional alternative identifier that should be used when referring to this item in the database.
            </summary>
        </member>
        <member name="T:System.Data.Entity.Edm.Db.DbColumnMetadata">
            <summary>
                When implemented in derived types, allows the construction and modification of a column in a Database Metadata table or row.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.Db.DbColumnMetadata.TypeName">
            <summary>
                Gets or sets a string indicating the database-specific type of the column.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.Db.DbColumnMetadata.IsNullable">
            <summary>
                Gets or sets a value indicating whether the column is nullable.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.Db.DbColumnMetadata.Facets">
            <summary>
                Gets or sets an optional <see cref="T:System.Data.Entity.Edm.Db.DbPrimitiveTypeFacets"/> instance that applies additional constraints to the referenced database-specific type of the column.
            </summary>
        </member>
        <member name="T:System.Data.Entity.Edm.Db.DbDatabaseMetadata">
            <summary>
                Allows the construction and modification of a database in a Database Metadata model.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.Db.DbDatabaseMetadata.Version">
            <summary>
                Gets or sets an optional value that indicates the database model version.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.Db.DbDatabaseMetadata.Schemas">
            <summary>
                Gets or sets the collection of <see cref="T:System.Data.Entity.Edm.Db.DbSchemaMetadata"/> instances that specifies the schemas within the database.
            </summary>
        </member>
        <member name="T:System.Data.Entity.Edm.Db.DbForeignKeyConstraintMetadata">
            <summary>
                Allows the construction and modification of a foreign key constraint sourced by a <see cref="T:System.Data.Entity.Edm.Db.DbTableMetadata"/> instance.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.Db.DbForeignKeyConstraintMetadata.DeleteAction">
            <summary>
                Gets or sets the <see cref="T:System.Data.Entity.Edm.Db.DbOperationAction"/> to take when a delete operation is attempted.
            </summary>
        </member>
        <member name="T:System.Data.Entity.Edm.Db.DbItemKind">
            <summary>
                Indicates which Database Metadata concept is represented by a given item.
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Db.DbItemKind.Database">
            <summary>
                Database Kind
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Db.DbItemKind.Schema">
            <summary>
                Schema Kind
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Db.DbItemKind.ForeignKeyConstraint">
            <summary>
                Foreign Key Constraint Kind
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Db.DbItemKind.Function">
            <summary>
                Function Kind
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Db.DbItemKind.FunctionParameter">
            <summary>
                Function Parameter Kind
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Db.DbItemKind.FunctionType">
            <summary>
                Function Return or Parameter Type Kind
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Db.DbItemKind.RowColumn">
            <summary>
                Row Column Kind
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Db.DbItemKind.Table">
            <summary>
                Table Kind
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Db.DbItemKind.TableColumn">
            <summary>
                Table Column Kind
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Db.DbItemKind.PrimitiveTypeFacets">
            <summary>
                Primitive Facets Kind
            </summary>
        </member>
        <member name="T:System.Data.Entity.Edm.Db.DbOperationAction">
            <summary>
                Specifies the action to take on a given operation.
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Db.DbOperationAction.None">
            <summary>
                Default behavior
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Db.DbOperationAction.Restrict">
            <summary>
                Restrict the operation
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Db.DbOperationAction.Cascade">
            <summary>
                Cascade the operation
            </summary>
        </member>
        <member name="T:System.Data.Entity.Edm.Db.DbPrimitiveTypeFacets">
            <summary>
                Allows the construction and modification of additional constraints that can be applied to a specific use of a primitive type in a Database Metadata item.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.Db.DbPrimitiveTypeFacets.HasValue">
            <summary>
                Returns <code>true</code> if any facet value property currently has a non-null value; otherwise returns <code>false</code> .
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.Db.DbPrimitiveTypeFacets.IsFixedLength">
            <summary>
                Gets or sets an optional value indicating whether the referenced type should be considered to have a fixed or variable length.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.Db.DbPrimitiveTypeFacets.IsMaxLength">
            <summary>
                Gets or sets an optional value indicating whether the referenced type should be considered to have its intrinsic maximum length, rather than a specific value.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.Db.DbPrimitiveTypeFacets.IsUnicode">
            <summary>
                Gets or sets an optional value indicating whether the referenced type should be considered to be Unicode or non-Unicode.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.Db.DbPrimitiveTypeFacets.MaxLength">
            <summary>
                Gets or sets an optional value indicating the current constraint on the type's maximum length.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.Db.DbPrimitiveTypeFacets.Precision">
            <summary>
                Gets or sets an optional value indicating the current constraint on the type's precision.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.Db.DbPrimitiveTypeFacets.Scale">
            <summary>
                Gets or sets an optional value indicating the current constraint on the type's scale.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.Db.DbPrimitiveTypeFacets.IsVariableSrid">
            <summary>
                Gets or sets an optional value indicating the current spatial type's SRID.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.Db.DbPrimitiveTypeFacets.Srid">
            <summary>
                Gets or sets an optional value indicating the current spatial type's SRID.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.Db.DbPrimitiveTypeFacets.IsStrict">
            <summary>
                Gets or sets an optional value indicating whether the spatial type is to be type checked strictly.
            </summary>
        </member>
        <member name="T:System.Data.Entity.Edm.Db.DbSchemaMetadata">
            <summary>
                Allows the construction and modification of a database schema in a <see cref="T:System.Data.Entity.Edm.Db.DbDatabaseMetadata"/> database model.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.Db.DbSchemaMetadata.Tables">
            <summary>
                Gets or sets the collection of <see cref="T:System.Data.Entity.Edm.Db.DbTableMetadata"/> instances that specifies the tables declared within the schema.
            </summary>
        </member>
        <member name="T:System.Data.Entity.Edm.Db.DbSchemaMetadataItem">
            <summary>
                DbSchemaMetadataItem is the base for all types that can be contained in a <see cref="T:System.Data.Entity.Edm.Db.DbSchemaMetadata"/> schema.
            </summary>
        </member>
        <member name="T:System.Data.Entity.Edm.Db.DbTableColumnMetadata">
            <summary>
                Allows the construction and modification of a column in a <see cref="T:System.Data.Entity.Edm.Db.DbTableMetadata"/> table.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.Db.DbTableColumnMetadata.IsPrimaryKeyColumn">
            <summary>
                Gets or sets a value indicating whether the column is part of the table's primary key.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.Db.DbTableColumnMetadata.StoreGeneratedPattern">
            <summary>
                Gets or sets a <see cref="T:System.Data.Entity.Edm.Db.DbStoreGeneratedPattern"/> value indicating if and how the value of the column is automatically generated.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.Db.DbTableColumnMetadata.Collation">
            <summary>
                Gets or sets an optional value indicating the collation specific to this table column.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.Db.DbTableColumnMetadata.DefaultValue">
            <summary>
                Gets or sets an optional value that specifies the default value for the column.
            </summary>
        </member>
        <member name="T:System.Data.Entity.Edm.Db.DbTableMetadata">
            <summary>
                Allows the construction and modification a table in a <see cref="T:System.Data.Entity.Edm.Db.DbSchemaMetadata"/> database schema.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.Db.DbTableMetadata.Columns">
            <summary>
                Gets or sets the collection of <see cref="T:System.Data.Entity.Edm.Db.DbTableColumnMetadata"/> instances that specifies the columns present within the table.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.Db.DbTableMetadata.KeyColumns">
            <summary>
                Gets or sets the collection of <see cref="T:System.Data.Entity.Edm.Db.DbTableColumnMetadata"/> instances from the <see cref="P:System.Data.Entity.Edm.Db.DbTableMetadata.Columns"/> collection of the table that are part of the primary key.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.Db.DbTableMetadata.ForeignKeyConstraints">
            <summary>
                Gets or sets the collection of <see cref="T:System.Data.Entity.Edm.Db.DbForeignKeyConstraintMetadata"/> instances that defines the foreign key constraints sourced from the table.
            </summary>
        </member>
        <member name="T:System.Data.Entity.Edm.Db.DbTypeMetadata">
            <summary>
                Represents a specific use of a type in a Database Metadata item.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.Db.DbTypeMetadata.Facets">
            <summary>
                Gets or sets an optional <see cref="T:System.Data.Entity.Edm.Db.DbPrimitiveTypeFacets"/> instance that applies additional constraints to a referenced primitive type.
            </summary>
            <remarks>
                Accessing this property forces the creation of a DbPrimitiveTypeFacets value if no value has previously been set. Use <see cref="P:System.Data.Entity.Edm.Db.DbTypeMetadata.HasFacets"/> to determine whether or not this property currently has a value.
            </remarks>
        </member>
        <member name="P:System.Data.Entity.Edm.Db.DbTypeMetadata.IsCollection">
            <summary>
                Gets or sets a value indicating whether the represented type is a collection type.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.Db.DbTypeMetadata.IsNullable">
            <summary>
                Gets or sets an optional value indicating whether the referenced type should be considered nullable.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.Db.DbTypeMetadata.IsRow">
            <summary>
                Gets a value indicating whether the type has been configured as a row type by the addition of one or more RowColumns.
            </summary>
        </member>
        <member name="T:System.Data.Entity.Edm.Db.Mapping.DbAssociationEndMapping">
            <summary>
                Represents the mapping of an EDM association end ( <see cref="T:System.Data.Entity.Edm.EdmAssociationEnd"/> ) as a collection of property mappings ( <see cref="T:System.Data.Entity.Edm.Db.Mapping.DbEdmPropertyMapping"/> ).
            </summary>
        </member>
        <member name="T:System.Data.Entity.Edm.Db.Mapping.DbMappingMetadataItem">
            <summary>
                DbMappingMetadataItem is the base for all types in the EDM-to-Database Mapping construction and modification API that support annotation using <see cref="T:System.Data.Entity.Edm.Common.DataModelAnnotation"/> .
            </summary>
        </member>
        <member name="T:System.Data.Entity.Edm.Db.Mapping.DbMappingModelItem">
            <summary>
                DbMappingModelItem is the base for all types in the EDM-to-Database Mapping construction and modification API.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.Db.Mapping.DbMappingMetadataItem.Annotations">
            <summary>
                Gets or sets the currently assigned annotations.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.Db.Mapping.DbAssociationEndMapping.AssociationEnd">
            <summary>
                Gets an <see cref="T:System.Data.Entity.Edm.EdmAssociationEnd"/> value representing the association end that is being mapped.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.Db.Mapping.DbAssociationEndMapping.PropertyMappings">
            <summary>
                Gets the collection of <see cref="T:System.Data.Entity.Edm.Db.Mapping.DbEdmPropertyMapping"/> s that specifies how the association end key properties are mapped to the table.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.Db.Mapping.DbAssociationSetMapping.AssociationSet">
            <summary>
                Gets an <see cref="T:System.Data.Entity.Edm.EdmAssociationSet"/> value representing the association set that is being mapped.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.Db.Mapping.DbAssociationSetMapping.Table">
            <summary>
                Gets a <see cref="T:System.Data.Entity.Edm.Db.DbTableMetadata"/> value representing the table to which the entity type's properties are being mapped.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.Db.Mapping.DbAssociationSetMapping.ColumnConditions">
            <summary>
                Gets the collection of <see cref="T:System.Data.Entity.Edm.Db.Mapping.DbColumnCondition"/> s that specifies the constant or null values that columns in <see cref="P:System.Data.Entity.Edm.Db.Mapping.DbAssociationSetMapping.Table"/> must have for this type mapping to apply.
            </summary>
        </member>
        <member name="T:System.Data.Entity.Edm.Db.Mapping.DbColumnCondition">
            <summary>
                Allows the construction and modification of a condition for a column in a database table.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.Db.Mapping.DbColumnCondition.Column">
            <summary>
                Gets or sets a <see cref="T:System.Data.Entity.Edm.Db.DbTableColumnMetadata"/> value representing the table column which must contain <see cref="P:System.Data.Entity.Edm.Db.Mapping.DbColumnCondition.Value"/> for this condition to hold.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.Db.Mapping.DbColumnCondition.Value">
            <summary>
                Gets or sets the value that <see cref="P:System.Data.Entity.Edm.Db.Mapping.DbColumnCondition.Column"/> must contain for this condition to hold.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.Db.Mapping.DbDatabaseMapping.Model">
            <summary>
                Gets or sets an <see cref="T:System.Data.Entity.Edm.EdmModel"/> value representing the model that is being mapped.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.Db.Mapping.DbDatabaseMapping.Database">
            <summary>
                Gets or sets a <see cref="T:System.Data.Entity.Edm.Db.DbDatabaseMetadata"/> value representing the database that is the target of the mapping.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.Db.Mapping.DbDatabaseMapping.EntityContainerMappings">
            <summary>
                Gets or sets the collection of <see cref="T:System.Data.Entity.Edm.Db.Mapping.DbEntityContainerMapping"/> s that specifies how the model's entity containers are mapped to the database.
            </summary>
        </member>
        <member name="T:System.Data.Entity.Edm.Db.Mapping.DbEdmPropertyMapping">
            <summary>
                Represents the mapping of an entity property to a column in a database table.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.Db.Mapping.DbEdmPropertyMapping.PropertyPath">
            <summary>
                Gets or sets the collection of <see cref="T:System.Data.Entity.Edm.EdmProperty"/> instances that defines the mapped property, beginning from a property declared by the mapped entity type and optionally proceeding through properties of complex property result types.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.Db.Mapping.DbEdmPropertyMapping.Column">
            <summary>
                Gets or sets a <see cref="T:System.Data.Entity.Edm.Db.DbTableColumnMetadata"/> value representing the table column to which the entity property is being mapped.
            </summary>
        </member>
        <member name="T:System.Data.Entity.Edm.Db.Mapping.DbEntityContainerMapping">
            <summary>
                Allows the construction and modification of the mapping of an EDM entity container ( <see cref="T:System.Data.Entity.Edm.EdmEntityContainer"/> ) to a database ( <see cref="T:System.Data.Entity.Edm.Db.DbDatabaseMetadata"/> ).
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.Db.Mapping.DbEntityContainerMapping.EntityContainer">
            <summary>
                Gets or sets an <see cref="T:System.Data.Entity.Edm.EdmEntityContainer"/> value representing the entity container that is being mapped.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.Db.Mapping.DbEntityContainerMapping.EntitySetMappings">
            <summary>
                Gets or sets the collection of <see cref="T:System.Data.Entity.Edm.Db.Mapping.DbEntitySetMapping"/> s that specifies how the container's entity sets are mapped to the database.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.Db.Mapping.DbEntityContainerMapping.AssociationSetMappings">
            <summary>
                Gets the collection of <see cref="T:System.Data.Entity.Edm.Db.Mapping.DbAssociationSetMapping"/> s that specifies how the container's association sets are mapped to the database.
            </summary>
        </member>
        <member name="T:System.Data.Entity.Edm.Db.Mapping.DbEntitySetMapping">
            <summary>
                Allows the construction and modification of the mapping of an EDM entity set ( <see cref="T:System.Data.Entity.Edm.EdmEntitySet"/> ) to a database ( <see cref="T:System.Data.Entity.Edm.Db.DbDatabaseMetadata"/> ).
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.Db.Mapping.DbEntitySetMapping.EntitySet">
            <summary>
                Gets or sets an <see cref="T:System.Data.Entity.Edm.EdmEntitySet"/> value representing the entity set that is being mapped.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.Db.Mapping.DbEntitySetMapping.EntityTypeMappings">
            <summary>
                Gets or sets the collection of <see cref="T:System.Data.Entity.Edm.Db.Mapping.DbEntityTypeMapping"/> s that specifies how the set's entity types are mapped to the database.
            </summary>
        </member>
        <member name="T:System.Data.Entity.Edm.Db.Mapping.DbEntityTypeMapping">
            <summary>
                Allows the construction and modification of a complete or partial mapping of an EDM entity type ( <see cref="T:System.Data.Entity.Edm.EdmEntityType"/> ) or type hierarchy to a specific database table ( <see cref="T:System.Data.Entity.Edm.Db.DbTableMetadata"/> ).
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.Db.Mapping.DbEntityTypeMapping.EntityType">
            <summary>
                Gets or sets an <see cref="T:System.Data.Entity.Edm.EdmEntityType"/> value representing the entity type or hierarchy that is being mapped.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.Db.Mapping.DbEntityTypeMapping.IsHierarchyMapping">
            <summary>
                Gets or sets a value indicating whether this type mapping applies to <see cref="P:System.Data.Entity.Edm.Db.Mapping.DbEntityTypeMapping.EntityType"/> and all its direct or indirect subtypes ( <code>true</code> ), or only to <see cref="P:System.Data.Entity.Edm.Db.Mapping.DbEntityTypeMapping.EntityType"/> ( <code>false</code> ).
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.Db.Mapping.DbEntityTypeMappingFragment.Table">
            <summary>
                Gets a <see cref="T:System.Data.Entity.Edm.Db.DbTableMetadata"/> value representing the table to which the entity type's properties are being mapped.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.Db.Mapping.DbEntityTypeMappingFragment.PropertyMappings">
            <summary>
                Gets the collection of <see cref="T:System.Data.Entity.Edm.Db.Mapping.DbEdmPropertyMapping"/> s that specifies how the type's properties are mapped to the table.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.Db.Mapping.DbEntityTypeMappingFragment.ColumnConditions">
            <summary>
                Gets the collection of <see cref="T:System.Data.Entity.Edm.Db.Mapping.DbColumnCondition"/> s that specifies the constant or null values that columns in <see cref="P:System.Data.Entity.Edm.Db.Mapping.DbEntityTypeMappingFragment.Table"/> must have for this type mapping fragment to apply.
            </summary>
        </member>
        <member name="T:System.Data.Entity.Edm.Db.Mapping.DbMappingItemKind">
            <summary>
                Indicates which EDM-to-Database Mapping concept is represented by a given item.
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Db.Mapping.DbMappingItemKind.DatabaseMapping">
            <summary>
                Database Mapping Kind
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Db.Mapping.DbMappingItemKind.EntityContainerMapping">
            <summary>
                Entity Container Mapping Kind
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Db.Mapping.DbMappingItemKind.EntitySetMapping">
            <summary>
                Entity Set Mapping Kind
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Db.Mapping.DbMappingItemKind.AssociationSetMapping">
            <summary>
                Association Set Mapping Kind
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Db.Mapping.DbMappingItemKind.EntityTypeMapping">
            <summary>
                Entity Type Mapping Kind
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Db.Mapping.DbMappingItemKind.QueryViewMapping">
            <summary>
                Query View Mapping Kind
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Db.Mapping.DbMappingItemKind.EntityTypeMappingFragment">
            <summary>
                Entity Type Mapping Fragment Kind
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Db.Mapping.DbMappingItemKind.EdmPropertyMapping">
            <summary>
                Edm Property Mapping Kind
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Db.Mapping.DbMappingItemKind.AssociationEndMapping">
            <summary>
                Association End Mapping Kind
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Db.Mapping.DbMappingItemKind.ColumnCondition">
            <summary>
                Column Condition Kind
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Db.Mapping.DbMappingItemKind.PropertyCondition">
            <summary>
                Property Condition Kind
            </summary>
        </member>
        <member name="T:System.Data.Entity.Edm.EdmAssociationConstraint">
            <summary>
                Allows the construction and modification of a constraint applied to an Entity Data Model (EDM) association.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.EdmAssociationConstraint.DependentEnd">
            <summary>
                Gets or sets the <see cref="T:System.Data.Entity.Edm.EdmAssociationEnd"/> that represents the 'dependent' end of the constraint; properties from this association end's entity type contribute to the <see cref="P:System.Data.Entity.Edm.EdmAssociationConstraint.DependentProperties"/> collection.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.EdmAssociationConstraint.DependentProperties">
            <summary>
                Gets or sets the collection of <see cref="T:System.Data.Entity.Edm.EdmProperty"/> instances from the <see cref="P:System.Data.Entity.Edm.EdmAssociationConstraint.DependentEnd"/> of the constraint. The values of these properties are constrained against the primary key values of the remaining, 'principal' association end's entity type.
            </summary>
        </member>
        <member name="T:System.Data.Entity.Edm.EdmAssociationEnd">
            <summary>
                Allows the construction and modification of one end of an Entity Data Model (EDM) association.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.EdmAssociationEnd.EntityType">
            <summary>
                Gets or sets the entity type referenced by this association end.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.EdmAssociationEnd.EndKind">
            <summary>
                Gets or sets the <see cref="T:System.Data.Entity.Edm.EdmAssociationEndKind"/> of this association end, which indicates the multiplicity of the end and whether or not it is required.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.EdmAssociationEnd.DeleteAction">
            <summary>
                Gets or sets the <see cref="T:System.Data.Entity.Edm.EdmOperationAction"/> to take when a delete operation is attempted.
            </summary>
        </member>
        <member name="T:System.Data.Entity.Edm.EdmAssociationEndKind">
            <summary>
                Indicates the multiplicity of an <see cref="T:System.Data.Entity.Edm.EdmAssociationEnd"/> and whether or not it is required.
            </summary>
        </member>
        <member name="T:System.Data.Entity.Edm.EdmAssociationSet">
            <summary>
                Allows the construction and modification of an association set in an Entity Data Model (EDM) <see cref="T:System.Data.Entity.Edm.EdmEntityContainer"/> ).
            </summary>
        </member>
        <member name="T:System.Data.Entity.Edm.EdmEntityContainerItem">
            <summary>
                Represents an item in an Entity Data Model (EDM) <see cref="T:System.Data.Entity.Edm.EdmEntityContainer"/> .
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.EdmAssociationSet.ElementType">
            <summary>
                Gets or sets the <see cref="T:System.Data.Entity.Edm.EdmAssociationType"/> that specifies the association type for the set.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.EdmAssociationSet.SourceSet">
            <summary>
                Gets or sets the <see cref="T:System.Data.Entity.Edm.EdmEntitySet"/> that specifies the entity set corresponding to the <see cref="P:System.Data.Entity.Edm.EdmAssociationType.SourceEnd"/> association end for this association set.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.EdmAssociationSet.TargetSet">
            <summary>
                Gets or sets the <see cref="T:System.Data.Entity.Edm.EdmEntitySet"/> that specifies the entity set corresponding to the <see cref="P:System.Data.Entity.Edm.EdmAssociationType.TargetEnd"/> association end for this association set.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:System.Data.Entity.Edm.EdmAssociationType" -->
        <member name="T:System.Data.Entity.Edm.EdmStructuralType">
            <summary>
                The base for all all Entity Data Model (EDM) types that represent a structured type from the EDM type system.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.EdmAssociationType.SourceEnd">
            <summary>
                Gets or sets the <see cref="T:System.Data.Entity.Edm.EdmAssociationEnd"/> that defines the source end of the association.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.EdmAssociationType.TargetEnd">
            <summary>
                Gets or sets the <see cref="T:System.Data.Entity.Edm.EdmAssociationEnd"/> that defines the target end of the association.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.EdmAssociationType.Constraint">
            <summary>
                Gets or sets the optional constraint that indicates whether the relationship is an independent association (no constraint present) or a foreign key relationship ( <see cref="T:System.Data.Entity.Edm.EdmAssociationConstraint"/> specified).
            </summary>
        </member>
        <member name="T:System.Data.Entity.Edm.EdmCollectionKind">
            <summary>
                Collection semantics for properties.
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.EdmCollectionKind.Default">
            <summary>
                The property does not have a collection type or does not specify explicit collection semantics.
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.EdmCollectionKind.Bag">
            <summary>
                The property is an unordered collection that may contain duplicates.
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.EdmCollectionKind.List">
            <summary>
                The property is an ordered collection that may contain duplicates.
            </summary>
        </member>
        <member name="T:System.Data.Entity.Edm.EdmComplexType">
            <summary>
                Allows the construction and modification of a complex type in an Entity Data Model (EDM) <see cref="T:System.Data.Entity.Edm.EdmNamespace"/> .
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.EdmComplexType.BaseType">
            <summary>
                Gets or sets the optional <see cref="T:System.Data.Entity.Edm.EdmComplexType"/> that indicates the base complex type of the complex type.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.EdmComplexType.IsAbstract">
            <summary>
                Gets or sets a value indicating whether the complex type is abstract.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.EdmComplexType.DeclaredProperties">
            <summary>
                Gets or sets the collection of <see cref="T:System.Data.Entity.Edm.EdmProperty"/> instances that describe the (scalar or complex) properties of the complex type.
            </summary>
        </member>
        <member name="T:System.Data.Entity.Edm.EdmConcurrencyMode">
            <summary>
                Concurrency mode for properties.
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.EdmConcurrencyMode.None">
            <summary>
                Default concurrency mode: the property is never validated at write time
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.EdmConcurrencyMode.Fixed">
            <summary>
                Fixed concurrency mode: the property is always validated at write time
            </summary>
        </member>
        <member name="T:System.Data.Entity.Edm.EdmEntityContainer">
            <summary>
                Allows the construction and modification of an entity container in an Entity Data Model (EDM) <see cref="T:System.Data.Entity.Edm.EdmModel"/> .
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.EdmEntityContainer.ContainerItems">
            <summary>
                Gets all <see cref="T:System.Data.Entity.Edm.EdmEntityContainerItem"/> s declared within the namspace. Includes <see cref="T:System.Data.Entity.Edm.EdmAssociationSet"/> s and <see cref="T:System.Data.Entity.Edm.EdmEntitySet"/> s.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.EdmEntityContainer.AssociationSets">
            <summary>
                Gets or sets the collection of <see cref="T:System.Data.Entity.Edm.EdmAssociationSet"/> s that specifies the association sets within the container.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.EdmEntityContainer.EntitySets">
            <summary>
                Gets or sets the collection of <see cref="T:System.Data.Entity.Edm.EdmEntitySet"/> s that specifies the entity sets within the container.
            </summary>
        </member>
        <member name="T:System.Data.Entity.Edm.EdmEntitySet">
            <summary>
                Allows the construction and modification of an entity set in an Entity Data Model (EDM) <see cref="T:System.Data.Entity.Edm.EdmEntityContainer"/> .
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.EdmEntitySet.ElementType">
            <summary>
                Gets or sets the <see cref="T:System.Data.Entity.Edm.EdmEntityType"/> that specifies the entity type for the set.
            </summary>
        </member>
        <member name="T:System.Data.Entity.Edm.EdmEntityType">
            <summary>
                Allows the construction and modification of an entity type in an Entity Data Model (EDM) <see cref="T:System.Data.Entity.Edm.EdmNamespace"/> .
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.EdmEntityType.BaseType">
            <summary>
                Gets or sets the optional <see cref="T:System.Data.Entity.Edm.EdmEntityType"/> that indicates the base entity type of the entity type.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.EdmEntityType.IsAbstract">
            <summary>
                Gets or sets a value indicating whether the entity type is abstract.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.EdmEntityType.DeclaredProperties">
            <summary>
                Gets or sets the collection of <see cref="T:System.Data.Entity.Edm.EdmProperty"/> s that specifies the properties declared by the entity type.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.EdmEntityType.DeclaredKeyProperties">
            <summary>
                Gets or sets the collection of <see cref="T:System.Data.Entity.Edm.EdmProperty"/> s that indicates which properties from the <see cref="P:System.Data.Entity.Edm.EdmEntityType.DeclaredProperties"/> collection are part of the entity key.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.EdmEntityType.DeclaredNavigationProperties">
            <summary>
                Gets or sets the optional collection of <see cref="T:System.Data.Entity.Edm.EdmNavigationProperty"/> s that specifies the navigation properties declared by the entity type.
            </summary>
        </member>
        <member name="T:System.Data.Entity.Edm.EdmItemKind">
            <summary>
                Indicates which Entity Data Model (EDM) concept is represented by a given item.
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.EdmItemKind.AssociationEnd">
            <summary>
                Association End Kind
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.EdmItemKind.AssociationSet">
            <summary>
                Association Set Kind
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.EdmItemKind.AssociationType">
            <summary>
                Association Type Kind
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.EdmItemKind.CollectionType">
            <summary>
                Collection Type Kind
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.EdmItemKind.ComplexType">
            <summary>
                Complex Type Kind
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.EdmItemKind.EntityContainer">
            <summary>
                Entity Container Kind
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.EdmItemKind.EntitySet">
            <summary>
                Entity Set Kind
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.EdmItemKind.EntityType">
            <summary>
                Entity Type Kind
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.EdmItemKind.FunctionGroup">
            <summary>
                Function Group Kind
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.EdmItemKind.FunctionOverload">
            <summary>
                Function Overload Kind
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.EdmItemKind.FunctionImport">
            <summary>
                Function Import Kind
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.EdmItemKind.FunctionParameter">
            <summary>
                Function Parameter Kind
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.EdmItemKind.NavigationProperty">
            <summary>
                Navigation Property Kind
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.EdmItemKind.Property">
            <summary>
                EdmProperty Type Kind
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.EdmItemKind.AssociationConstraint">
            <summary>
                Association Constraint Type Kind
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.EdmItemKind.RefType">
            <summary>
                Ref Type Kind
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.EdmItemKind.RowColumn">
            <summary>
                Row Column Kind
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.EdmItemKind.RowType">
            <summary>
                Row Type Kind
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.EdmItemKind.TypeReference">
            <summary>
                Type Reference Kind
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.EdmItemKind.Model">
            <summary>
                Model Kind
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.EdmItemKind.Namespace">
            <summary>
                Namespace Kind
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.EdmItemKind.PrimitiveFacets">
            <summary>
                Primitive Facets Kind
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.EdmItemKind.PrimitiveType">
            <summary>
                Primitive Type Kind
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.EdmItemKind.EnumType">
            <summary>
                Enum Type Kind
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.EdmItemKind.EnumTypeMember">
            <summary>
                Enum Type Member Kind
            </summary>
        </member>
        <member name="T:System.Data.Entity.Edm.EdmModel">
            <summary>
                EdmModel is the top-level container for namespaces and entity containers belonging to the same logical Entity Data Model (EDM) model.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.EdmModel.Version">
            <summary>
                Gets or sets an optional value that indicates the entity model version.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.EdmModel.Containers">
            <summary>
                Gets or sets the containers declared within the model.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.EdmModel.Namespaces">
            <summary>
                Gets or sets the namespaces declared within the model.
            </summary>
        </member>
        <member name="T:System.Data.Entity.Edm.EdmNamespace">
            <summary>
                Allows the construction and modification of a namespace in an <see cref="T:System.Data.Entity.Edm.EdmModel"/> .
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.EdmNamespace.NamespaceItems">
            <summary>
                Gets all <see cref="T:System.Data.Entity.Edm.EdmNamespaceItem"/> s declared within the namspace. Includes <see cref="T:System.Data.Entity.Edm.EdmAssociationType"/> s, <see cref="T:System.Data.Entity.Edm.EdmComplexType"/> s, <see cref="T:System.Data.Entity.Edm.EdmEntityType"/> s.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.EdmNamespace.AssociationTypes">
            <summary>
                Gets or sets the <see cref="T:System.Data.Entity.Edm.EdmAssociationType"/> s declared within the namespace.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.EdmNamespace.ComplexTypes">
            <summary>
                Gets or sets the <see cref="T:System.Data.Entity.Edm.EdmComplexType"/> s declared within the namespace.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.EdmNamespace.EntityTypes">
            <summary>
                Gets or sets the <see cref="T:System.Data.Entity.Edm.EdmEntityType"/> s declared within the namespace.
            </summary>
        </member>
        <member name="T:System.Data.Entity.Edm.EdmNavigationProperty">
            <summary>
                Allows the construction and modification of an Entity Data Model (EDM) navigation property.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.EdmNavigationProperty.Association">
            <summary>
                Gets or sets the <see cref="T:System.Data.Entity.Edm.EdmAssociationType"/> that specifies the association over which navigation takes place.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.EdmNavigationProperty.ResultEnd">
            <summary>
                Gets or sets the <see cref="T:System.Data.Entity.Edm.EdmAssociationEnd"/> that specifies which association end is the 'destination' end of the navigation and produces the navigation property result.
            </summary>
        </member>
        <member name="T:System.Data.Entity.Edm.EdmOperationAction">
            <summary>
                Specifies the action to take on a given operation. <seealso cref="P:System.Data.Entity.Edm.EdmAssociationEnd.DeleteAction"/>
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.EdmOperationAction.None">
            <summary>
                Default behavior
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.EdmOperationAction.Restrict">
            <summary>
                Restrict the operation
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.EdmOperationAction.Cascade">
            <summary>
                Cascade the operation
            </summary>
        </member>
        <member name="T:System.Data.Entity.Edm.EdmPrimitiveType">
            <summary>
                Represents one of the fixed set of Entity Data Model (EDM) primitive types.
            </summary>
        </member>
        <member name="T:System.Data.Entity.Edm.EdmScalarType">
            <summary>
                The base for all all Entity Data Model (EDM) types that represent a scalar type from the EDM type system.
            </summary>
        </member>
        <member name="M:System.Data.Entity.Edm.EdmPrimitiveType.TryGetByName(System.String,System.Data.Entity.Edm.EdmPrimitiveType@)">
            <summary>
                Retrieves the EdmPrimitiveType instance with the <see cref="T:System.Data.Entity.Edm.EdmPrimitiveTypeKind"/> corresponding to the specified <paramref name="primitiveTypeName"/> value, if any.
            </summary>
            <param name="primitiveTypeName"> The name of the primitive type instance to retrieve </param>
            <param name="primitiveType"> The EdmPrimitiveType with the specified name, if successful; otherwise <c>null</c> . </param>
            <returns> <c>true</c> if the given name corresponds to an EDM primitive type name; otherwise <c>false</c> . </returns>
        </member>
        <member name="P:System.Data.Entity.Edm.EdmPrimitiveType.Binary">
            <summary>
                Gets the EdmPrimitiveType instance that represents the <see cref="F:System.Data.Entity.Edm.EdmPrimitiveTypeKind.Binary"/> primitive type.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.EdmPrimitiveType.Boolean">
            <summary>
                Gets the EdmPrimitiveType instance that represents the <see cref="F:System.Data.Entity.Edm.EdmPrimitiveTypeKind.Boolean"/> primitive type.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.EdmPrimitiveType.Byte">
            <summary>
                Gets the EdmPrimitiveType instance that represents the <see cref="F:System.Data.Entity.Edm.EdmPrimitiveTypeKind.Byte"/> primitive type.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.EdmPrimitiveType.DateTime">
            <summary>
                Gets the EdmPrimitiveType instance that represents the <see cref="F:System.Data.Entity.Edm.EdmPrimitiveTypeKind.DateTime"/> primitive type.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.EdmPrimitiveType.DateTimeOffset">
            <summary>
                Gets the EdmPrimitiveType instance that represents the <see cref="F:System.Data.Entity.Edm.EdmPrimitiveTypeKind.DateTimeOffset"/> primitive type.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.EdmPrimitiveType.Decimal">
            <summary>
                Gets the EdmPrimitiveType instance that represents the <see cref="F:System.Data.Entity.Edm.EdmPrimitiveTypeKind.Decimal"/> primitive type.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.EdmPrimitiveType.Double">
            <summary>
                Gets the EdmPrimitiveType instance that represents the <see cref="F:System.Data.Entity.Edm.EdmPrimitiveTypeKind.Double"/> primitive type.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.EdmPrimitiveType.Guid">
            <summary>
                Gets the EdmPrimitiveType instance that represents the <see cref="F:System.Data.Entity.Edm.EdmPrimitiveTypeKind.Guid"/> primitive type.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.EdmPrimitiveType.Int16">
            <summary>
                Gets the EdmPrimitiveType instance that represents the <see cref="F:System.Data.Entity.Edm.EdmPrimitiveTypeKind.Int16"/> primitive type.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.EdmPrimitiveType.Int32">
            <summary>
                Gets the EdmPrimitiveType instance that represents the <see cref="F:System.Data.Entity.Edm.EdmPrimitiveTypeKind.Int32"/> primitive type.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.EdmPrimitiveType.Int64">
            <summary>
                Gets the EdmPrimitiveType instance that represents the <see cref="F:System.Data.Entity.Edm.EdmPrimitiveTypeKind.Int64"/> primitive type.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.EdmPrimitiveType.SByte">
            <summary>
                Gets the EdmPrimitiveType instance that represents the <see cref="F:System.Data.Entity.Edm.EdmPrimitiveTypeKind.SByte"/> primitive type.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.EdmPrimitiveType.Single">
            <summary>
                Gets the EdmPrimitiveType instance that represents the <see cref="F:System.Data.Entity.Edm.EdmPrimitiveTypeKind.Single"/> primitive type.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.EdmPrimitiveType.String">
            <summary>
                Gets the EdmPrimitiveType instance that represents the <see cref="F:System.Data.Entity.Edm.EdmPrimitiveTypeKind.String"/> primitive type.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.EdmPrimitiveType.Time">
            <summary>
                Gets the EdmPrimitiveType instance that represents the <see cref="F:System.Data.Entity.Edm.EdmPrimitiveTypeKind.Time"/> primitive type.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.EdmPrimitiveType.PrimitiveTypeKind">
            <summary>
                Gets an <see cref="T:System.Data.Entity.Edm.EdmPrimitiveTypeKind"/> value that indicates which Entity Data Model (EDM) primitive type this type represents.
            </summary>
        </member>
        <member name="T:System.Data.Entity.Edm.EdmPrimitiveTypeFacets">
            <summary>
                Allows the construction and modification of additional constraints that can be applied to a specific use of a primitive type in an Entity Data Model (EDM) item. See <see cref="T:System.Data.Entity.Edm.EdmTypeReference"/> .
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.EdmPrimitiveTypeFacets.HasValue">
            <summary>
                Returns <code>true</code> if any facet value property currently has a non-null value; otherwise returns <code>false</code> .
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.EdmPrimitiveTypeFacets.MaxLength">
            <summary>
                Gets or sets an optional value indicating the current constraint on the type's maximum length.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.EdmPrimitiveTypeFacets.IsMaxLength">
            <summary>
                Gets or sets an optional value indicating whether the referenced type should be considered to have its intrinsic maximum length, rather than a specific value.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.EdmPrimitiveTypeFacets.IsFixedLength">
            <summary>
                Gets or sets an optional value indicating whether the referenced type should be considered to have a fixed or variable length.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.EdmPrimitiveTypeFacets.IsUnicode">
            <summary>
                Gets or sets an optional value indicating whether the referenced type should be considered to be Unicode or non-Unicode.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.EdmPrimitiveTypeFacets.Precision">
            <summary>
                Gets or sets an optional value indicating the current constraint on the type's precision.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.EdmPrimitiveTypeFacets.Scale">
            <summary>
                Gets or sets an optional value indicating the current constraint on the type's scale.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.EdmPrimitiveTypeFacets.IsVariableSrid">
            <summary>
                Gets or sets an optional value indicating that the current spatial type's SRID is unconstrained.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.EdmPrimitiveTypeFacets.Srid">
            <summary>
                Gets or sets an optional value indicating the current spatial type's SRID.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.EdmPrimitiveTypeFacets.IsStrict">
            <summary>
                Gets or sets an optional value indicating whether the spatial type is to be type checked strictly.
            </summary>
        </member>
        <member name="T:System.Data.Entity.Edm.EdmPrimitiveTypeKind">
            <summary>
                Primitive Types as defined by the Entity Data Model (EDM).
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.EdmPrimitiveTypeKind.Binary">
            <summary>
                Binary Type Kind
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.EdmPrimitiveTypeKind.Boolean">
            <summary>
                Boolean Type Kind
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.EdmPrimitiveTypeKind.Byte">
            <summary>
                Byte Type Kind
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.EdmPrimitiveTypeKind.DateTime">
            <summary>
                DateTime Type Kind
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.EdmPrimitiveTypeKind.Decimal">
            <summary>
                Decimal Type Kind
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.EdmPrimitiveTypeKind.Double">
            <summary>
                Double Type Kind
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.EdmPrimitiveTypeKind.Guid">
            <summary>
                Guid Type Kind
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.EdmPrimitiveTypeKind.Single">
            <summary>
                Single Type Kind
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.EdmPrimitiveTypeKind.SByte">
            <summary>
                SByte Type Kind
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.EdmPrimitiveTypeKind.Int16">
            <summary>
                Int16 Type Kind
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.EdmPrimitiveTypeKind.Int32">
            <summary>
                Int32 Type Kind
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.EdmPrimitiveTypeKind.Int64">
            <summary>
                Int64 Type Kind
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.EdmPrimitiveTypeKind.String">
            <summary>
                String Type Kind
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.EdmPrimitiveTypeKind.Time">
            <summary>
                Time Type Kind
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.EdmPrimitiveTypeKind.DateTimeOffset">
            <summary>
                DateTimeOffset Type Kind
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.EdmPrimitiveTypeKind.Geometry">
            <summary>
                Geometry Type Kind
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.EdmPrimitiveTypeKind.Geography">
            <summary>
                Geography Type Kind
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.EdmPrimitiveTypeKind.GeometricPoint">
            <summary>
                Geometric point type kind
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.EdmPrimitiveTypeKind.GeometricLinestring">
            <summary>
                Geometric linestring type kind
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.EdmPrimitiveTypeKind.GeometricPolygon">
            <summary>
                Geometric polygon type kind
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.EdmPrimitiveTypeKind.GeometricMultiPoint">
            <summary>
                Geometric multi-point type kind
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.EdmPrimitiveTypeKind.GeometricMultiLinestring">
            <summary>
                Geometric multi-linestring type kind
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.EdmPrimitiveTypeKind.GeometricMultiPolygon">
            <summary>
                Geometric multi-polygon type kind
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.EdmPrimitiveTypeKind.GeometryCollection">
            <summary>
                Geometric collection type kind
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.EdmPrimitiveTypeKind.GeographicPoint">
            <summary>
                Geographic point type kind
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.EdmPrimitiveTypeKind.GeographicLinestring">
            <summary>
                Geographic linestring type kind
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.EdmPrimitiveTypeKind.GeographicPolygon">
            <summary>
                Geographic polygon type kind
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.EdmPrimitiveTypeKind.GeographicMultiPoint">
            <summary>
                Geographic multi-point type kind
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.EdmPrimitiveTypeKind.GeographicMultiLinestring">
            <summary>
                Geographic multi-linestring type kind
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.EdmPrimitiveTypeKind.GeographicMultiPolygon">
            <summary>
                Geographic multi-polygon type kind
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.EdmPrimitiveTypeKind.GeographyCollection">
            <summary>
                Geographic collection type kind
            </summary>
        </member>
        <member name="T:System.Data.Entity.Edm.EdmProperty">
            <summary>
                Allows the construction and modification of a primitive- or complex-valued property of an Entity Data Model (EDM) entity or complex type.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.EdmProperty.CollectionKind">
            <summary>
                Gets or sets an <see cref="T:System.Data.Entity.Edm.EdmCollectionKind"/> value that indicates which collection semantics - if any - apply to the property.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.EdmProperty.ConcurrencyMode">
            <summary>
                Gets or sets a <see cref="T:System.Data.Entity.Edm.EdmConcurrencyMode"/> value that indicates whether the property is used for concurrency validation.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.EdmProperty.DefaultValue">
            <summary>
                Gets or sets on optional value that indicates an initial default value for the property.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.EdmProperty.PropertyType">
            <summary>
                Gets or sets an <see cref="T:System.Data.Entity.Edm.EdmTypeReference"/> that specifies the result type of the property.
            </summary>
        </member>
        <member name="T:System.Data.Entity.Edm.EdmStructuralTypeMemberCollection">
            <summary>
                Enumerates all <see cref="T:System.Data.Entity.Edm.EdmStructuralMember"/> s declared or inherited by an <see cref="T:System.Data.Entity.Edm.EdmStructuralType"/> .
            </summary>
        </member>
        <member name="T:System.Data.Entity.Edm.EdmTypeReference">
            <summary>
                Allows the construction and modification of a specific use of a type in an Entity Data Model (EDM) item. See <see cref="P:System.Data.Entity.Edm.EdmProperty.PropertyType"/> for examples.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.EdmTypeReference.CollectionRank">
            <summary>
                Gets or sets a value indicating the collection rank of the type reference. A collection rank greater than zero indicates that the type reference represents a collection of its referenced <see cref="P:System.Data.Entity.Edm.EdmTypeReference.EdmType"/> .
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.EdmTypeReference.EdmType">
            <summary>
                Gets or sets a value indicating the <see cref="T:System.Data.Entity.Edm.EdmDataModelType"/> referenced by this type reference.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.EdmTypeReference.IsNullable">
            <summary>
                Gets or sets an optional value indicating whether the referenced type should be considered nullable.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.EdmTypeReference.PrimitiveTypeFacets">
            <summary>
                Gets or sets an optional <see cref="T:System.Data.Entity.Edm.EdmPrimitiveTypeFacets"/> instance that applies additional constraints to a referenced primitive type.
            </summary>
            <remarks>
                Accessing this property forces the creation of an EdmPrimitiveTypeFacets value if no value has previously been set. Use <see cref="P:System.Data.Entity.Edm.EdmTypeReference.HasFacets"/> to determine whether or not this property currently has a value.
            </remarks>
        </member>
        <member name="P:System.Data.Entity.Edm.EdmTypeReference.HasFacets">
            <summary>
                Gets a value indicating whether the <see cref="P:System.Data.Entity.Edm.EdmTypeReference.PrimitiveTypeFacets"/> property of this type reference has been assigned an <see cref="T:System.Data.Entity.Edm.EdmPrimitiveTypeFacets"/> value with at least one facet value specified.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.EdmTypeReference.IsCollectionType">
            <summary>
                Indicates whether this type reference represents a collection of its referenced <see cref="P:System.Data.Entity.Edm.EdmTypeReference.EdmType"/> (when <see cref="P:System.Data.Entity.Edm.EdmTypeReference.CollectionRank"/> is greater than zero) or not.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.EdmTypeReference.IsComplexType">
            <summary>
                Indicates whether the <see cref="P:System.Data.Entity.Edm.EdmTypeReference.EdmType"/> property of this type reference currently refers to an <see cref="T:System.Data.Entity.Edm.EdmComplexType"/> , is not a collection type, and does not have primitive facet values specified.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.EdmTypeReference.ComplexType">
            <summary>
                Gets the <see cref="T:System.Data.Entity.Edm.EdmComplexType"/> currently referred to by this type reference, or <code>null</code> if the type reference is a collection type or does not refer to a complex type.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.EdmTypeReference.IsPrimitiveType">
            <summary>
                Indicates whether the <see cref="P:System.Data.Entity.Edm.EdmTypeReference.EdmType"/> property of this type reference currently refers to an <see cref="T:System.Data.Entity.Edm.EdmPrimitiveType"/> and is not a collection type.
            </summary>
        </member>
        <member name="P:System.Data.Entity.Edm.EdmTypeReference.PrimitiveType">
            <summary>
                Gets the <see cref="T:System.Data.Entity.Edm.EdmPrimitiveType"/> currently referred to by this type reference, or <code>null</code> if the type reference is a collection type or does not refer to a primitive type.
            </summary>
        </member>
        <member name="T:System.Data.Entity.Edm.Internal.EdmConstants">
            <summary>
                Contains constant values that apply to the EDM model, regardless of source (for CSDL specific constants see <see cref="T:System.Data.Entity.Edm.Parsing.Xml.Internal.Csdl.CsdlConstants"/> ).
            </summary>
        </member>
        <member name="M:System.Data.Entity.Edm.Internal.EdmUtil.IsValidLanguageIndependentIdentifier(System.String)">
            <summary>
                Parsing code taken from System.dll's System.CodeDom.Compiler.CodeGenerator.IsValidLanguageIndependentIdentifier(string) method to avoid LinkDemand needed to call this method
            </summary>
        </member>
        <member name="M:System.Data.Entity.Edm.Internal.EdmUtil.IsValidUndottedName(System.String)">
            <summary>
            </summary>
            <param name = "name"> </param>
            <returns> </returns>
        </member>
        <member name="T:System.Data.Entity.Edm.Parsing.Xml.Internal.Csdl.CsdlConstants">
            <summary>
                Constants for CSDL XML.
            </summary>
        </member>
        <member name="T:System.Data.Entity.Edm.Parsing.Xml.Internal.Msl.MslConstants">
            <summary>
                Constants for C-S MSL XML.
            </summary>
        </member>
        <member name="T:System.Data.Entity.Edm.Parsing.Xml.Internal.Ssdl.SsdlConstants">
            <summary>
                Constants for SSDL XML.
            </summary>
        </member>
        <member name="T:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode">
            <summary>
                The acceptable range for this enum is 0000 - 0999; the range 10,000-15,000 is reserved for tools.
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.InvalidErrorCodeValue">
            <summary>
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.SecurityError">
            <summary>
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.IOException">
            <summary>
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.XmlError">
            <summary>
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.TooManyErrors">
            <summary>
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.MalformedXml">
            <summary>
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.UnexpectedXmlNodeType">
            <summary>
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.UnexpectedXmlAttribute">
            <summary>
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.UnexpectedXmlElement">
            <summary>
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.TextNotAllowed">
            <summary>
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.EmptyFile">
            <summary>
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.XsdError">
            <summary>
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.InvalidAlias">
            <summary>
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.MissingAttribute">
            <summary>
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.IntegerExpected">
            <summary>
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.InvalidName">
            <summary>
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.AlreadyDefined">
            <summary>
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.ElementNotInSchema">
            <summary>
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.InvalidBaseType">
            <summary>
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.NoConcreteDescendants">
            <summary>
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.CycleInTypeHierarchy">
            <summary>
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.InvalidVersionNumber">
            <summary>
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.InvalidSize">
            <summary>
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.InvalidBoolean">
            <summary>
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.BadType">
            <summary>
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.InvalidVersioningClass">
            <summary>
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.InvalidVersionIntroduced">
            <summary>
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.BadNamespace">
            <summary>
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.UnresolvedReferenceSchema">
            <summary>
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.NotInNamespace">
            <summary>
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.NotUnnestedType">
            <summary>
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.BadProperty">
            <summary>
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.UndefinedProperty">
            <summary>
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.InvalidPropertyType">
            <summary>
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.InvalidAsNestedType">
            <summary>
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.InvalidChangeUnit">
            <summary>
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.UnauthorizedAccessException">
            <summary>
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.PrecisionOutOfRange">
            <summary>
                Precision out of range
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.ScaleOutOfRange">
            <summary>
                Scale out of range
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.DefaultNotAllowed">
            <summary>
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.InvalidDefault">
            <summary>
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.RequiredFacetMissing">
            <summary>
                One of the required facets is missing
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.BadImageFormatException">
            <summary>
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.MissingSchemaXml">
            <summary>
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.BadPrecisionAndScale">
            <summary>
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.InvalidChangeUnitUsage">
            <summary>
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.NameTooLong">
            <summary>
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.CircularlyDefinedType">
            <summary>
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.InvalidAssociation">
            <summary>
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.FacetNotAllowedByType">
            <summary>
                The facet isn't allow by the property type.
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.ConstantFacetSpecifiedInSchema">
            <summary>
                This facet value is constant and is specified in the schema
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.BadNavigationProperty">
            <summary>
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.InvalidKey">
            <summary>
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.InvalidMultiplicity">
            <summary>
                Multiplicity value was malformed
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.InvalidAction">
            <summary>
                The value for the Action attribute is invalid or not allowed in the current context
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.InvalidOperation">
            <summary>
                An error occurred processing the On&lt;Operation&gt; elements
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.InvalidContainerTypeForEnd">
            <summary>
                Ends were given for the Property element of a EntityContainer that is not a RelationshipSet
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.InvalidEndEntitySet">
            <summary>
                The extent name used in the EntittyContainerType End does not match the name of any of the EntityContainerProperties in the containing EntityContainer
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.AmbiguousEntityContainerEnd">
            <summary>
                An end element was not given, and cannot be inferred because too many EntityContainerEntitySet elements that are good possibilities.
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.MissingExtentEntityContainerEnd">
            <summary>
                An end element was not given, and cannot be inferred because there is no EntityContainerEntitySets that are the correct type to be used as an EntitySet.
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.BadParameterDirection">
            <summary>
                Not a valid parameter direction for the parameter in a function
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.FailedInference">
            <summary>
                Unable to infer an optional schema part, to resolve this; be more explicit
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.InvalidFacetInProviderManifest">
            <summary>
                Invalid facet attribute(s) specified in provider manifest
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.InvalidRoleInRelationshipConstraint">
            <summary>
                Invalid role value in the relationship constraint
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.InvalidPropertyInRelationshipConstraint">
            <summary>
                Invalid Property in relationship constraint
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.TypeMismatchRelationshipConstraint">
            <summary>
                Type mismatch between ToProperty and FromProperty in the relationship constraint
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.InvalidMultiplicityInRoleInRelationshipConstraint">
            <summary>
                Invalid multiplicity in FromRole in the relationship constraint
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.MismatchNumberOfPropertiesInRelationshipConstraint">
            <summary>
                The number of properties in the FromProperty and ToProperty in the relationship constraint must be identical
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.MissingPropertyInRelationshipConstraint">
            <summary>
                No Properties defined in either FromProperty or ToProperty in the relationship constraint
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.MissingConstraintOnRelationshipType">
            <summary>
                Missing constraint in relationship type in ssdl
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.SameRoleReferredInReferentialConstraint">
            <summary>
                Same role referred in the ToRole and FromRole of a referential constraint
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.InvalidValueForParameterTypeSemantics">
            <summary>
                Invalid value for attribute ParameterTypeSemantics
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.InvalidRelationshipEndType">
            <summary>
                Invalid type used for a Relationship End Type
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.InvalidPrimitiveTypeKind">
            <summary>
                Invalid PrimitiveTypeKind
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.InvalidTypeConversionDestinationType">
            <summary>
                Invalid TypeConversion DestinationType
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.ByteValueExpected">
            <summary>
                Expected a integer value between 0 - 255
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.FunctionWithNonScalarTypeNotSupported">
            <summary>
                Invalid Type specified in function
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.PrecisionMoreThanAllowedMax">
            <summary>
                Precision must not be greater than 28
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.EntityKeyMustBeScalar">
            <summary>
                Properties that are part of entity key must be of scalar type
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.BinaryEntityKeyCurrentlyNotSupported">
            <summary>
                Binary type properties which are part of entity key are currently not supported
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.NoPreferredMappingForPrimitiveTypeKind">
            <summary>
                The primitive type kind does not have a preferred mapping
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.TooManyPreferredMappingsForPrimitiveTypeKind">
            <summary>
                More than one PreferredMapping for a PrimitiveTypeKind
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.EndWithManyMultiplicityCannotHaveOperationsSpecified">
            <summary>
                End with * multiplicity cannot have operations specified
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.EntitySetTypeHasNoKeys">
            <summary>
                EntitySet type has no keys
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.InvalidNumberOfParametersForAggregateFunction">
            <summary>
                InvalidNumberOfParametersForAggregateFunction
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.InvalidParameterTypeForAggregateFunction">
            <summary>
                InvalidParameterTypeForAggregateFunction
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.ComposableFunctionWithoutReturnType">
            <summary>
                Composable functions must declare a return type.
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.NonComposableFunctionWithReturnType">
            <summary>
                Non-composable functions must not declare a return type.
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.NonComposableFunctionAttributesNotValid">
            <summary>
                Non-composable functions do not permit the aggregate; niladic; or built-in attributes.
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.ComposableFunctionWithCommandText">
            <summary>
                Composable functions can not include command text attribute.
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.FunctionDeclaresCommandTextAndStoreFunctionName">
            <summary>
                Functions should not declare both a store name and command text (only one or the other can be used).
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.SystemNamespace">
            <summary>
                SystemNamespace
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.EmptyDefiningQuery">
            <summary>
                Empty DefiningQuery text
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.TableAndSchemaAreMutuallyExclusiveWithDefiningQuery">
            <summary>
                Schema, Table and DefiningQuery are all specified, and are mutually exclusive
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.InvalidConcurrencyMode">
            <summary>
                ConcurrencyMode value was malformed
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.ConcurrencyRedefinedOnSubTypeOfEntitySetType">
            <summary>
                Concurrency can't change for any sub types of an EntitySet type.
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.FunctionImportUnsupportedReturnType">
            <summary>
                Function import return type must be either empty, a collection of entities, or a singleton scalar.
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.FunctionImportUnknownEntitySet">
            <summary>
                Function import specifies a non-existent entity set.
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.FunctionImportReturnsEntitiesButDoesNotSpecifyEntitySet">
            <summary>
                Function import specifies entity type return but no entity set.
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.FunctionImportEntityTypeDoesNotMatchEntitySet">
            <summary>
                Function import specifies entity type that does not derive from element type of entity set.
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.FunctionImportSpecifiesEntitySetButDoesNotReturnEntityType">
            <summary>
                Function import specifies a binding to an entity set but does not return entities.
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.InternalError">
            <summary>
                InternalError
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.SimilarRelationshipEnd">
            <summary>
                Same Entity Set Taking part in the same role of the relationship set in two different relationship sets
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.DuplicatePropertySpecifiedInEntityKey">
            <summary>
                Entity key refers to the same property twice
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.AmbiguousFunctionReturnType">
            <summary>
                Function declares a ReturnType attribute and element
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.NullableComplexType">
            <summary>
                Nullable Complex Type not supported in Edm V1
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.NonComplexCollections">
            <summary>
                Only Complex Collections supported in Edm V1.1
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.KeyMissingOnEntityType">
            <summary>
                No Key defined on Entity Type
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.InvalidNamespaceInUsing">
            <summary>
                Invalid namespace specified in using element
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.NeedNotUseSystemNamespaceInUsing">
            <summary>
                Need not specify system namespace in using
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.CannotUseSystemNamespaceAsAlias">
            <summary>
                Cannot use a reserved/system namespace as alias
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.InvalidNamespaceName">
            <summary>
                Invalid qualification specified for type
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.InvalidEntityContainerNameInExtends">
            <summary>
                Invalid Entity Container Name in extends attribute
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.InvalidCollectionKind">
            <summary>
                Invalid CollectionKind value in property CollectionKind attribute
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.InvalidNamespaceOrAliasSpecified">
            <summary>
                Must specify namespace or alias of the schema in which this type is defined
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.EntityContainerCannotExtendItself">
            <summary>
                Entity Container cannot extend itself
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.FailedToRetrieveProviderManifest">
            <summary>
                Failed to retrieve provider manifest
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.ProviderManifestTokenMismatch">
            <summary>
                Mismatched Provider Manifest token values in SSDL artifacts
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.ProviderManifestTokenNotFound">
            <summary>
                Missing Provider Manifest token value in SSDL artifact(s)
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.EmptyCommandText">
            <summary>
                Empty CommandText element
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.InconsistentProvider">
            <summary>
                Inconsistent Provider values in SSDL artifacts
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.InconsistentProviderManifestToken">
            <summary>
                Inconsistent Provider Manifest token values in SSDL artifacts
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.DuplicatedFunctionoverloads">
            <summary>
                Duplicated Function overloads
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.InvalidProvider">
            <summary>
                InvalidProvider
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.FunctionWithNonEdmTypeNotSupported">
            <summary>
                FunctionWithNonEdmTypeNotSupported
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.ComplexTypeAsReturnTypeAndDefinedEntitySet">
            <summary>
                ComplexTypeAsReturnTypeAndDefinedEntitySet
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.ComplexTypeAsReturnTypeAndNestedComplexProperty">
            <summary>
                ComplexTypeAsReturnTypeAndDefinedEntitySet
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.FacetOnNonScalarType">
            unused 179,
            unused 180,
            unused 181,
            <summary>
                In model functions facet attribute is allowed only on ScalarTypes
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.IncorrectlyPlacedFacet">
            <summary>
                Captures several conditions where facets are placed on element where it should not exist.
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.ReturnTypeNotDeclared">
            <summary>
                Return type has not been declared
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.InvalidValueInEnumOption">
            <summary>
                Invalid value in the EnumTypeOption
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.NoCodeGenNamespaceInStructuralAnnotation">
            <summary>
                The structural annotation cannot use codegen namespaces
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.AmbiguousFunctionAndType">
            <summary>
                Function and type cannot have the same fully qualified name
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.CannotLoadDifferentVersionOfSchemaInTheSameItemCollection">
            <summary>
                Cannot load different version of schema in the same ItemCollection
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.BoolValueExpected">
            <summary>
                Expected bool value
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.EndWithoutMultiplicity">
            <summary>
                End without Multiplicity specified
            </summary>
        </member>
        <member name="F:System.Data.Entity.Edm.Parsing.Xml.Internal.XmlErrorCode.TVFReturnTypeRowHasNonScalarProperty">
            <summary>
                In SSDL, if composable function returns a collection of rows (TVF), all row properties must be of scalar types.
            </summary>
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  